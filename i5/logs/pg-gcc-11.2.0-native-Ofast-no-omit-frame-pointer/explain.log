===== 10.sql =====
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2414121.19..2414121.24 rows=20 width=202) (actual time=17050.762..17050.767 rows=20 loops=1)
   ->  Sort  (cost=2414121.19..2415594.10 rows=589163 width=202) (actual time=17050.760..17050.764 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2255371.07..2398443.78 rows=589163 width=202) (actual time=14440.143..16931.322 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=2255371.07..2383714.70 rows=589163 width=182) (actual time=14440.127..16150.011 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 33kB  Peak Memory: 33kB
                     ->  Nested Loop  (cost=2255370.88..2357202.37 rows=589163 width=182) (actual time=14439.728..15813.709 rows=1145402 loops=1)
                           ->  Merge Join  (cost=2255370.73..2342745.44 rows=589163 width=160) (actual time=14439.702..15361.095 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..74794.35 rows=1499995 width=148) (actual time=0.012..378.791 rows=1499997 loops=1)
                                 ->  Sort  (cost=2255367.69..2256840.60 rows=589163 width=16) (actual time=14439.675..14573.529 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: quicksort  Memory: 113386kB
                                       ->  Hash Join  (cost=285048.96..2198901.40 rows=589163 width=16) (actual time=1950.087..14089.580 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1874281.20 rows=15074756 width=16) (actual time=0.016..10188.502 rows=14808183 loops=1)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 45177869
                                             ->  Hash  (cost=277721.63..277721.63 rows=586186 width=8) (actual time=1947.661..1947.662 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=8016.84..277721.63 rows=586186 width=8) (actual time=120.071..1785.623 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233137
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7870.30 rows=586186 width=0) (actual time=66.307..66.307 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..2.16 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 8.245 ms
 Execution Time: 17057.543 ms
(37 rows)

===== 11.sql =====
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=95186.09..95186.09 rows=1 width=36) (actual time=1576.621..1576.626 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44526.84..44526.85 rows=1 width=32) (actual time=581.405..581.407 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..42127.21 rows=319951 width=10) (actual time=0.594..483.353 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.579..9.643 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.568..8.925 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.353..0.353 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.11 rows=82 width=14) (actual time=0.005..0.107 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50659.23..50925.86 rows=106650 width=36) (actual time=1576.619..1576.622 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=45326.72..50125.98 rows=106650 width=36) (actual time=1576.575..1576.577 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 5  Memory Usage: 135217kB  Disk Usage: 752kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..42127.21 rows=319951 width=14) (actual time=0.651..605.417 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.627..11.385 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.021..0.024 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.601..10.625 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.380..0.380 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.11 rows=82 width=18) (actual time=0.006..0.136 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.413 ms
 Execution Time: 1581.048 ms
(38 rows)

===== 12.sql =====
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3031706.34..3032568.33 rows=1 width=27) (actual time=18861.612..18861.615 rows=1 loops=1)
   ->  GroupAggregate  (cost=3031706.34..3037740.31 rows=7 width=27) (actual time=18861.611..18861.613 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3031706.34..3032460.57 rows=301695 width=27) (actual time=18812.212..18819.454 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2477843.75..3004247.97 rows=301695 width=27) (actual time=14661.534..18743.236 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410897.87 rows=14998587 width=20) (actual time=0.030..1502.076 rows=15000000 loops=1)
                     ->  Hash  (cost=2474072.56..2474072.56 rows=301695 width=15) (actual time=14660.346..14660.347 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474072.56 rows=301695 width=15) (actual time=0.272..14538.444 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.902 ms
 Execution Time: 18863.405 ms
(17 rows)

===== 13.sql =====
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1543729.85..1543729.86 rows=1 width=16) (actual time=15494.282..15494.286 rows=1 loops=1)
   ->  Sort  (cost=1543729.85..1543730.35 rows=200 width=16) (actual time=15494.281..15494.283 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1543726.85..1543728.85 rows=200 width=16) (actual time=15494.246..15494.255 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1389062.24..1521226.93 rows=1499995 width=12) (actual time=14801.509..15320.114 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 5  Memory Usage: 131121kB  Disk Usage: 27424kB
                     ->  Hash Right Join  (cost=57714.29..545476.09 rows=14997087 width=8) (actual time=418.310..10445.026 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448394.34 rows=14997087 width=8) (actual time=0.052..4833.190 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38964.35..38964.35 rows=1499995 width=4) (actual time=413.893..413.894 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38964.35 rows=1499995 width=4) (actual time=0.029..143.989 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.778 ms
 Execution Time: 15513.163 ms
(22 rows)

===== 14.sql =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1260758.95..1260758.96 rows=1 width=32) (actual time=3807.472..3807.474 rows=1 loops=1)
   ->  Aggregate  (cost=1260758.95..1260758.96 rows=1 width=32) (actual time=3807.470..3807.472 rows=1 loops=1)
         ->  Hash Join  (cost=120915.57..1246449.14 rows=817703 width=33) (actual time=982.100..3425.408 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=21279.60..1122870.61 rows=828784 width=16) (actual time=253.383..2082.344 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21072.40 rows=828784 width=0) (actual time=143.278..143.279 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60962.43..60962.43 rows=2000043 width=25) (actual time=724.172..724.173 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 74141kB
                     ->  Seq Scan on part  (cost=0.00..60962.43 rows=2000043 width=25) (actual time=0.032..320.616 rows=2000000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.176 ms
 Execution Time: 3809.935 ms
(15 rows)

===== 15.sql =====
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1242967.49..1244250.34 rows=102628 width=36) (actual time=5092.958..5133.829 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=60002.14..1219598.15 rows=2336934 width=16) (actual time=479.805..3246.239 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..59417.90 rows=2336934 width=0) (actual time=304.957..304.957 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.647 ms
 Execution Time: 5139.786 ms
(11 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2490068.62..2490078.53 rows=1 width=104) (actual time=9818.556..9818.560 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1245533.19..1245533.20 rows=1 width=32) (actual time=4906.103..4906.104 rows=1 loops=1)
           ->  HashAggregate  (cost=1242967.49..1244250.34 rows=102628 width=36) (actual time=4859.409..4899.947 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=60002.14..1219598.15 rows=2336934 width=16) (actual time=454.691..3028.556 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..59417.90 rows=2336934 width=0) (actual time=281.766..281.766 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1244535.42..1249617.06 rows=513 width=104) (actual time=9818.555..9818.556 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4824.24 rows=100000 width=72) (actual time=0.229..13.319 rows=69998 loops=1)
         ->  Sort  (cost=1244535.13..1244536.41 rows=513 width=36) (actual time=9800.922..9800.923 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1242967.49..1244512.04 rows=513 width=36) (actual time=9772.226..9800.915 rows=1 loops=1)
                     ->  HashAggregate  (cost=1242967.49..1244506.91 rows=513 width=36) (actual time=9772.225..9800.912 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=60002.14..1219598.15 rows=2336934 width=16) (actual time=453.585..3023.788 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..59417.90 rows=2336934 width=0) (actual time=280.479..280.479 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.566 ms
 Execution Time: 9825.366 ms
(31 rows)

DROP VIEW
===== 16.sql =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=403132.05..403132.05 rows=1 width=44) (actual time=6238.557..6238.561 rows=1 loops=1)
   ->  Sort  (cost=403132.05..403516.59 rows=153817 width=44) (actual time=6238.556..6238.559 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=393392.88..402362.97 rows=153817 width=44) (actual time=5779.515..6232.842 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=393392.88..394879.27 rows=594553 width=40) (actual time=5779.469..5877.193 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 122929kB
                     ->  Hash Join  (cost=98146.15..336370.95 rows=594553 width=40) (actual time=586.042..2786.937 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3466.46..231192.86 rows=3999383 width=8) (actual time=22.235..1356.908 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=10 width=4) (actual time=0.111..22.183 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90963.08..90963.08 rows=297329 width=40) (actual time=562.675..562.676 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90963.08 rows=297329 width=40) (actual time=0.043..483.382 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.954 ms
 Execution Time: 6244.518 ms
(27 rows)

===== 17-flattened.sql =====
                                                          QUERY PLAN                                                           
-------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5566746.76..6182887.70 rows=2027146 width=36) (actual time=34608.172..58406.141 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
   ->  Seq Scan on lineitem  (cost=0.00..1724333.36 rows=59979136 width=9) (actual time=0.244..8352.118 rows=59986052 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.459 ms
 Execution Time: 58567.017 ms
(7 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=235111.84..235111.85 rows=1 width=32) (actual time=399.135..399.137 rows=1 loops=1)
   ->  Aggregate  (cost=235111.84..235111.85 rows=1 width=32) (actual time=399.134..399.135 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..235061.91 rows=19972 width=8) (actual time=0.152..398.239 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..86212.02 rows=2025 width=21) (actual time=0.141..343.919 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70962.65 rows=2025 width=4) (actual time=0.128..329.605 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.52 rows=1 width=17) (actual time=0.006..0.006 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..73.38 rows=10 width=17) (actual time=0.011..0.027 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.995 ms
 Execution Time: 399.167 ms
(17 rows)

DROP TABLE
===== 17.sql =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6429300.45..6429300.46 rows=1 width=32) (actual time=59091.105..59091.109 rows=1 loops=1)
   ->  Aggregate  (cost=6429300.45..6429300.46 rows=1 width=32) (actual time=59091.103..59091.105 rows=1 loops=1)
         ->  Nested Loop  (cost=5637735.16..6429249.84 rows=20243 width=8) (actual time=34789.159..59090.229 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5637734.72..6279468.39 rows=2052 width=40) (actual time=34789.119..59032.966 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5566746.76..6182887.70 rows=2027146 width=36) (actual time=34472.827..58520.447 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724333.36 rows=59979136 width=9) (actual time=0.185..8121.858 rows=59986052 loops=1)
                     ->  Hash  (cost=70962.65..70962.65 rows=2025 width=4) (actual time=314.513..314.514 rows=1996 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 87kB
                           ->  Seq Scan on part  (cost=0.00..70962.65 rows=2025 width=4) (actual time=0.271..313.402 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..72.87 rows=10 width=17) (actual time=0.012..0.028 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.036 ms
 Execution Time: 59193.805 ms
(22 rows)

===== 18.sql =====
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9938016.06..9938016.31 rows=100 width=71) (actual time=43749.331..43749.346 rows=99 loops=1)
   ->  Sort  (cost=9938016.06..9987985.99 rows=19987975 width=71) (actual time=43749.329..43749.338 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8572889.21..9174090.02 rows=19987975 width=71) (actual time=43748.143..43749.213 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 64  Batches: 1  Memory Usage: 12369kB
               ->  Hash Join  (cost=69643.59..6617815.41 rows=19987975 width=44) (actual time=1604.757..43747.205 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=66.70..6495769.94 rows=19987975 width=25) (actual time=988.252..43130.220 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729521.62 rows=4998261 width=24) (actual time=728.654..30799.944 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650418.24 rows=14998587 width=20) (actual time=0.423..2964.134 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929146.04 rows=4998261 width=4) (actual time=630.703..26907.475 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404328.60 rows=59979136 width=9) (actual time=0.495..12924.583 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404328.60 rows=59979136 width=9) (actual time=0.023..8703.480 rows=59916431 loops=1)
                     ->  Hash  (cost=50826.95..50826.95 rows=1499995 width=23) (actual time=612.190..612.191 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50826.95 rows=1499995 width=23) (actual time=0.383..264.410 rows=1500000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 8.996 ms
 Execution Time: 43754.399 ms
(26 rows)

===== 19.sql =====


 Limit  (cost=679830.86..679830.87 rows=1 width=32) (actual time=1141.439..1141.440 rows=1 loops=1)
   ->  Aggregate  (cost=679830.86..679830.87 rows=1 width=32) (actual time=1141.438..1141.438 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..679822.89 rows=1062 width=12) (actual time=3.063..1140.092 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125963.83 rows=4622 width=30) (actual time=0.279..506.061 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..119.82 rows=1 width=21) (actual time=0.119..0.132 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.335 ms
 Execution Time: 1141.512 ms
(13 rows)

===== 1.sql =====
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3947398.70..3947398.70 rows=1 width=236) (actual time=75096.782..75096.784 rows=1 loops=1)
   ->  Sort  (cost=3947398.70..3947398.71 rows=6 width=236) (actual time=75096.781..75096.782 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3947398.50..3947398.67 rows=6 width=236) (actual time=75096.739..75096.748 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874281.20 rows=59231923 width=25) (actual time=0.181..12459.802 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.623 ms
 Execution Time: 75096.867 ms
(13 rows)

===== 20-flattened.sql =====
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2118154.22..2281805.67 rows=4877849 width=40) (actual time=100119.923..107088.290 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
   ->  Bitmap Heap Scan on lineitem  (cost=237892.27..1501417.25 rows=9265532 width=13) (actual time=1457.115..92997.229 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..235575.89 rows=9265532 width=0) (actual time=1140.894..1140.895 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.807 ms
 Execution Time: 107271.236 ms
(11 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=60841.17..60841.17 rows=1 width=52) (actual time=7584.610..7584.612 rows=1 loops=1)
   ->  Sort  (cost=60841.17..60841.17 rows=1 width=52) (actual time=7584.608..7584.610 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..60841.16 rows=1 width=52) (actual time=10.268..7579.911 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=56) (actual time=2.521..16.910 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.270..0.274 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=60) (actual time=2.244..15.368 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.610..1.611 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..14.60 rows=1 width=8) (actual time=1.846..1.846 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..13.61 rows=2 width=16) (actual time=1.619..1.839 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.11 rows=82 width=12) (actual time=0.023..0.993 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.014..0.014 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.013..0.013 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.010..0.010 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 8.576 ms
 Execution Time: 7585.931 ms
(33 rows)

DROP TABLE
===== 20.sql =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2476616.90..2476616.91 rows=1 width=52) (actual time=128322.761..128322.766 rows=1 loops=1)
   ->  Sort  (cost=2476616.90..2476616.91 rows=1 width=52) (actual time=128322.760..128322.764 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2184622.25..2476616.89 rows=1 width=52) (actual time=102475.787..128320.093 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183310388
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=56) (actual time=0.033..26.084 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.020..0.024 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=60) (actual time=0.008..17.896 rows=100000 loops=1)
               ->  Materialize  (cost=2184622.25..2471789.60 rows=6 width=8) (actual time=23.826..28.694 rows=44765 loops=4095)
                     ->  Nested Loop  (cost=2184622.25..2471789.57 rows=6 width=8) (actual time=97566.547..110359.142 rows=59002 loops=1)
                           ->  Hash Join  (cost=2184621.82..2409856.13 rows=98543 width=44) (actual time=97565.983..106169.942 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2118154.22..2281805.67 rows=4877849 width=40) (actual time=97131.572..104930.608 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=237892.27..1501417.25 rows=9265532 width=13) (actual time=1447.930..90101.207 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..235575.89 rows=9265532 width=0) (actual time=1130.081..1130.081 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65962.54..65962.54 rows=40405 width=4) (actual time=434.223..434.224 rows=21718 loops=1)
                                       Buckets: 65536  Batches: 1  Memory Usage: 1276kB
                                       ->  Seq Scan on part  (cost=0.00..65962.54 rows=40405 width=4) (actual time=0.200..426.159 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.070..0.070 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 6.938 ms
 Execution Time: 128349.463 ms
(38 rows)

===== 21.sql =====
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4270590.29..4270590.30 rows=1 width=34) (actual time=57725.947..57725.968 rows=100 loops=1)
   ->  Sort  (cost=4270590.29..4270590.30 rows=1 width=34) (actual time=57725.945..57725.959 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4270590.26..4270590.28 rows=1 width=34) (actual time=57717.439..57724.744 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4270590.26..4270590.27 rows=1 width=26) (actual time=57717.428..57720.410 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204747.83..4270590.25 rows=1 width=26) (actual time=19652.978..57548.434 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204747.26..4270582.71 rows=1 width=38) (actual time=19642.472..50979.118 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204746.83..4270575.40 rows=1 width=34) (actual time=19640.335..39448.383 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959502.12 rows=779243 width=34) (actual time=19.250..15307.999 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874281.20 rows=19993045 width=8) (actual time=0.202..11834.680 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=18.981..18.987 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=2.315..17.993 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.162..0.167 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=2.145..17.209 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.571..1.571 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874281.20..1874281.20 rows=19993045 width=8) (actual time=19604.578..19604.578 rows=37929348 loops=1)
                                             Buckets: 4194304  Batches: 16  Memory Usage: 125295kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874281.20 rows=19993045 width=8) (actual time=0.015..13251.459 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.085..0.085 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.098..0.098 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 11.563 ms
 Execution Time: 57733.214 ms
(47 rows)

===== 22.sql =====
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163141.66..163141.69 rows=1 width=72) (actual time=1796.564..1796.567 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75321.23..75321.24 rows=1 width=32) (actual time=781.562..781.563 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75201.87 rows=47742 width=6) (actual time=0.007..746.785 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87820.43..88026.73 rows=7502 width=72) (actual time=1796.563..1796.564 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87820.43..87839.18 rows=7502 width=38) (actual time=1794.292..1794.771 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87337.56 rows=7502 width=38) (actual time=781.628..1772.761 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75201.87 rows=17500 width=26) (actual time=781.608..1379.365 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.30 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.897 ms
 Execution Time: 1796.828 ms
(21 rows)

===== 2-flattened.sql =====
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=208796.04..212967.25 rows=417121 width=36) (actual time=3411.626..3863.688 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 5  Memory Usage: 139313kB  Disk Usage: 15632kB
   ->  Nested Loop  (cost=42.10..200797.27 rows=1599753 width=10) (actual time=0.680..2661.432 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=0.662..50.316 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=0.062..0.086 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.035..0.044 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=0.519..9.327 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.302..0.302 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.11 rows=82 width=14) (actual time=0.006..0.119 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.247 ms
 Execution Time: 3903.664 ms
(23 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=506972.95..506972.96 rows=1 width=193) (actual time=3596.231..3596.247 rows=100 loops=1)
   ->  Sort  (cost=506972.95..506972.96 rows=1 width=193) (actual time=3596.230..3596.240 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Hash Join  (cost=266442.12..506972.94 rows=1 width=193) (actual time=2914.798..3593.992 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70962.65 rows=7714 width=30) (actual time=0.021..389.944 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=203388.82..203388.82 rows=1599753 width=173) (actual time=2913.828..2913.831 rows=1604080 loops=1)
                     Buckets: 1048576  Batches: 4  Memory Usage: 90233kB
                     ->  Nested Loop  (cost=2.00..203388.82 rows=1599753 width=173) (actual time=0.087..2224.349 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=167) (actual time=0.071..58.606 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.036..0.038 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=171) (actual time=0.032..49.959 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=145) (actual time=0.006..16.458 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.014..0.015 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.003..0.007 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.11 rows=82 width=14) (actual time=0.004..0.096 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.004..0.004 rows=1 loops=12783)
                       Index Cond: (ps_partkey = part.p_partkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.212 ms
 Execution Time: 3596.572 ms
(32 rows)

DROP TABLE
===== 2.sql =====
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1674429.63..1674429.63 rows=1 width=193) (actual time=4897.176..4897.193 rows=100 loops=1)
   ->  Sort  (cost=1674429.63..1674429.63 rows=1 width=193) (actual time=4897.175..4897.185 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=504939.14..1674429.62 rows=1 width=193) (actual time=3464.329..4894.397 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..102914.29 rows=7714 width=30) (actual time=0.028..570.621 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=504938.21..512936.98 rows=1599753 width=173) (actual time=3464.156..3970.585 rows=1603828 loops=1)
                     ->  Sort  (cost=504938.21..508937.60 rows=1599753 width=173) (actual time=3464.152..3771.968 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293456kB
                           ->  Nested Loop  (cost=2.00..203388.82 rows=1599753 width=173) (actual time=0.060..2440.759 rows=1604080 loops=1)
                                 ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=167) (actual time=0.048..58.640 rows=20051 loops=1)
                                       Join Filter: (nation.n_regionkey = region.r_regionkey)
                                       Rows Removed by Join Filter: 79949
                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.015 rows=1 loops=1)
                                             Filter: (r_name = 'AMERICA'::bpchar)
                                             Rows Removed by Filter: 4
                                       ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=171) (actual time=0.034..50.644 rows=100000 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=145) (actual time=0.002..14.812 rows=100000 loops=1)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.020..0.021 rows=25 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.008..0.012 rows=25 loops=1)
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.11 rows=82 width=14) (actual time=0.004..0.108 rows=80 loops=20051)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=170.90..170.91 rows=1 width=32) (actual time=0.026..0.026 rows=1 loops=6398)
                       ->  Nested Loop  (cost=0.86..170.89 rows=4 width=6) (actual time=0.015..0.024 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..169.59 rows=19 width=10) (actual time=0.010..0.022 rows=4 loops=6398)
                                   ->  Nested Loop  (cost=0.72..166.66 rows=19 width=10) (actual time=0.008..0.017 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.77 rows=19 width=10) (actual time=0.005..0.006 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=25592)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.469 ms
 Execution Time: 4918.894 ms
(49 rows)

===== 3.sql =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2952008.15..2952008.17 rows=10 width=44) (actual time=34106.296..34106.302 rows=10 loops=1)
   ->  Sort  (cost=2952008.15..2959837.20 rows=3131621 width=44) (actual time=34106.295..34106.299 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2808491.00..2884334.94 rows=3131621 width=44) (actual time=34040.047..34088.640 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 8  Batches: 1  Memory Usage: 61457kB
               ->  Hash Join  (cost=525343.27..2552089.53 rows=3131621 width=24) (actual time=19549.886..33786.449 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874281.20 rows=32306358 width=16) (actual time=0.219..10724.131 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=507169.65..507169.65 rows=1453890 width=12) (actual time=19544.903..19544.906 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=138198.24..507169.65 rows=1453890 width=12) (actual time=869.712..19021.139 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=79805.69..430022.94 rows=7144420 width=16) (actual time=526.857..16404.196 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..78019.58 rows=7144420 width=0) (actual time=465.473..465.473 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54576.94..54576.94 rows=305249 width=4) (actual time=341.688..341.689 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54576.94 rows=305249 width=4) (actual time=0.356..279.935 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 6.220 ms
 Execution Time: 34113.110 ms
(29 rows)

===== 4.sql =====
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2585523.61..2585523.61 rows=1 width=24) (actual time=39647.811..39647.814 rows=1 loops=1)
   ->  Sort  (cost=2585523.61..2585523.62 rows=5 width=24) (actual time=39647.809..39647.812 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2585523.54..2585523.59 rows=5 width=24) (actual time=39647.769..39647.772 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2209932.52..2582730.19 rows=558670 width=16) (actual time=18454.056..39527.517 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7640.26..276934.44 rows=558812 width=20) (actual time=141.469..17584.369 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7500.56 rows=558812 width=0) (actual time=86.888..86.888 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874281.20..1874281.20 rows=19993045 width=4) (actual time=18302.891..18302.892 rows=37929348 loops=1)
                           Buckets: 4194304  Batches: 16  Memory Usage: 116042kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874281.20 rows=19993045 width=4) (actual time=0.391..12747.151 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 5.890 ms
 Execution Time: 39655.781 ms
(22 rows)

===== 5.sql =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2370462.64..2370462.65 rows=1 width=58) (actual time=35691.168..35691.175 rows=1 loops=1)
   ->  Sort  (cost=2370462.64..2370462.71 rows=25 width=58) (actual time=35691.166..35691.173 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2369588.24..2370462.52 rows=25 width=58) (actual time=35666.839..35691.144 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2369588.24..2369763.04 rows=69917 width=38) (actual time=35660.814..35664.358 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=421184.71..2363962.25 rows=69917 width=38) (actual time=18640.450..35623.403 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=416468.71..2349827.29 rows=1794085 width=50) (actual time=18593.776..35157.710 rows=1815327 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=353264.29..2235042.93 rows=8970425 width=20) (actual time=18145.677..33373.332 rows=9108027 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1724333.36 rows=59979136 width=20) (actual time=0.361..6896.697 rows=59986052 loops=1)
                                       ->  Hash  (cost=325224.60..325224.60 rows=2243175 width=8) (actual time=18136.392..18136.393 rows=2276638 loops=1)
                                             Buckets: 4194304  Batches: 1  Memory Usage: 121700kB
                                             ->  Bitmap Heap Scan on orders  (cost=30664.98..325224.60 rows=2243175 width=8) (actual time=229.225..17388.200 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..30104.19 rows=2243175 width=0) (actual time=168.269..168.269 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=59454.43..59454.43 rows=299999 width=38) (actual time=446.811..446.813 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                       ->  Hash Join  (cost=2.51..59454.43 rows=299999 width=38) (actual time=1.087..373.926 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50826.95 rows=1499995 width=8) (actual time=0.467..196.031 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.606..0.608 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.599..0.604 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.272..0.274 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.307..0.308 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.301..0.302 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=44.586..44.587 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.294..24.489 rows=100000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.280 ms
 Execution Time: 35694.880 ms
(44 rows)

===== 6.sql =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1502038.84..1502038.85 rows=1 width=32) (actual time=4153.384..4153.386 rows=1 loops=1)
   ->  Aggregate  (cost=1502038.84..1502038.85 rows=1 width=32) (actual time=4153.383..4153.384 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=299265.55..1496112.92 rows=1185185 width=12) (actual time=1215.576..3740.230 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..298969.26 rows=1185185 width=0) (actual time=1041.081..1041.081 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.708 ms
 Execution Time: 4155.929 ms
(10 rows)

===== 7.sql =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2515007.84..2515007.96 rows=1 width=116) (actual time=92097.962..92097.970 rows=1 loops=1)
   ->  GroupAggregate  (cost=2515007.84..2516192.26 rows=10028 width=116) (actual time=92097.961..92097.967 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2515007.84..2515155.55 rows=59086 width=96) (actual time=92089.845..92090.726 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1022333.49..2510325.12 rows=59086 width=96) (actual time=7818.402..92017.550 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=471260.09..1951508.13 rows=1419789 width=46) (actual time=2446.198..86080.925 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=467635.69..1865384.21 rows=18213768 width=24) (actual time=2415.325..81875.192 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..463082.24 rows=18213768 width=0) (actual time=2078.132..2078.132 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=30.830..30.833 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.424..29.183 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.283..18.935 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.128..0.129 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.120..0.122 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536074.82..536074.82 rows=1199887 width=30) (actual time=5366.006..5366.008 rows=1191175 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                           ->  Hash Join  (cost=56933.34..536074.82 rows=1199887 width=30) (actual time=369.866..5043.804 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..410897.87 rows=14998587 width=8) (actual time=0.033..1895.740 rows=15000000 loops=1)
                                 ->  Hash  (cost=55433.34..55433.34 rows=120000 width=30) (actual time=369.552..369.553 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55433.34 rows=120000 width=30) (actual time=0.495..342.129 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50826.95 rows=1499995 width=8) (actual time=0.457..192.373 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.024..0.024 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.016..0.019 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 8.600 ms
 Execution Time: 92103.039 ms
(45 rows)

===== 8.sql =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1987172.14..1987172.38 rows=1 width=64) (actual time=42318.526..42318.535 rows=1 loops=1)
   ->  GroupAggregate  (cost=1987172.14..1987741.81 rows=2406 width=64) (actual time=42318.525..42318.533 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=1987172.14..1987230.09 rows=23180 width=70) (actual time=42312.429..42312.923 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=495957.04..1985491.52 rows=23180 width=70) (actual time=9665.363..42280.145 rows=23842 loops=1)
                     ->  Hash Join  (cost=495956.89..1984812.74 rows=23180 width=20) (actual time=9665.321..42206.212 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=491490.89..1980284.30 rows=23789 width=20) (actual time=9625.134..42146.510 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1487080.26 rows=393520 width=20) (actual time=0.576..32249.191 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65962.54 rows=13300 width=4) (actual time=0.397..460.840 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..106.55 rows=30 width=24) (actual time=0.118..2.426 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=480156.90..480156.90 rows=906684 width=8) (actual time=9618.221..9618.225 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=125176.42..480156.90 rows=906684 width=8) (actual time=823.500..9360.614 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=61972.00..390885.32 rows=4533421 width=12) (actual time=357.773..7690.801 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..60838.64 rows=4533421 width=0) (actual time=297.619..297.620 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59454.43..59454.43 rows=299999 width=4) (actual time=464.578..464.581 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59454.43 rows=299999 width=4) (actual time=0.091..405.761 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50826.95 rows=1499995 width=8) (actual time=0.026..231.783 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.054..0.057 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.043..0.050 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.009..0.011 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=39.907..39.908 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.260..21.972 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.005..0.005 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 13.510 ms
 Execution Time: 42320.871 ms
(52 rows)

===== 9.sql =====
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3031186.78..3031186.78 rows=1 width=90) (actual time=238432.175..238432.767 rows=1 loops=1)
   ->  Sort  (cost=3031186.78..3031337.16 rows=60150 width=90) (actual time=238432.174..238432.347 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3029983.78..3030886.03 rows=60150 width=90) (actual time=238428.107..238428.617 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=2333942.25..2989212.68 rows=2329777 width=81) (actual time=225750.920..235232.473 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=2333940.69..2976234.26 rows=2329777 width=31) (actual time=225749.552..234010.626 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..410897.87 rows=14998587 width=8) (actual time=0.159..2547.274 rows=15000000 loops=1)
                           ->  Hash  (cost=2288891.48..2288891.48 rows=2329777 width=31) (actual time=225744.162..225744.168 rows=3248192 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 122446kB
                                 ->  Nested Loop  (cost=71439.10..2288891.48 rows=2329777 width=31) (actual time=513.239..222531.315 rows=3248192 loops=1)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Hash Join  (cost=71438.66..347657.52 rows=323183 width=26) (actual time=512.916..4426.663 rows=433248 loops=1)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Hash Join  (cost=66972.66..342343.13 rows=323183 width=18) (actual time=469.625..3998.503 rows=433248 loops=1)
                                                   Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                   ->  Seq Scan on partsupp  (cost=0.00..254373.66 rows=7998766 width=14) (actual time=0.525..1754.349 rows=8000000 loops=1)
                                                   ->  Hash  (cost=65962.54..65962.54 rows=80810 width=4) (actual time=468.773..468.776 rows=108312 loops=1)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 4832kB
                                                         ->  Seq Scan on part  (cost=0.00..65962.54 rows=80810 width=4) (actual time=0.420..444.245 rows=108312 loops=1)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 1891688
                                             ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=42.991..42.992 rows=100000 loops=1)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                                   ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.435..24.858 rows=100000 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..5.99 rows=1 width=29) (actual time=0.071..0.498 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.163..0.164 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.149..0.152 rows=25 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 30.580 ms
 Execution Time: 238435.123 ms
(37 rows)

