===== 10.sql =====
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2399993.18..2399993.23 rows=20 width=201) (actual time=18252.418..18252.424 rows=20 loops=1)
   ->  Sort  (cost=2399993.18..2401341.90 rows=539487 width=201) (actual time=18252.416..18252.420 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2248001.89..2385637.62 rows=539487 width=201) (actual time=15307.202..18108.939 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=2248001.89..2372150.45 rows=539487 width=181) (actual time=15307.180..17180.223 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 33kB  Peak Memory: 33kB
                     ->  Nested Loop  (cost=2248001.70..2347873.53 rows=539487 width=181) (actual time=15306.785..16767.124 rows=1145402 loops=1)
                           ->  Merge Join  (cost=2248001.55..2334630.98 rows=539487 width=159) (actual time=15306.759..16289.432 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..74794.79 rows=1500024 width=147) (actual time=0.015..423.304 rows=1499997 loops=1)
                                 ->  Sort  (cost=2247994.05..2249342.77 rows=539487 width=16) (actual time=15306.728..15446.123 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: quicksort  Memory: 113386kB
                                       ->  Hash Join  (cost=283395.56..2196631.58 rows=539487 width=16) (actual time=2128.461..14895.548 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1874338.80 rows=14817984 width=16) (actual time=0.017..10727.494 rows=14808183 loops=1)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 45177869
                                             ->  Hash  (cost=276569.36..276569.36 rows=546096 width=8) (actual time=2125.927..2125.928 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=7465.92..276569.36 rows=546096 width=8) (actual time=130.872..1977.952 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233137
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7329.40 rows=546096 width=0) (actual time=77.681..77.682 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..2.16 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 8.093 ms
 Execution Time: 18259.208 ms
(37 rows)

===== 11.sql =====
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=94749.62..94749.62 rows=1 width=36) (actual time=1618.668..1618.673 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44307.58..44307.59 rows=1 width=32) (actual time=585.226..585.229 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..41907.14 rows=320058 width=10) (actual time=0.643..478.640 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.627..9.770 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.012 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.617..9.044 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.400..0.401 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.08 rows=80 width=14) (actual time=0.005..0.106 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50442.02..50708.74 rows=106686 width=36) (actual time=1618.666..1618.668 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=45107.72..49908.59 rows=106686 width=36) (actual time=1618.621..1618.623 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 5  Memory Usage: 135217kB  Disk Usage: 752kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..41907.14 rows=320058 width=14) (actual time=0.695..607.597 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.672..11.566 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.022..0.026 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.644..10.758 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.427..0.427 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=18) (actual time=0.006..0.136 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.451 ms
 Execution Time: 1623.093 ms
(38 rows)

===== 12.sql =====
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3029991.68..3030810.18 rows=1 width=27) (actual time=19656.720..19656.723 rows=1 loops=1)
   ->  GroupAggregate  (cost=3029991.68..3035721.23 rows=7 width=27) (actual time=19656.718..19656.721 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3029991.68..3030707.86 rows=286474 width=27) (actual time=19605.506..19612.914 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2477757.17..3004025.61 rows=286474 width=27) (actual time=15182.453..19523.306 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410907.26 rows=14999526 width=20) (actual time=0.194..1750.581 rows=15000000 loops=1)
                     ->  Hash  (cost=2474176.24..2474176.24 rows=286474 width=15) (actual time=15179.805..15179.806 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474176.24 rows=286474 width=15) (actual time=0.249..15069.591 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.902 ms
 Execution Time: 19658.290 ms
(17 rows)

===== 13.sql =====
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1513594.23..1513594.23 rows=1 width=16) (actual time=16826.938..16826.941 rows=1 loops=1)
   ->  Sort  (cost=1513594.23..1513594.73 rows=200 width=16) (actual time=16826.936..16826.939 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1513591.23..1513593.23 rows=200 width=16) (actual time=16826.900..16826.909 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1362457.85..1491090.87 rows=1500024 width=12) (actual time=16059.345..16628.215 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 5  Memory Usage: 131121kB  Disk Usage: 27424kB
                     ->  Hash Right Join  (cost=57715.09..544301.89 rows=14544995 width=8) (actual time=394.895..11211.226 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448406.08 rows=14544995 width=8) (actual time=0.053..5019.784 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38964.79..38964.79 rows=1500024 width=4) (actual time=390.593..390.594 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38964.79 rows=1500024 width=4) (actual time=0.029..135.845 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.782 ms
 Execution Time: 16844.624 ms
(22 rows)

===== 14.sql =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1254056.60..1254056.61 rows=1 width=32) (actual time=3804.052..3804.055 rows=1 loops=1)
   ->  Aggregate  (cost=1254056.60..1254056.61 rows=1 width=32) (actual time=3804.051..3804.053 rows=1 loops=1)
         ->  Hash Join  (cost=120522.92..1239820.55 rows=813488 width=33) (actual time=966.022..3396.949 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=20886.82..1116430.04 rows=813488 width=16) (actual time=265.702..2075.126 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20683.44 rows=813488 width=0) (actual time=159.035..159.035 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60962.49..60962.49 rows=2000049 width=25) (actual time=695.831..695.832 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 74141kB
                     ->  Seq Scan on part  (cost=0.00..60962.49 rows=2000049 width=25) (actual time=0.032..312.762 rows=2000000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.188 ms
 Execution Time: 3806.415 ms
(15 rows)

===== 15.sql =====
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1241327.08..1242564.68 rows=99008 width=36) (actual time=5189.816..5233.675 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=59170.53..1218281.26 rows=2304582 width=16) (actual time=546.141..3339.979 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..58594.39 rows=2304582 width=0) (actual time=376.625..376.625 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.628 ms
 Execution Time: 5239.472 ms
(11 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2486641.89..2486652.15 rows=1 width=103) (actual time=10007.717..10007.721 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1243802.28..1243802.29 rows=1 width=32) (actual time=5000.093..5000.094 rows=1 loops=1)
           ->  HashAggregate  (cost=1241327.08..1242564.68 rows=99008 width=36) (actual time=4947.608..4992.370 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=59170.53..1218281.26 rows=2304582 width=16) (actual time=517.471..3121.134 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..58594.39 rows=2304582 width=0) (actual time=349.785..349.786 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1242839.60..1247920.54 rows=495 width=103) (actual time=10007.715..10007.717 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4823.81 rows=100000 width=71) (actual time=0.343..14.369 rows=69998 loops=1)
         ->  Sort  (cost=1242839.30..1242840.54 rows=495 width=36) (actual time=9988.923..9988.925 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1241327.08..1242817.15 rows=495 width=36) (actual time=9957.421..9988.915 rows=1 loops=1)
                     ->  HashAggregate  (cost=1241327.08..1242812.20 rows=495 width=36) (actual time=9957.420..9988.912 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=59170.53..1218281.26 rows=2304582 width=16) (actual time=517.006..3112.524 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..58594.39 rows=2304582 width=0) (actual time=349.104..349.104 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.567 ms
 Execution Time: 10014.897 ms
(31 rows)

DROP VIEW
===== 16.sql =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=402235.23..402235.23 rows=1 width=44) (actual time=6428.389..6428.392 rows=1 loops=1)
   ->  Sort  (cost=402235.23..402617.67 rows=152978 width=44) (actual time=6428.387..6428.390 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=392604.46..401470.34 rows=152978 width=44) (actual time=5944.737..6421.742 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=392604.46..394071.68 rows=586888 width=40) (actual time=5944.692..6041.319 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 122929kB
                     ->  Hash Join  (cost=98097.16..336372.59 rows=586888 width=40) (actual time=638.126..2964.510 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3466.46..231239.95 rows=4000728 width=8) (actual time=23.569..1480.907 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=10 width=4) (actual time=0.104..23.515 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90963.23..90963.23 rows=293398 width=40) (actual time=613.412..613.413 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90963.23 rows=293398 width=40) (actual time=0.044..535.491 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.959 ms
 Execution Time: 6434.221 ms
(27 rows)

===== 17-flattened.sql =====
                                                          QUERY PLAN                                                           
-------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5567088.04..6179340.48 rows=1764913 width=36) (actual time=37761.146..63309.262 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
   ->  Seq Scan on lineitem  (cost=0.00..1724379.44 rows=59983744 width=9) (actual time=0.227..8834.595 rows=59986052 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.440 ms
 Execution Time: 63472.346 ms
(7 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=237271.75..237271.76 rows=1 width=32) (actual time=442.448..442.450 rows=1 loops=1)
   ->  Aggregate  (cost=237271.75..237271.76 rows=1 width=32) (actual time=442.447..442.448 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..237225.83 rows=18364 width=8) (actual time=0.156..441.419 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..84934.57 rows=1837 width=20) (actual time=0.145..386.447 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70962.74 rows=1837 width=4) (actual time=0.133..371.530 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.60 rows=1 width=16) (actual time=0.007..0.007 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..82.76 rows=11 width=17) (actual time=0.011..0.027 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.699 ms
 Execution Time: 442.481 ms
(17 rows)

DROP TABLE
===== 17.sql =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6406157.95..6406157.96 rows=1 width=32) (actual time=63640.176..63640.180 rows=1 loops=1)
   ->  Aggregate  (cost=6406157.95..6406157.96 rows=1 width=32) (actual time=63640.175..63640.177 rows=1 loops=1)
         ->  Nested Loop  (cost=5638074.18..6406117.43 rows=16206 width=8) (actual time=37675.124..63639.202 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5638073.74..6272608.22 rows=1621 width=40) (actual time=37675.088..63581.189 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5567088.04..6179340.48 rows=1764913 width=36) (actual time=37345.123..63096.765 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724379.44 rows=59983744 width=9) (actual time=0.341..8597.326 rows=59986052 loops=1)
                     ->  Hash  (cost=70962.74..70962.74 rows=1837 width=4) (actual time=328.244..328.244 rows=1996 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 87kB
                           ->  Seq Scan on part  (cost=0.00..70962.74 rows=1837 width=4) (actual time=0.221..327.430 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..82.22 rows=11 width=17) (actual time=0.012..0.028 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.082 ms
 Execution Time: 63754.568 ms
(22 rows)

===== 18.sql =====
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9938581.91..9938582.16 rows=100 width=71) (actual time=48191.666..48191.682 rows=99 loops=1)
   ->  Sort  (cost=9938581.91..9988556.40 rows=19989794 width=71) (actual time=48191.665..48191.674 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8573330.84..9174586.36 rows=19989794 width=71) (actual time=48189.998..48191.533 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 64  Batches: 1  Memory Usage: 12369kB
               ->  Hash Join  (cost=69989.36..6618079.11 rows=19989794 width=44) (actual time=1620.704..48189.015 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=411.82..6496028.22 rows=19989794 width=25) (actual time=1050.120..47617.954 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729656.14 rows=4998645 width=24) (actual time=767.261..34260.138 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650432.33 rows=14999526 width=20) (actual time=0.302..3097.074 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929255.48 rows=4998645 width=4) (actual time=668.925..30222.189 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404397.73 rows=59983744 width=9) (actual time=0.390..13372.764 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404397.73 rows=59983744 width=9) (actual time=0.023..9604.646 rows=59916431 loops=1)
                     ->  Hash  (cost=50827.24..50827.24 rows=1500024 width=23) (actual time=566.313..566.314 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50827.24 rows=1500024 width=23) (actual time=0.412..254.061 rows=1500000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 8.345 ms
 Execution Time: 48196.615 ms
(26 rows)

===== 19.sql =====


 Limit  (cost=767960.32..767960.33 rows=1 width=32) (actual time=1180.593..1180.595 rows=1 loops=1)
   ->  Aggregate  (cost=767960.32..767960.33 rows=1 width=32) (actual time=1180.592..1180.593 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..767952.03 rows=1104 width=12) (actual time=3.146..1179.150 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125964.08 rows=4793 width=30) (actual time=0.296..544.678 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..133.93 rows=1 width=21) (actual time=0.119..0.132 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.374 ms
 Execution Time: 1180.674 ms
(13 rows)

===== 1.sql =====
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3947137.52..3947137.52 rows=1 width=236) (actual time=87273.300..87273.302 rows=1 loops=1)
   ->  Sort  (cost=3947137.52..3947137.54 rows=6 width=236) (actual time=87273.299..87273.300 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3947137.33..3947137.49 rows=6 width=236) (actual time=87273.262..87273.271 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874338.80 rows=59222815 width=25) (actual time=0.244..14526.056 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.636 ms
 Execution Time: 87273.377 ms
(13 rows)

===== 20-flattened.sql =====
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2095721.97..2256629.13 rows=4831017 width=40) (actual time=105559.415..113238.918 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
   ->  Bitmap Heap Scan on lineitem  (cost=232513.19..1492901.95 rows=9056451 width=13) (actual time=1740.379..97472.966 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..230249.08 rows=9056451 width=0) (actual time=1436.218..1436.218 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.941 ms
 Execution Time: 113425.580 ms
(11 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=58938.58..58938.58 rows=1 width=51) (actual time=5396.429..5396.432 rows=1 loops=1)
   ->  Sort  (cost=58938.58..58938.58 rows=1 width=51) (actual time=5396.427..5396.429 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..58938.57 rows=1 width=51) (actual time=9.801..5391.825 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=55) (actual time=2.463..16.510 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.246..0.251 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=59) (actual time=2.206..15.087 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.709..1.709 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..14.12 rows=1 width=8) (actual time=1.312..1.312 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..13.63 rows=1 width=16) (actual time=1.130..1.305 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=12) (actual time=0.015..0.873 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.009..0.009 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 13.236 ms
 Execution Time: 5397.766 ms
(33 rows)

DROP TABLE
===== 20.sql =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2419229.14..2419229.14 rows=1 width=51) (actual time=136291.715..136291.720 rows=1 loops=1)
   ->  Sort  (cost=2419229.14..2419229.14 rows=1 width=51) (actual time=136291.713..136291.718 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2161937.55..2419229.13 rows=1 width=51) (actual time=110364.193..136288.227 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183310388
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=55) (actual time=0.028..25.692 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.018..0.022 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=59) (actual time=0.006..17.695 rows=100000 loops=1)
               ->  Materialize  (cost=2161937.55..2414581.82 rows=3 width=8) (actual time=25.812..30.677 rows=44765 loops=4095)
                     ->  Nested Loop  (cost=2161937.55..2414581.81 rows=3 width=8) (actual time=105698.693..118328.887 rows=59002 loops=1)
                           ->  Hash Join  (cost=2161937.12..2383835.89 rows=48799 width=44) (actual time=105698.044..114666.449 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2095721.97..2256629.13 rows=4831017 width=40) (actual time=105364.169..113578.424 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=232513.19..1492901.95 rows=9056451 width=13) (actual time=1739.923..97180.806 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..230249.08 rows=9056451 width=0) (actual time=1436.216..1436.216 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65962.61..65962.61 rows=20203 width=4) (actual time=333.746..333.747 rows=21718 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1020kB
                                       ->  Seq Scan on part  (cost=0.00..65962.61 rows=20203 width=4) (actual time=0.046..327.809 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.061..0.061 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 5.162 ms
 Execution Time: 136321.187 ms
(38 rows)

===== 21.sql =====
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4271757.68..4271757.68 rows=1 width=34) (actual time=61493.547..61493.564 rows=100 loops=1)
   ->  Sort  (cost=4271757.68..4271757.68 rows=1 width=34) (actual time=61493.545..61493.556 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4271757.65..4271757.67 rows=1 width=34) (actual time=61484.285..61492.232 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4271757.65..4271757.65 rows=1 width=26) (actual time=61484.272..61487.480 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204830.63..4271757.64 rows=1 width=26) (actual time=18660.659..61314.475 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204830.06..4271750.10 rows=1 width=38) (actual time=18651.002..53129.030 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204829.63..4271742.78 rows=1 width=34) (actual time=18649.048..39218.794 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959770.88 rows=799783 width=34) (actual time=19.501..15585.093 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874338.80 rows=19994581 width=8) (actual time=0.196..12133.756 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=19.263..19.265 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=2.330..18.393 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.173..0.177 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=2.153..17.662 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.695..1.696 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874338.80..1874338.80 rows=19994581 width=8) (actual time=18616.330..18616.330 rows=37929348 loops=1)
                                             Buckets: 4194304  Batches: 16  Memory Usage: 125295kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874338.80 rows=19994581 width=8) (actual time=0.016..13187.518 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.103..0.103 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.122..0.122 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 11.375 ms
 Execution Time: 61495.965 ms
(47 rows)

===== 22.sql =====
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162987.15..162987.18 rows=1 width=72) (actual time=1938.032..1938.034 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75321.95..75321.96 rows=1 width=32) (actual time=863.655..863.656 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75202.63 rows=47727 width=6) (actual time=0.009..823.506 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87665.19..87882.39 rows=7898 width=72) (actual time=1938.030..1938.031 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87665.19..87684.94 rows=7898 width=38) (actual time=1935.909..1936.334 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87153.90 rows=7898 width=38) (actual time=863.727..1912.535 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75202.63 rows=17500 width=26) (actual time=863.703..1520.892 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.30 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.905 ms
 Execution Time: 1938.325 ms
(21 rows)

===== 2-flattened.sql =====
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=207698.42..212195.32 rows=449690 width=36) (actual time=3420.303..3913.245 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 5  Memory Usage: 139313kB  Disk Usage: 15632kB
   ->  Nested Loop  (cost=42.10..199696.96 rows=1600291 width=10) (actual time=0.731..2692.676 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=0.713..51.880 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=0.066..0.092 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.036..0.046 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.018..0.019 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=0.561..9.660 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.347..0.347 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.006..0.121 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.293 ms
 Execution Time: 3952.489 ms
(23 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=502608.33..502608.34 rows=1 width=192) (actual time=3604.673..3604.694 rows=100 loops=1)
   ->  Sort  (cost=502608.33..502608.34 rows=1 width=192) (actual time=3604.672..3604.686 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Hash Join  (cost=265362.88..502608.32 rows=1 width=192) (actual time=2907.491..3601.907 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70962.74 rows=7519 width=30) (actual time=0.020..395.829 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=202288.52..202288.52 rows=1600291 width=172) (actual time=2906.478..2906.481 rows=1604080 loops=1)
                     Buckets: 1048576  Batches: 4  Memory Usage: 90233kB
                     ->  Nested Loop  (cost=2.00..202288.52 rows=1600291 width=172) (actual time=0.074..2205.303 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.059..60.938 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.023..0.025 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.033..52.213 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.007..16.901 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.014..0.015 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.003..0.007 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.004..0.094 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.004..0.004 rows=1 loops=12783)
                       Index Cond: (ps_partkey = part.p_partkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.275 ms
 Execution Time: 3605.022 ms
(32 rows)

DROP TABLE
===== 2.sql =====
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1596022.00..1596022.01 rows=1 width=192) (actual time=5089.934..5089.951 rows=100 loops=1)
   ->  Sort  (cost=1596022.00..1596022.01 rows=1 width=192) (actual time=5089.933..5089.943 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=503944.03..1596021.99 rows=1 width=192) (actual time=3606.630..5086.757 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..102914.41 rows=7519 width=30) (actual time=0.033..586.052 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=503942.73..511944.18 rows=1600291 width=172) (actual time=3606.451..4118.578 rows=1603828 loops=1)
                     ->  Sort  (cost=503942.73..507943.45 rows=1600291 width=172) (actual time=3606.446..3919.659 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293456kB
                           ->  Nested Loop  (cost=2.00..202288.52 rows=1600291 width=172) (actual time=0.066..2478.624 rows=1604080 loops=1)
                                 ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.053..62.374 rows=20051 loops=1)
                                       Join Filter: (nation.n_regionkey = region.r_regionkey)
                                       Rows Removed by Join Filter: 79949
                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                                             Filter: (r_name = 'AMERICA'::bpchar)
                                             Rows Removed by Filter: 4
                                       ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.037..53.969 rows=100000 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.002..15.079 rows=100000 loops=1)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.022..0.023 rows=25 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.006..0.010 rows=25 loops=1)
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.005..0.107 rows=80 loops=20051)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=162.40..162.41 rows=1 width=32) (actual time=0.029..0.029 rows=1 loops=6398)
                       ->  Nested Loop  (cost=0.86..162.39 rows=4 width=6) (actual time=0.017..0.027 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..161.10 rows=18 width=10) (actual time=0.011..0.024 rows=4 loops=6398)
                                   ->  Nested Loop  (cost=0.72..158.33 rows=18 width=10) (actual time=0.009..0.019 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.75 rows=18 width=10) (actual time=0.005..0.006 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=25592)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.573 ms
 Execution Time: 5109.202 ms
(49 rows)

===== 3.sql =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2952651.37..2952651.40 rows=10 width=44) (actual time=37523.416..37523.422 rows=10 loops=1)
   ->  Sort  (cost=2952651.37..2960462.69 rows=3124526 width=44) (actual time=37523.414..37523.418 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2809459.38..2885131.49 rows=3124526 width=44) (actual time=37446.894..37501.414 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 8  Batches: 1  Memory Usage: 61457kB
               ->  Hash Join  (cost=526137.01..2553638.81 rows=3124526 width=24) (actual time=22474.982..37158.510 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874338.80 rows=32511397 width=16) (actual time=0.269..11153.102 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=508117.79..508117.79 rows=1441538 width=12) (actual time=22470.072..22470.075 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=138569.68..508117.79 rows=1441538 width=12) (actual time=1067.056..21941.014 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=80229.19..430923.05 rows=7182549 width=16) (actual time=710.707..19275.772 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..78433.55 rows=7182549 width=0) (actual time=651.152..651.153 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54577.30..54577.30 rows=301055 width=4) (actual time=355.187..355.187 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54577.30 rows=301055 width=4) (actual time=0.372..297.388 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 7.582 ms
 Execution Time: 37530.140 ms
(29 rows)

===== 4.sql =====
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2586157.88..2586157.88 rows=1 width=24) (actual time=41981.639..41981.642 rows=1 loops=1)
   ->  Sort  (cost=2586157.88..2586157.89 rows=5 width=24) (actual time=41981.637..41981.640 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2586157.80..2586157.85 rows=5 width=24) (actual time=41981.592..41981.596 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2210109.98..2583329.95 rows=565571 width=16) (actual time=17784.307..41848.194 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7734.92..277132.51 rows=565706 width=20) (actual time=129.879..20278.982 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7593.50 rows=565706 width=0) (actual time=76.852..76.853 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874338.80..1874338.80 rows=19994581 width=4) (actual time=17644.667..17644.667 rows=37929348 loops=1)
                           Buckets: 4194304  Batches: 16  Memory Usage: 116042kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874338.80 rows=19994581 width=4) (actual time=0.440..12582.834 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 5.309 ms
 Execution Time: 41983.343 ms
(22 rows)

===== 5.sql =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2397279.56..2397279.56 rows=1 width=58) (actual time=37037.836..37037.844 rows=1 loops=1)
   ->  Sort  (cost=2397279.56..2397279.62 rows=25 width=58) (actual time=37037.835..37037.842 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2396364.92..2397279.44 rows=25 width=58) (actual time=37009.945..37037.811 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2396364.92..2396547.76 rows=73136 width=38) (actual time=37002.961..37006.952 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=413249.60..2390456.16 rows=73136 width=38) (actual time=22333.733..36964.487 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=408533.60..2376139.34 rows=1828725 width=50) (actual time=22290.356..36504.893 rows=1815327 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..1724379.44 rows=59983744 width=20) (actual time=0.238..7034.135 rows=59986052 loops=1)
                                 ->  Hash  (cost=402817.46..402817.46 rows=457291 width=38) (actual time=22288.839..22288.843 rows=453399 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 35976kB
                                       ->  Hash Join  (cost=94461.54..402817.46 rows=457291 width=38) (actual time=742.077..22051.054 rows=453399 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=31256.59..326465.40 rows=2286454 width=8) (actual time=284.751..20731.149 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..30684.98 rows=2286454 width=0) (actual time=225.237..225.237 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Hash  (cost=59454.89..59454.89 rows=300005 width=38) (actual time=456.174..456.177 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                                   ->  Hash Join  (cost=2.51..59454.89 rows=300005 width=38) (actual time=1.134..384.931 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50827.24 rows=1500024 width=8) (actual time=0.491..208.298 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.621..0.623 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.614..0.620 rows=5 loops=1)
                                                                     Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.317..0.319 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.280..0.281 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.272..0.274 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=41.773..41.774 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.310..24.970 rows=100000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.711 ms
 Execution Time: 37039.691 ms
(44 rows)

===== 6.sql =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1504020.13..1504020.14 rows=1 width=32) (actual time=4393.271..4393.272 rows=1 loops=1)
   ->  Aggregate  (cost=1504020.13..1504020.14 rows=1 width=32) (actual time=4393.269..4393.270 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=300052.38..1498050.74 rows=1193877 width=12) (actual time=1374.852..3950.382 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..299753.91 rows=1193877 width=0) (actual time=1205.298..1205.298 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.684 ms
 Execution Time: 4395.789 ms
(10 rows)

===== 7.sql =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2520710.22..2520710.34 rows=1 width=116) (actual time=81379.415..81379.423 rows=1 loops=1)
   ->  GroupAggregate  (cost=2520710.22..2521928.16 rows=10028 width=116) (actual time=81379.413..81379.420 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2520710.22..2520862.72 rows=61001 width=96) (actual time=81369.735..81370.734 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1025119.42..2515861.70 rows=61001 width=96) (actual time=8559.370..81294.895 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=1021495.02..2504242.75 rows=1465804 width=46) (actual time=8525.694..80752.596 rows=1448126 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=470406.64..1869786.80 rows=18322544 width=24) (actual time=3087.761..71648.235 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..465826.01 rows=18322544 width=0) (actual time=2763.893..2763.893 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=536088.85..536088.85 rows=1199962 width=30) (actual time=5433.433..5433.437 rows=1191175 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                                 ->  Hash Join  (cost=56933.74..536088.85 rows=1199962 width=30) (actual time=384.691..5119.648 rows=1191175 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..410907.26 rows=14999526 width=8) (actual time=0.034..1950.983 rows=15000000 loops=1)
                                       ->  Hash  (cost=55433.71..55433.71 rows=120002 width=30) (actual time=384.352..384.355 rows=119622 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                             ->  Hash Join  (cost=1.40..55433.71 rows=120002 width=30) (actual time=0.432..356.748 rows=119622 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50827.24 rows=1500024 width=8) (actual time=0.392..205.984 rows=1500000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.025..0.026 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.016..0.019 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=31.842..31.844 rows=7981 loops=1)
                           Buckets: 8192  Batches: 1  Memory Usage: 548kB
                           ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.429..30.283 rows=7981 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.250..19.982 rows=100000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.167..0.167 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.160..0.162 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 8.880 ms
 Execution Time: 81384.302 ms
(45 rows)

===== 8.sql =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2143879.75..2143880.00 rows=1 width=64) (actual time=50217.161..50217.169 rows=1 loops=1)
   ->  GroupAggregate  (cost=2143879.75..2144484.14 rows=2406 width=64) (actual time=50217.160..50217.167 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=2143879.75..2143941.56 rows=24723 width=70) (actual time=50210.299..50210.866 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=500168.61..2142075.76 rows=24723 width=70) (actual time=11245.124..50174.741 rows=23842 loops=1)
                     ->  Hash Join  (cost=500168.46..2141355.41 rows=24723 width=20) (actual time=11245.074..50097.542 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=495702.46..2136824.52 rows=24723 width=20) (actual time=11203.750..50035.504 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1639379.12 rows=398972 width=20) (actual time=1.546..38553.835 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65962.61 rows=13303 width=4) (actual time=1.141..494.758 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..117.94 rows=34 width=24) (actual time=0.158..2.905 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=484083.47..484083.47 rows=929484 width=8) (actual time=11195.510..11195.514 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=126737.46..484083.47 rows=929484 width=8) (actual time=1093.288..10948.750 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=63532.51..394155.84 rows=4647422 width=12) (actual time=487.093..9133.919 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..62370.65 rows=4647422 width=0) (actual time=428.057..428.057 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59454.89..59454.89 rows=300005 width=4) (actual time=605.045..605.048 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59454.89 rows=300005 width=4) (actual time=0.709..542.257 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50827.24 rows=1500024 width=8) (actual time=0.447..358.818 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.245..0.246 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.221..0.233 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.011..0.014 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.196..0.197 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.182..0.185 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=41.034..41.035 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.256..25.101 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.006..0.006 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 14.939 ms
 Execution Time: 50219.407 ms
(52 rows)

===== 9.sql =====
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1841280.33..1841280.34 rows=1 width=90) (actual time=248234.530..248235.043 rows=1 loops=1)
   ->  Sort  (cost=1841280.33..1841430.71 rows=60150 width=90) (actual time=248234.025..248234.034 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1840077.33..1840979.58 rows=60150 width=90) (actual time=248232.663..248233.122 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=1332847.89..1818870.97 rows=1211792 width=81) (actual time=233498.499..244817.859 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=1332846.32..1812119.73 rows=1211792 width=31) (actual time=233497.317..243556.401 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..410907.26 rows=14999526 width=8) (actual time=0.225..2028.843 rows=15000000 loops=1)
                           ->  Hash  (cost=1317698.92..1317698.92 rows=1211792 width=31) (actual time=233490.703..233490.707 rows=3248192 loops=1)
                                 Buckets: 2097152 (originally 2097152)  Batches: 2 (originally 1)  Memory Usage: 122446kB
                                 ->  Nested Loop  (cost=70934.12..1317698.92 rows=1211792 width=31) (actual time=516.623..230042.420 rows=3248192 loops=1)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Hash Join  (cost=70933.68..346762.45 rows=161645 width=26) (actual time=516.318..4416.504 rows=433248 loops=1)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Hash Join  (cost=66467.68..341872.11 rows=161645 width=18) (actual time=475.069..3956.408 rows=433248 loops=1)
                                                   Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                   ->  Seq Scan on partsupp  (cost=0.00..254400.57 rows=8001457 width=14) (actual time=0.419..1792.269 rows=8000000 loops=1)
                                                   ->  Hash  (cost=65962.61..65962.61 rows=40405 width=4) (actual time=474.452..474.452 rows=108312 loops=1)
                                                         Buckets: 131072 (originally 65536)  Batches: 1 (originally 1)  Memory Usage: 4832kB
                                                         ->  Seq Scan on part  (cost=0.00..65962.61 rows=40405 width=4) (actual time=0.460..451.047 rows=108312 loops=1)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 1891688
                                             ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=40.945..40.945 rows=100000 loops=1)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                                   ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.403..25.298 rows=100000 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..5.99 rows=1 width=29) (actual time=0.074..0.515 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.262..0.263 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.231..0.238 rows=25 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 26.918 ms
 Execution Time: 248237.487 ms
(37 rows)

