===== 10.sql =====
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2401280.80..2401280.85 rows=20 width=201) (actual time=15958.959..15958.965 rows=20 loops=1)
   ->  Sort  (cost=2401280.80..2402641.23 rows=544170 width=201) (actual time=15958.958..15958.962 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2248650.41..2386800.63 rows=544170 width=201) (actual time=13506.795..15844.021 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=2248650.41..2373196.38 rows=544170 width=181) (actual time=13506.779..15094.838 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 33kB  Peak Memory: 33kB
                     ->  Nested Loop  (cost=2248650.22..2348708.73 rows=544170 width=181) (actual time=13506.396..14768.265 rows=1145402 loops=1)
                           ->  Merge Join  (cost=2248650.07..2335351.71 rows=544170 width=159) (actual time=13506.372..14365.161 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..74794.07 rows=1499976 width=147) (actual time=0.011..363.817 rows=1499997 loops=1)
                                 ->  Sort  (cost=2248649.50..2250009.92 rows=544170 width=16) (actual time=13506.345..13637.696 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: quicksort  Memory: 113386kB
                                       ->  Hash Join  (cost=283729.07..2196807.24 rows=544170 width=16) (actual time=1548.588..13171.396 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1874413.30 rows=14729472 width=16) (actual time=0.014..9695.868 rows=14808183 loops=1)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 45177869
                                             ->  Hash  (cost=276801.71..276801.71 rows=554189 width=8) (actual time=1546.072..1546.073 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=7576.87..276801.71 rows=554189 width=8) (actual time=121.843..1412.523 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233137
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7438.33 rows=554189 width=0) (actual time=69.038..69.038 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..2.16 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 9.176 ms
 Execution Time: 15965.466 ms
(37 rows)

===== 11.sql =====
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=94527.39..94527.39 rows=1 width=36) (actual time=1460.356..1460.361 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44196.93..44196.94 rows=1 width=32) (actual time=524.160..524.162 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..41796.85 rows=320010 width=10) (actual time=0.604..438.952 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.589..9.562 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.579..8.776 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.363..0.363 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.06 rows=79 width=14) (actual time=0.005..0.097 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50330.45..50597.12 rows=106670 width=36) (actual time=1460.354..1460.356 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=44996.95..49797.10 rows=106670 width=36) (actual time=1460.313..1460.314 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 5  Memory Usage: 135217kB  Disk Usage: 752kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..41796.85 rows=320010 width=14) (actual time=0.661..566.682 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.638..11.452 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.021..0.024 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.612..10.587 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.389..0.390 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.06 rows=79 width=18) (actual time=0.006..0.127 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.403 ms
 Execution Time: 1464.730 ms
(38 rows)

===== 12.sql =====
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3029932.82..3030746.28 rows=1 width=27) (actual time=18020.419..18020.422 rows=1 loops=1)
   ->  GroupAggregate  (cost=3029932.82..3035627.01 rows=7 width=27) (actual time=18020.418..18020.420 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3029932.82..3030644.59 rows=284706 width=27) (actual time=17967.858..17974.705 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2477869.17..3004139.72 rows=284706 width=27) (actual time=13958.502..17899.251 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410918.57 rows=15000657 width=20) (actual time=0.029..1406.276 rows=15000000 loops=1)
                     ->  Hash  (cost=2474310.34..2474310.34 rows=284706 width=15) (actual time=13957.319..13957.320 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474310.34 rows=284706 width=15) (actual time=0.260..13855.267 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.921 ms
 Execution Time: 18022.044 ms
(17 rows)

===== 13.sql =====
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1523783.56..1523783.56 rows=1 width=16) (actual time=15220.377..15220.380 rows=1 loops=1)
   ->  Sort  (cost=1523783.56..1523784.06 rows=200 width=16) (actual time=15220.375..15220.378 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1523780.56..1523782.56 rows=200 width=16) (actual time=15220.342..15220.351 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1371456.06..1501280.92 rows=1499976 width=12) (actual time=14549.928..15049.275 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 5  Memory Usage: 131121kB  Disk Usage: 27424kB
                     ->  Hash Right Join  (cost=57713.77..544715.33 rows=14697613 width=8) (actual time=364.796..10229.829 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448420.21 rows=14697613 width=8) (actual time=0.051..4714.825 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38964.07..38964.07 rows=1499976 width=4) (actual time=360.464..360.465 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38964.07 rows=1499976 width=4) (actual time=0.030..129.188 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.794 ms
 Execution Time: 15238.652 ms
(22 rows)

===== 14.sql =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1215152.31..1215152.33 rows=1 width=32) (actual time=3591.747..3591.750 rows=1 loops=1)
   ->  Aggregate  (cost=1215152.31..1215152.33 rows=1 width=32) (actual time=3591.746..3591.748 rows=1 loops=1)
         ->  Hash Join  (cost=118542.33..1202468.31 rows=724800 width=33) (actual time=879.710..3238.621 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=18908.24..1080037.27 rows=736359 width=16) (actual time=255.125..2036.943 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..18724.15 rows=736359 width=0) (actual time=147.565..147.566 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60962.04..60962.04 rows=2000004 width=25) (actual time=620.038..620.039 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 74141kB
                     ->  Seq Scan on part  (cost=0.00..60962.04 rows=2000004 width=25) (actual time=0.032..284.074 rows=2000000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.195 ms
 Execution Time: 3594.467 ms
(15 rows)

===== 15.sql =====
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1241037.29..1242285.08 rows=99823 width=36) (actual time=4941.948..4981.986 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=59021.02..1218047.58 rows=2298971 width=16) (actual time=495.074..3251.410 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..58446.28 rows=2298971 width=0) (actual time=324.637..324.637 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.622 ms
 Execution Time: 4987.829 ms
(11 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2486095.16..2486105.35 rows=1 width=103) (actual time=9462.202..9462.206 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1243532.87..1243532.88 rows=1 width=32) (actual time=4727.849..4727.850 rows=1 loops=1)
           ->  HashAggregate  (cost=1241037.29..1242285.08 rows=99823 width=36) (actual time=4681.727..4721.814 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=59021.02..1218047.58 rows=2298971 width=16) (actual time=468.775..3017.013 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..58446.28 rows=2298971 width=0) (actual time=299.906..299.906 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1242562.28..1247645.82 rows=499 width=103) (actual time=9462.201..9462.202 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4826.35 rows=100000 width=71) (actual time=0.341..12.707 rows=69998 loops=1)
         ->  Sort  (cost=1242561.99..1242563.24 rows=499 width=36) (actual time=9445.655..9445.656 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1241037.29..1242539.63 rows=499 width=36) (actual time=9416.775..9445.640 rows=1 loops=1)
                     ->  HashAggregate  (cost=1241037.29..1242534.64 rows=499 width=36) (actual time=9416.774..9445.637 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=59021.02..1218047.58 rows=2298971 width=16) (actual time=469.055..3012.563 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..58446.28 rows=2298971 width=0) (actual time=300.157..300.157 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.547 ms
 Execution Time: 9468.890 ms
(31 rows)

DROP VIEW
===== 16.sql =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=402586.23..402586.23 rows=1 width=44) (actual time=6148.059..6148.062 rows=1 loops=1)
   ->  Sort  (cost=402586.23..402969.51 rows=153312 width=44) (actual time=6148.057..6148.060 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=392912.55..401819.67 rows=153312 width=44) (actual time=5708.254..6142.633 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=392912.55..394387.35 rows=589920 width=40) (actual time=5708.211..5807.730 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 122929kB
                     ->  Hash Join  (cost=98115.45..336368.25 rows=589920 width=40) (actual time=566.317..2731.422 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3466.46..231218.90 rows=4000127 width=8) (actual time=21.869..1345.020 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=10 width=4) (actual time=0.097..21.813 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90962.10..90962.10 rows=294951 width=40) (actual time=543.299..543.300 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90962.10 rows=294951 width=40) (actual time=0.044..465.662 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.931 ms
 Execution Time: 6154.067 ms
(27 rows)

===== 17-flattened.sql =====
                                                          QUERY PLAN                                                           
-------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5567529.45..6183844.92 rows=2031901 width=36) (actual time=31966.875..55024.588 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
   ->  Seq Scan on lineitem  (cost=0.00..1724439.04 rows=59989704 width=9) (actual time=0.350..7827.856 rows=59986052 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.461 ms
 Execution Time: 55193.804 ms
(7 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=218083.19..218083.20 rows=1 width=32) (actual time=360.323..360.325 rows=1 loops=1)
   ->  Aggregate  (cost=218083.19..218083.20 rows=1 width=32) (actual time=360.322..360.323 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..218038.58 rows=17842 width=8) (actual time=0.912..359.505 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..84766.98 rows=1813 width=20) (actual time=0.901..311.777 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70962.06 rows=1813 width=4) (actual time=0.888..297.785 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.60 rows=1 width=16) (actual time=0.006..0.006 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..73.38 rows=10 width=17) (actual time=0.009..0.023 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.680 ms
 Execution Time: 360.355 ms
(17 rows)

DROP TABLE
===== 17.sql =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6414984.56..6414984.58 rows=1 width=32) (actual time=55376.891..55376.894 rows=1 loops=1)
   ->  Aggregate  (cost=6414984.56..6414984.58 rows=1 width=32) (actual time=55376.890..55376.892 rows=1 loops=1)
         ->  Nested Loop  (cost=5638514.62..6414939.24 rows=18127 width=8) (actual time=32184.213..55376.084 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5638514.17..6280482.40 rows=1842 width=40) (actual time=32184.172..55323.791 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5567529.45..6183844.92 rows=2031901 width=36) (actual time=31888.589..54876.507 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724439.04 rows=59989704 width=9) (actual time=0.424..7930.250 rows=59986052 loops=1)
                     ->  Hash  (cost=70962.06..70962.06 rows=1813 width=4) (actual time=294.052..294.053 rows=1996 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 87kB
                           ->  Seq Scan on part  (cost=0.00..70962.06 rows=1813 width=4) (actual time=0.388..292.928 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..72.87 rows=10 width=17) (actual time=0.011..0.025 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.063 ms
 Execution Time: 55477.419 ms
(22 rows)

===== 18.sql =====
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9939570.10..9939570.35 rows=100 width=71) (actual time=41909.995..41910.019 rows=99 loops=1)
   ->  Sort  (cost=9939570.10..9989550.75 rows=19992261 width=71) (actual time=41909.993..41910.011 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8574150.54..9175480.26 rows=19992261 width=71) (actual time=41908.807..41909.879 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 64  Batches: 1  Memory Usage: 12369kB
               ->  Hash Join  (cost=69648.11..6618657.51 rows=19992261 width=44) (actual time=1479.540..41907.973 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=71.65..6496601.22 rows=19992261 width=25) (actual time=950.174..41378.158 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729828.66 rows=4999142 width=24) (actual time=706.033..29777.957 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650449.29 rows=15000657 width=20) (actual time=0.306..2792.875 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929397.04 rows=4999142 width=4) (actual time=614.752..26149.853 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404487.12 rows=59989704 width=9) (actual time=0.429..12419.175 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404487.12 rows=59989704 width=9) (actual time=0.021..8230.861 rows=59916431 loops=1)
                     ->  Hash  (cost=50826.76..50826.76 rows=1499976 width=23) (actual time=524.933..524.934 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50826.76 rows=1499976 width=23) (actual time=0.272..240.244 rows=1500000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 8.845 ms
 Execution Time: 41915.134 ms
(26 rows)

===== 19.sql =====


 Limit  (cost=699503.01..699503.02 rows=1 width=32) (actual time=1127.585..1127.587 rows=1 loops=1)
   ->  Aggregate  (cost=699503.01..699503.02 rows=1 width=32) (actual time=1127.584..1127.585 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..699494.71 rows=1107 width=12) (actual time=3.088..1126.290 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125962.17 rows=4796 width=30) (actual time=0.285..492.368 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..119.58 rows=1 width=21) (actual time=0.119..0.132 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.327 ms
 Execution Time: 1127.661 ms
(13 rows)

===== 1.sql =====
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3948518.11..3948518.12 rows=1 width=236) (actual time=72427.390..72427.392 rows=1 loops=1)
   ->  Sort  (cost=3948518.11..3948518.13 rows=6 width=236) (actual time=72427.388..72427.389 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3948517.92..3948518.08 rows=6 width=236) (actual time=72427.352..72427.360 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874413.30 rows=59260132 width=25) (actual time=0.323..11622.678 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.338 ms
 Execution Time: 72427.467 ms
(13 rows)

===== 20-flattened.sql =====
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2106117.11..2268307.13 rows=4853352 width=40) (actual time=104872.895..111677.097 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
   ->  Bitmap Heap Scan on lineitem  (cost=234992.03..1496836.67 rows=9153509 width=13) (actual time=1523.122..97939.687 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..232703.65 rows=9153509 width=0) (actual time=1216.145..1216.146 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 3.402 ms
 Execution Time: 111857.326 ms
(11 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=59053.05..59053.05 rows=1 width=51) (actual time=8104.176..8104.179 rows=1 loops=1)
   ->  Sort  (cost=59053.05..59053.05 rows=1 width=51) (actual time=8104.175..8104.177 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..59053.04 rows=1 width=51) (actual time=11.054..8099.520 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=55) (actual time=2.568..18.057 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.292..0.296 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=59) (actual time=2.270..16.420 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.753..1.753 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..14.15 rows=1 width=8) (actual time=1.973..1.973 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..13.66 rows=1 width=16) (actual time=1.682..1.965 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.06 rows=79 width=12) (actual time=0.021..1.608 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.010..0.010 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 14.851 ms
 Execution Time: 8105.554 ms
(33 rows)

DROP TABLE
===== 20.sql =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2431293.62..2431293.63 rows=1 width=51) (actual time=129902.430..129902.435 rows=1 loops=1)
   ->  Sort  (cost=2431293.62..2431293.63 rows=1 width=51) (actual time=129902.429..129902.433 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2172332.12..2431293.61 rows=1 width=51) (actual time=105440.738..129899.463 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183310388
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=55) (actual time=0.033..24.898 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.021..0.025 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=59) (actual time=0.008..16.824 rows=100000 loops=1)
               ->  Materialize  (cost=2172332.12..2426646.31 rows=3 width=8) (actual time=24.657..29.075 rows=44765 loops=4095)
                     ->  Nested Loop  (cost=2172332.12..2426646.29 rows=3 width=8) (actual time=100970.854..112709.238 rows=59002 loops=1)
                           ->  Hash Join  (cost=2172331.69..2395795.29 rows=49024 width=44) (actual time=100970.271..108818.662 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2106117.11..2268307.13 rows=4853352 width=40) (actual time=100615.137..107736.268 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=234992.03..1496836.67 rows=9153509 width=13) (actual time=1511.885..93883.136 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..232703.65 rows=9153509 width=0) (actual time=1204.463..1204.463 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65962.05..65962.05 rows=20202 width=4) (actual time=355.019..355.020 rows=21718 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1020kB
                                       ->  Seq Scan on part  (cost=0.00..65962.05 rows=20202 width=4) (actual time=0.211..349.328 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.065..0.065 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 6.661 ms
 Execution Time: 129930.794 ms
(38 rows)

===== 21.sql =====
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4271957.67..4271957.67 rows=1 width=34) (actual time=58693.296..58693.312 rows=100 loops=1)
   ->  Sort  (cost=4271957.67..4271957.67 rows=1 width=34) (actual time=58693.294..58693.304 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4271957.64..4271957.66 rows=1 width=34) (actual time=58685.014..58692.119 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4271957.64..4271957.64 rows=1 width=26) (actual time=58685.001..58687.875 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204937.97..4271957.63 rows=1 width=26) (actual time=17315.206..58514.735 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204937.40..4271950.09 rows=1 width=38) (actual time=17304.983..50871.503 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204936.97..4271942.77 rows=1 width=34) (actual time=17302.876..36381.624 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959853.63 rows=799863 width=34) (actual time=23.144..14611.693 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874413.30 rows=19996568 width=8) (actual time=0.139..11236.366 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=22.964..22.965 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=2.428..22.111 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.164..0.169 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=2.261..21.359 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.788..1.788 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874413.30..1874413.30 rows=19996568 width=8) (actual time=17264.445..17264.446 rows=37929348 loops=1)
                                             Buckets: 4194304  Batches: 16  Memory Usage: 125295kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874413.30 rows=19996568 width=8) (actual time=0.015..12518.613 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.107..0.107 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.114..0.114 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.939 ms
 Execution Time: 58695.610 ms
(47 rows)

===== 22.sql =====
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163066.58..163066.61 rows=1 width=72) (actual time=1742.984..1742.987 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75320.28..75320.29 rows=1 width=32) (actual time=770.752..770.753 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75201.37 rows=47564 width=6) (actual time=0.007..736.174 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87746.29..87957.63 rows=7685 width=72) (actual time=1742.983..1742.984 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87746.29..87765.50 rows=7685 width=38) (actual time=1741.158..1741.505 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87250.31 rows=7685 width=38) (actual time=770.815..1720.773 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75201.37 rows=17500 width=26) (actual time=770.795..1353.920 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.30 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.877 ms
 Execution Time: 1743.238 ms
(21 rows)

===== 2-flattened.sql =====
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=207145.74..211854.68 rows=470894 width=36) (actual time=3185.711..3626.116 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 5  Memory Usage: 139313kB  Disk Usage: 15632kB
   ->  Nested Loop  (cost=42.10..199145.48 rows=1600051 width=10) (actual time=0.701..2534.062 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=0.680..51.993 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=0.062..0.086 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.035..0.043 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=0.532..9.570 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.315..0.315 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.06 rows=79 width=14) (actual time=0.006..0.113 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.299 ms
 Execution Time: 3664.389 ms
(23 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=477381.60..477381.60 rows=1 width=192) (actual time=3343.106..3343.122 rows=100 loops=1)
   ->  Sort  (cost=477381.60..477381.60 rows=1 width=192) (actual time=3343.105..3343.114 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Hash Join  (cost=264801.80..477381.59 rows=1 width=192) (actual time=2681.791..3340.871 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70962.06 rows=8079 width=30) (actual time=0.020..377.025 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=201737.03..201737.03 rows=1600051 width=172) (actual time=2680.771..2680.774 rows=1604080 loops=1)
                     Buckets: 1048576  Batches: 4  Memory Usage: 90233kB
                     ->  Nested Loop  (cost=2.00..201737.03 rows=1600051 width=172) (actual time=0.071..2073.501 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.055..56.776 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.031..48.206 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.007..15.705 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.013..0.014 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.003..0.007 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.06 rows=79 width=14) (actual time=0.004..0.089 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.004..0.004 rows=1 loops=12783)
                       Index Cond: (ps_partkey = part.p_partkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.246 ms
 Execution Time: 3343.447 ms
(32 rows)

DROP TABLE
===== 2.sql =====
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1613093.53..1613093.54 rows=1 width=192) (actual time=4685.353..4685.370 rows=100 loops=1)
   ->  Sort  (cost=1613093.53..1613093.54 rows=1 width=192) (actual time=4685.352..4685.362 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=503344.40..1613093.52 rows=1 width=192) (actual time=3333.655..4682.487 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..102913.51 rows=8079 width=30) (actual time=0.027..545.817 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=503343.78..511344.04 rows=1600051 width=172) (actual time=3333.487..3800.938 rows=1603828 loops=1)
                     ->  Sort  (cost=503343.78..507343.91 rows=1600051 width=172) (actual time=3333.483..3622.334 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293456kB
                           ->  Nested Loop  (cost=2.00..201737.03 rows=1600051 width=172) (actual time=0.061..2344.512 rows=1604080 loops=1)
                                 ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.048..56.585 rows=20051 loops=1)
                                       Join Filter: (nation.n_regionkey = region.r_regionkey)
                                       Rows Removed by Join Filter: 79949
                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=1)
                                             Filter: (r_name = 'AMERICA'::bpchar)
                                             Rows Removed by Filter: 4
                                       ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.036..48.430 rows=100000 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.002..14.013 rows=100000 loops=1)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.018..0.018 rows=25 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.006..0.010 rows=25 loops=1)
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.06 rows=79 width=14) (actual time=0.004..0.102 rows=80 loops=20051)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=153.90..153.91 rows=1 width=32) (actual time=0.025..0.025 rows=1 loops=6398)
                       ->  Nested Loop  (cost=0.86..153.90 rows=3 width=6) (actual time=0.015..0.023 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..152.62 rows=17 width=10) (actual time=0.010..0.021 rows=4 loops=6398)
                                   ->  Nested Loop  (cost=0.72..150.00 rows=17 width=10) (actual time=0.008..0.017 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.73 rows=17 width=10) (actual time=0.005..0.006 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=25592)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.512 ms
 Execution Time: 4704.372 ms
(49 rows)

===== 3.sql =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2944461.49..2944461.52 rows=10 width=44) (actual time=38311.492..38311.498 rows=10 loops=1)
   ->  Sort  (cost=2944461.49..2952121.44 rows=3063979 width=44) (actual time=38311.491..38311.495 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2804044.27..2878250.01 rows=3063979 width=44) (actual time=38242.469..38293.079 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 8  Batches: 1  Memory Usage: 61457kB
               ->  Hash Join  (cost=525527.71..2553180.99 rows=3063979 width=24) (actual time=24504.228..38013.804 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874413.30 rows=32693384 width=16) (actual time=0.246..10086.676 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=507954.70..507954.70 rows=1405841 width=12) (actual time=24499.219..24499.222 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=138445.26..507954.70 rows=1405841 width=12) (actual time=904.275..23997.746 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=80197.37..430859.27 rows=7179992 width=16) (actual time=566.390..21374.769 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..78402.38 rows=7179992 width=0) (actual time=506.380..506.380 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54576.70..54576.70 rows=293695 width=4) (actual time=336.700..336.701 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54576.70 rows=293695 width=4) (actual time=0.305..282.664 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 6.770 ms
 Execution Time: 38318.320 ms
(29 rows)

===== 4.sql =====
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2586269.08..2586269.08 rows=1 width=24) (actual time=39902.006..39902.009 rows=1 loops=1)
   ->  Sort  (cost=2586269.08..2586269.09 rows=5 width=24) (actual time=39902.004..39902.007 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2586269.00..2586269.05 rows=5 width=24) (actual time=39901.967..39901.970 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2210216.58..2583441.44 rows=565512 width=16) (actual time=16109.731..39779.174 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7734.18..277130.69 rows=565634 width=20) (actual time=122.686..20234.538 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7592.78 rows=565634 width=0) (actual time=69.240..69.240 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874413.30..1874413.30 rows=19996568 width=4) (actual time=15976.921..15976.921 rows=37929348 loops=1)
                           Buckets: 4194304  Batches: 16  Memory Usage: 116042kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874413.30 rows=19996568 width=4) (actual time=0.415..11618.892 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 5.930 ms
 Execution Time: 39904.967 ms
(22 rows)

===== 5.sql =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2369752.72..2369752.73 rows=1 width=58) (actual time=37311.751..37311.758 rows=1 loops=1)
   ->  Sort  (cost=2369752.72..2369752.79 rows=25 width=58) (actual time=37311.749..37311.756 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2368860.66..2369752.60 rows=25 width=58) (actual time=37287.674..37311.728 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2368860.66..2369038.99 rows=71330 width=38) (actual time=37281.696..37284.937 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=420590.57..2363110.67 rows=71330 width=38) (actual time=20966.997..37243.793 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=415874.57..2349036.06 rows=1782590 width=50) (actual time=20927.466..36817.239 rows=1815327 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=352670.50..2234582.56 rows=8912948 width=20) (actual time=20495.305..35059.388 rows=9108027 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1724439.04 rows=59989704 width=20) (actual time=0.392..6685.679 rows=59986052 loops=1)
                                       ->  Hash  (cost=324811.54..324811.54 rows=2228717 width=8) (actual time=20486.007..20486.008 rows=2276638 loops=1)
                                             Buckets: 4194304  Batches: 1  Memory Usage: 121700kB
                                             ->  Bitmap Heap Scan on orders  (cost=30468.78..324811.54 rows=2228717 width=8) (actual time=241.631..19825.694 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..29911.61 rows=2228717 width=0) (actual time=181.515..181.515 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=59454.13..59454.13 rows=299995 width=38) (actual time=430.959..430.961 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                       ->  Hash Join  (cost=2.51..59454.13 rows=299995 width=38) (actual time=1.143..366.948 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50826.76 rows=1499976 width=8) (actual time=0.446..202.299 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.682..0.683 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.675..0.680 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.316..0.318 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.339..0.339 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.332..0.333 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=37.772..37.772 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.206..22.778 rows=100000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.008 ms
 Execution Time: 37315.472 ms
(44 rows)

===== 6.sql =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1503911.15..1503911.16 rows=1 width=32) (actual time=4130.962..4130.964 rows=1 loops=1)
   ->  Aggregate  (cost=1503911.15..1503911.16 rows=1 width=32) (actual time=4130.961..4130.962 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=299078.40..1497909.41 rows=1200349 width=12) (actual time=1211.699..3755.568 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..298778.32 rows=1200349 width=0) (actual time=1041.626..1041.626 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.697 ms
 Execution Time: 4133.469 ms
(10 rows)

===== 7.sql =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2520223.57..2520223.70 rows=1 width=116) (actual time=80811.782..80811.789 rows=1 loops=1)
   ->  GroupAggregate  (cost=2520223.57..2521441.02 rows=10036 width=116) (actual time=80811.780..80811.787 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2520223.57..2520375.99 rows=60966 width=96) (actual time=80803.504..80804.413 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1024842.37..2515378.08 rows=60966 width=96) (actual time=7719.935..80736.189 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=1021217.97..2503763.64 rows=1464977 width=46) (actual time=7687.865..80225.101 rows=1448126 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=470112.70..1869337.82 rows=18312208 width=24) (actual time=2548.280..71608.683 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..465534.65 rows=18312208 width=0) (actual time=2220.041..2220.042 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=536104.61..536104.61 rows=1200053 width=30) (actual time=5135.038..5135.041 rows=1191175 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                                 ->  Hash Join  (cost=56933.06..536104.61 rows=1200053 width=30) (actual time=366.200..4861.449 rows=1191175 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..410918.57 rows=15000657 width=8) (actual time=0.032..1808.940 rows=15000000 loops=1)
                                       ->  Hash  (cost=55433.09..55433.09 rows=119998 width=30) (actual time=365.868..365.870 rows=119622 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                             ->  Hash Join  (cost=1.40..55433.09 rows=119998 width=30) (actual time=0.442..340.684 rows=119622 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50826.76 rows=1499976 width=8) (actual time=0.404..199.518 rows=1500000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.023..0.024 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.016..0.018 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=30.197..30.198 rows=7981 loops=1)
                           Buckets: 8192  Batches: 1  Memory Usage: 548kB
                           ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.370..28.747 rows=7981 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.205..19.012 rows=100000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.154..0.154 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.147..0.149 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 8.482 ms
 Execution Time: 80817.017 ms
(45 rows)

===== 8.sql =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1984335.57..1984335.81 rows=1 width=64) (actual time=48007.732..48007.740 rows=1 loops=1)
   ->  GroupAggregate  (cost=1984335.57..1984918.60 rows=2406 width=64) (actual time=48007.731..48007.738 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=1984335.57..1984395.00 rows=23774 width=70) (actual time=48001.977..48002.422 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=496751.91..1982607.54 rows=23774 width=70) (actual time=10612.328..47969.616 rows=23842 loops=1)
                     ->  Hash Join  (cost=496751.77..1981912.76 rows=23774 width=20) (actual time=10612.290..47897.414 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=492285.77..1977384.36 rows=23774 width=20) (actual time=10575.300..47842.050 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1483393.32 rows=391458 width=20) (actual time=1.210..37004.809 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65962.05 rows=13259 width=4) (actual time=0.860..461.755 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..106.60 rows=30 width=24) (actual time=0.156..2.790 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=480897.80..480897.80 rows=911002 width=8) (actual time=10567.819..10567.824 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=125469.35..480897.80 rows=911002 width=8) (actual time=867.323..10335.836 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=62265.29..391502.44 rows=4555010 width=12) (actual time=391.721..8684.811 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..61126.53 rows=4555010 width=0) (actual time=332.453..332.453 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59454.13..59454.13 rows=299995 width=4) (actual time=474.461..474.464 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59454.13 rows=299995 width=4) (actual time=0.510..421.296 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50826.76 rows=1499976 width=8) (actual time=0.281..259.168 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.217..0.219 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.206..0.212 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.009..0.011 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.184..0.185 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.178..0.179 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=36.703..36.703 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.218..23.141 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.005..0.005 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 15.481 ms
 Execution Time: 48010.196 ms
(52 rows)

===== 9.sql =====
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3385930.24..3385930.24 rows=1 width=90) (actual time=35720.778..35720.784 rows=1 loops=1)
   ->  Sort  (cost=3385930.24..3386080.62 rows=60150 width=90) (actual time=35720.777..35720.782 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3384727.24..3385629.49 rows=60150 width=90) (actual time=35719.598..35719.916 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=1142677.42..3311663.04 rows=4175097 width=81) (actual time=7133.256..32942.767 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=1142675.86..3288406.19 rows=4175097 width=31) (actual time=7133.213..31866.145 rows=3248192 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Hash Join  (cost=485652.08..2504743.78 rows=4175097 width=31) (actual time=3000.570..23965.205 rows=3248192 loops=1)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Hash Join  (cost=481186.08..2489317.68 rows=4175097 width=35) (actual time=2973.923..22845.442 rows=3248192 loops=1)
                                       Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                       ->  Hash Join  (cost=67729.73..1949642.07 rows=4175097 width=33) (actual time=436.954..17214.868 rows=3248192 loops=1)
                                             Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1724439.04 rows=59989704 width=29) (actual time=0.494..7231.462 rows=59986052 loops=1)
                                             ->  Hash  (cost=65962.05..65962.05 rows=141414 width=4) (actual time=435.851..435.852 rows=108312 loops=1)
                                                   Buckets: 262144  Batches: 1  Memory Usage: 5856kB
                                                   ->  Seq Scan on part  (cost=0.00..65962.05 rows=141414 width=4) (actual time=0.302..413.185 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                       ->  Hash  (cost=254388.54..254388.54 rows=8000254 width=14) (actual time=2527.814..2527.814 rows=8000000 loops=1)
                                             Buckets: 4194304  Batches: 4  Memory Usage: 126558kB
                                             ->  Seq Scan on partsupp  (cost=0.00..254388.54 rows=8000254 width=14) (actual time=0.383..1277.621 rows=8000000 loops=1)
                                 ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=26.347..26.348 rows=100000 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.006..14.139 rows=100000 loops=1)
                           ->  Hash  (cost=410918.57..410918.57 rows=15000657 width=8) (actual time=4122.992..4122.993 rows=15000000 loops=1)
                                 Buckets: 4194304  Batches: 8  Memory Usage: 106038kB
                                 ->  Seq Scan on orders  (cost=0.00..410918.57 rows=15000657 width=8) (actual time=0.375..2237.599 rows=15000000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.028..0.029 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.016..0.020 rows=25 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 8.072 ms
 Execution Time: 35725.840 ms
(38 rows)

