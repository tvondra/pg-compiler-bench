===== 10.sql jit=on =====
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2415651.23..2415651.28 rows=20 width=201) (actual time=25777.271..25777.279 rows=20 loops=1)
   ->  Sort  (cost=2415651.23..2417137.82 rows=594636 width=201) (actual time=25292.104..25292.110 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2256161.56..2399828.18 rows=594636 width=201) (actual time=19994.330..24974.595 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=2256161.56..2384962.28 rows=594636 width=181) (actual time=19994.302..23183.063 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 33kB  Peak Memory: 33kB
                     ->  Nested Loop  (cost=2256161.38..2358203.66 rows=594636 width=181) (actual time=19993.846..22333.026 rows=1145402 loops=1)
                           ->  Merge Join  (cost=2256161.23..2343612.93 rows=594636 width=159) (actual time=19993.803..21464.914 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..74793.53 rows=1499940 width=147) (actual time=0.020..706.335 rows=1499997 loops=1)
                                 ->  Sort  (cost=2256160.59..2257647.18 rows=594636 width=16) (actual time=19993.745..20183.822 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: quicksort  Memory: 113386kB
                                       ->  Hash Join  (cost=285453.21..2199130.10 rows=594636 width=16) (actual time=2179.474..19154.726 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1874393.65 rows=14965040 width=16) (actual time=0.035..13790.870 rows=14808183 loops=1)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 45177869
                                             ->  Hash  (cost=278002.62..278002.62 rows=596047 width=8) (actual time=2176.948..2176.949 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=8149.92..278002.62 rows=596047 width=8) (actual time=267.094..1919.505 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233137
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8000.91 rows=596047 width=0) (actual time=136.217..136.217 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..2.16 rows=1 width=30) (actual time=0.004..0.004 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 9.490 ms
 JIT:
   Functions: 38
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.127 ms, Inlining 71.251 ms, Optimization 249.652 ms, Emission 163.868 ms, Total 488.898 ms
 Execution Time: 25816.093 ms
(41 rows)

===== 11.sql jit=on =====
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=94523.42..94523.42 rows=1 width=36) (actual time=2900.841..2900.846 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44194.80..44194.81 rows=1 width=32) (actual time=1065.053..1065.056 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..41794.61 rows=320025 width=10) (actual time=1.655..791.632 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=1.634..15.020 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.019 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=1.616..13.610 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.020..1.020 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.06 rows=79 width=14) (actual time=0.010..0.169 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50328.61..50595.29 rows=106675 width=36) (actual time=2900.839..2900.841 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=44994.86..49795.23 rows=106675 width=36) (actual time=2900.778..2900.780 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 5  Memory Usage: 135217kB  Disk Usage: 752kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..41794.61 rows=320025 width=14) (actual time=1.701..963.076 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=1.669..17.058 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.030..0.035 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=1.632..15.568 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.031..1.031 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.06 rows=79 width=18) (actual time=0.011..0.207 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.596 ms
 Execution Time: 2905.356 ms
(38 rows)

===== 12.sql jit=on =====
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3029760.42..3030570.67 rows=1 width=27) (actual time=27527.951..27527.955 rows=1 loops=1)
   ->  GroupAggregate  (cost=3029760.42..3035432.13 rows=7 width=27) (actual time=27182.869..27182.872 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3029760.42..3030469.38 rows=283582 width=27) (actual time=27111.134..27121.953 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2477819.74..3004077.24 rows=283582 width=27) (actual time=21175.845..26966.180 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410917.53 rows=15000553 width=20) (actual time=0.046..2315.354 rows=15000000 loops=1)
                     ->  Hash  (cost=2474274.97..2474274.97 rows=283582 width=15) (actual time=21174.599..21174.600 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474274.97 rows=283582 width=15) (actual time=0.402..20964.970 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.661 ms
 JIT:
   Functions: 19
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.512 ms, Inlining 61.302 ms, Optimization 173.981 ms, Emission 109.511 ms, Total 347.306 ms
 Execution Time: 27559.265 ms
(21 rows)

===== 13.sql jit=on =====
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1523773.63..1523773.64 rows=1 width=16) (actual time=23806.263..23806.267 rows=1 loops=1)
   ->  Sort  (cost=1523773.63..1523774.13 rows=200 width=16) (actual time=23595.389..23595.392 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1523770.63..1523772.63 rows=200 width=16) (actual time=23595.305..23595.320 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1371447.82..1501271.53 rows=1499940 width=12) (actual time=22300.840..23232.576 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 5  Memory Usage: 131121kB  Disk Usage: 27424kB
                     ->  Hash Right Join  (cost=57712.78..544712.77 rows=14697512 width=8) (actual time=703.938..15293.571 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448418.91 rows=14697512 width=8) (actual time=0.062..7785.364 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38963.53..38963.53 rows=1499940 width=4) (actual time=699.396..699.397 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38963.53 rows=1499940 width=4) (actual time=0.034..261.101 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.377 ms
 JIT:
   Functions: 25
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.955 ms, Inlining 62.743 ms, Optimization 119.503 ms, Emission 67.759 ms, Total 252.960 ms
 Execution Time: 23841.183 ms
(26 rows)

===== 14.sql jit=on =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1234188.24..1234188.26 rows=1 width=32) (actual time=6266.492..6266.495 rows=1 loops=1)
   ->  Aggregate  (cost=1234188.24..1234188.26 rows=1 width=32) (actual time=6024.088..6024.091 rows=1 loops=1)
         ->  Hash Join  (cost=119461.85..1220674.53 rows=772212 width=33) (actual time=1647.384..5146.583 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=19827.74..1097799.36 rows=772212 width=16) (actual time=544.777..3064.367 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..19634.68 rows=772212 width=0) (actual time=287.380..287.380 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60962.05..60962.05 rows=2000005 width=25) (actual time=1098.080..1098.081 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 74141kB
                     ->  Seq Scan on part  (cost=0.00..60962.05 rows=2000005 width=25) (actual time=0.048..431.244 rows=2000000 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.939 ms
 JIT:
   Functions: 15
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.884 ms, Inlining 61.971 ms, Optimization 109.994 ms, Emission 70.187 ms, Total 244.036 ms
 Execution Time: 6288.068 ms
(19 rows)

===== 15.sql jit=on =====
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1239484.63..1240745.00 rows=100830 width=36) (actual time=8596.659..8673.862 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=57402.41..1217125.76 rows=2235887 width=16) (actual time=1101.815..5125.991 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56843.43 rows=2235887 width=0) (actual time=686.665..686.665 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.024 ms
 JIT:
   Functions: 9
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.393 ms, Inlining 59.080 ms, Optimization 87.542 ms, Emission 54.526 ms, Total 202.540 ms
 Execution Time: 8696.991 ms
(15 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2483030.42..2483040.51 rows=1 width=103) (actual time=17242.328..17242.332 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1242005.38..1242005.39 rows=1 width=32) (actual time=8344.635..8344.637 rows=1 loops=1)
           ->  HashAggregate  (cost=1239484.63..1240745.00 rows=100830 width=36) (actual time=8257.350..8335.102 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=57402.41..1217125.76 rows=2235887 width=16) (actual time=1080.851..4941.160 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56843.43 rows=2235887 width=0) (actual time=666.923..666.923 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1241025.03..1246109.69 rows=504 width=103) (actual time=16850.571..16850.573 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4827.39 rows=100000 width=71) (actual time=0.364..23.990 rows=69998 loops=1)
         ->  Sort  (cost=1241024.74..1241026.00 rows=504 width=36) (actual time=16819.904..16819.905 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1239484.63..1241002.12 rows=504 width=36) (actual time=16758.736..16819.891 rows=1 loops=1)
                     ->  HashAggregate  (cost=1239484.63..1240997.08 rows=504 width=36) (actual time=16758.733..16819.885 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=57402.41..1217125.76 rows=2235887 width=16) (actual time=1075.693..4919.080 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56843.43 rows=2235887 width=0) (actual time=662.165..662.165 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.975 ms
 JIT:
   Functions: 30
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 3.657 ms, Inlining 15.498 ms, Optimization 230.777 ms, Emission 145.119 ms, Total 395.051 ms
 Execution Time: 17254.928 ms
(35 rows)

DROP VIEW
===== 16.sql jit=on =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=402589.72..402589.72 rows=1 width=44) (actual time=11692.702..11692.706 rows=1 loops=1)
   ->  Sort  (cost=402589.72..402972.98 rows=153306 width=44) (actual time=11674.746..11674.750 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=392916.45..401823.19 rows=153306 width=44) (actual time=10873.291..11660.803 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=392916.45..394391.19 rows=589894 width=40) (actual time=10873.214..11007.155 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 122929kB
                     ->  Hash Join  (cost=98115.15..336374.83 rows=589894 width=40) (actual time=1113.621..6367.185 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3466.46..231225.31 rows=4000310 width=8) (actual time=48.717..3637.879 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=10 width=4) (actual time=3.882..47.987 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90962.12..90962.12 rows=294925 width=40) (actual time=1063.687..1063.688 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90962.12 rows=294925 width=40) (actual time=0.059..916.079 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.623 ms
 JIT:
   Functions: 32
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 3.623 ms, Inlining 0.000 ms, Optimization 0.909 ms, Emission 20.440 ms, Total 24.971 ms
 Execution Time: 11714.251 ms
(31 rows)

===== 17-flattened.sql jit=on =====
                                                           QUERY PLAN                                                           
--------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5567413.03..6181096.50 rows=1857458 width=36) (actual time=70524.097..107212.351 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
   ->  Seq Scan on lineitem  (cost=0.00..1724423.32 rows=59988132 width=9) (actual time=0.249..12283.084 rows=59986052 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.780 ms
 JIT:
   Functions: 11
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.026 ms, Inlining 76.488 ms, Optimization 91.839 ms, Emission 55.032 ms, Total 225.385 ms
 Execution Time: 107428.158 ms
(11 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=249734.65..249734.66 rows=1 width=32) (actual time=728.277..728.279 rows=1 loops=1)
   ->  Aggregate  (cost=249734.65..249734.66 rows=1 width=32) (actual time=707.514..707.515 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..249682.53 rows=20846 width=8) (actual time=1.288..705.483 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..86614.75 rows=2085 width=20) (actual time=1.262..609.364 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70962.07 rows=2085 width=4) (actual time=1.227..586.952 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.50 rows=1 width=16) (actual time=0.010..0.010 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..78.07 rows=11 width=17) (actual time=0.020..0.047 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.911 ms
 JIT:
   Functions: 20
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.332 ms, Inlining 0.000 ms, Optimization 3.964 ms, Emission 16.228 ms, Total 22.524 ms
 Execution Time: 730.718 ms
(21 rows)

DROP TABLE
===== 17.sql jit=on =====
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6425987.40..6425987.42 rows=1 width=32) (actual time=114410.711..114410.715 rows=1 loops=1)
   ->  Aggregate  (cost=6425987.40..6425987.42 rows=1 width=32) (actual time=114060.272..114060.274 rows=1 loops=1)
         ->  Nested Loop  (cost=5638401.60..6425939.00 rows=19360 width=8) (actual time=71843.111..114058.362 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5638401.16..6275535.05 rows=1936 width=40) (actual time=71843.071..113961.213 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5567413.03..6181096.50 rows=1857458 width=36) (actual time=71411.489..113210.087 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724423.32 rows=59988132 width=9) (actual time=0.273..12735.250 rows=59986052 loops=1)
                     ->  Hash  (cost=70962.07..70962.07 rows=2085 width=4) (actual time=428.210..428.211 rows=1996 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 103kB
                           ->  Seq Scan on part  (cost=0.00..70962.07 rows=2085 width=4) (actual time=0.491..426.826 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..77.55 rows=11 width=17) (actual time=0.021..0.047 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.041 ms
 JIT:
   Functions: 33
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.095 ms, Inlining 89.158 ms, Optimization 229.118 ms, Emission 119.185 ms, Total 441.555 ms
 Execution Time: 114549.159 ms
(26 rows)

===== 18.sql jit=on =====
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9939345.98..9939346.23 rows=100 width=71) (actual time=88788.228..88788.248 rows=99 loops=1)
   ->  Sort  (cost=9939345.98..9989324.36 rows=19991352 width=71) (actual time=88487.027..88487.039 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8573988.50..9175290.88 rows=19991352 width=71) (actual time=88484.189..88486.809 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 64  Batches: 1  Memory Usage: 12369kB
               ->  Hash Join  (cost=69717.20..6618584.38 rows=19991352 width=44) (actual time=2819.911..88482.656 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=141.55..6496531.29 rows=19991352 width=25) (actual time=1938.872..87600.954 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729786.56 rows=4999011 width=24) (actual time=1467.994..65186.312 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650447.73 rows=15000553 width=20) (actual time=0.327..5118.364 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929359.70 rows=4999011 width=4) (actual time=1315.705..58645.955 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404463.55 rows=59988132 width=9) (actual time=0.733..25519.864 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404463.55 rows=59988132 width=9) (actual time=0.033..17019.522 rows=59916431 loops=1)
                     ->  Hash  (cost=50826.40..50826.40 rows=1499940 width=23) (actual time=876.771..876.773 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50826.40 rows=1499940 width=23) (actual time=0.342..346.848 rows=1500000 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.301 ms
 JIT:
   Functions: 30
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 3.110 ms, Inlining 61.690 ms, Optimization 145.321 ms, Emission 93.918 ms, Total 304.038 ms
 Execution Time: 88827.452 ms
(30 rows)

===== 19.sql jit=on =====


 Limit  (cost=736534.71..736534.72 rows=1 width=32) (actual time=1840.009..1840.011 rows=1 loops=1)
   ->  Aggregate  (cost=736534.71..736534.72 rows=1 width=32) (actual time=1516.649..1516.650 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..736526.25 rows=1127 width=12) (actual time=3.938..1514.260 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125962.21 rows=4817 width=30) (actual time=0.398..700.106 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..126.74 rows=1 width=21) (actual time=0.152..0.169 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.485 ms
 JIT:
   Functions: 12
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.462 ms, Inlining 61.691 ms, Optimization 155.504 ms, Emission 105.871 ms, Total 325.528 ms
 Execution Time: 1857.130 ms
(17 rows)

===== 1.sql jit=on =====
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3947214.94..3947214.95 rows=1 width=236) (actual time=170478.704..170478.706 rows=1 loops=1)
   ->  Sort  (cost=3947214.94..3947214.96 rows=6 width=236) (actual time=170182.635..170182.635 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3947214.75..3947214.92 rows=6 width=236) (actual time=170182.545..170182.564 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874393.65 rows=59223460 width=25) (actual time=0.294..16568.466 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.939 ms
 JIT:
   Functions: 10
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.797 ms, Inlining 63.373 ms, Optimization 139.455 ms, Emission 92.967 ms, Total 297.592 ms
 Execution Time: 170507.789 ms
(17 rows)

===== 20-flattened.sql jit=on =====
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2120531.42..2284481.60 rows=4883205 width=40) (actual time=109155.255..123299.524 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
   ->  Bitmap Heap Scan on lineitem  (cost=238445.49..1502305.91 rows=9287895 width=13) (actual time=3308.868..93172.268 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..236123.52 rows=9287895 width=0) (actual time=2593.910..2593.911 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.502 ms
 JIT:
   Functions: 13
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.456 ms, Inlining 75.626 ms, Optimization 135.020 ms, Emission 83.399 ms, Total 296.500 ms
 Execution Time: 123587.550 ms
(15 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=58600.48..58600.48 rows=1 width=51) (actual time=8636.039..8636.042 rows=1 loops=1)
   ->  Sort  (cost=58600.48..58600.48 rows=1 width=51) (actual time=8636.037..8636.039 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..58600.47 rows=1 width=51) (actual time=13.383..8630.117 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=55) (actual time=4.467..25.189 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.321..0.328 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=59) (actual time=4.137..22.456 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=3.129..3.129 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..14.04 rows=1 width=8) (actual time=2.100..2.100 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..13.55 rows=1 width=16) (actual time=1.816..2.089 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.06 rows=79 width=12) (actual time=0.025..1.389 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.014..0.014 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 11.295 ms
 Execution Time: 8637.387 ms
(33 rows)

DROP TABLE
===== 20.sql jit=on =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2447985.63..2447985.64 rows=1 width=51) (actual time=149688.131..149688.136 rows=1 loops=1)
   ->  Sort  (cost=2447985.63..2447985.64 rows=1 width=51) (actual time=149284.907..149284.911 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2186746.44..2447985.62 rows=1 width=51) (actual time=113641.113..149280.737 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183310388
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=55) (actual time=0.042..33.993 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.024..0.029 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=59) (actual time=0.010..25.492 rows=100000 loops=1)
               ->  Materialize  (cost=2186746.44..2443338.32 rows=3 width=8) (actual time=26.095..33.901 rows=44765 loops=4095)
                     ->  Nested Loop  (cost=2186746.44..2443338.30 rows=3 width=8) (actual time=106856.731..127175.928 rows=59002 loops=1)
                           ->  Hash Join  (cost=2186746.01..2412346.67 rows=49325 width=44) (actual time=106856.159..123125.328 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2120531.42..2284481.60 rows=4883205 width=40) (actual time=106370.805..121472.441 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=238445.49..1502305.91 rows=9287895 width=13) (actual time=3283.714..91015.823 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..236123.52 rows=9287895 width=0) (actual time=2571.333..2571.333 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65962.06..65962.06 rows=20202 width=4) (actual time=485.202..485.203 rows=21718 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1020kB
                                       ->  Seq Scan on part  (cost=0.00..65962.06 rows=20202 width=4) (actual time=0.410..474.237 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.067..0.067 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 6.956 ms
 JIT:
   Functions: 42
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 5.021 ms, Inlining 83.241 ms, Optimization 251.048 ms, Emission 155.277 ms, Total 494.587 ms
 Execution Time: 149749.989 ms
(42 rows)

===== 21.sql jit=on =====
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4271580.93..4271580.94 rows=1 width=34) (actual time=73993.253..73993.275 rows=100 loops=1)
   ->  Sort  (cost=4271580.93..4271580.94 rows=1 width=34) (actual time=73525.889..73525.902 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4271580.90..4271580.92 rows=1 width=34) (actual time=73511.130..73523.808 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4271580.90..4271580.91 rows=1 width=26) (actual time=73511.102..73515.785 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204909.77..4271580.89 rows=1 width=26) (actual time=26490.504..73310.758 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204909.20..4271573.35 rows=1 width=38) (actual time=26477.875..66676.549 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204908.77..4271566.04 rows=1 width=34) (actual time=26475.546..53595.373 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959765.96 rows=793258 width=34) (actual time=25.771..19748.144 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874393.65 rows=19996044 width=8) (actual time=0.348..13508.959 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=25.368..25.370 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=4.626..23.703 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.311..0.317 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=4.304..22.658 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=3.179..3.179 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874393.65..1874393.65 rows=19996044 width=8) (actual time=26436.891..26436.891 rows=37929348 loops=1)
                                             Buckets: 4194304  Batches: 16  Memory Usage: 125295kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874393.65 rows=19996044 width=8) (actual time=0.030..15185.646 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.096..0.096 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.098..0.099 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 13.763 ms
 JIT:
   Functions: 47
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 5.930 ms, Inlining 64.338 ms, Optimization 242.817 ms, Emission 159.842 ms, Total 472.927 ms
 Execution Time: 74094.493 ms
(51 rows)

===== 22.sql jit=on =====
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163185.71..163185.73 rows=1 width=72) (actual time=4293.305..4293.308 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75319.78..75319.79 rows=1 width=32) (actual time=1836.969..1836.970 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75200.43 rows=47740 width=6) (actual time=0.018..1753.725 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87865.92..88071.12 rows=7462 width=72) (actual time=4278.151..4278.152 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87865.92..87884.57 rows=7462 width=38) (actual time=4274.763..4275.405 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87385.91 rows=7462 width=38) (actual time=1837.078..4231.382 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75200.43 rows=17499 width=26) (actual time=1837.051..3251.063 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.28 rows=17 width=4) (actual time=0.004..0.004 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.630 ms
 JIT:
   Functions: 17
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.254 ms, Inlining 0.000 ms, Optimization 0.589 ms, Emission 14.298 ms, Total 17.141 ms
 Execution Time: 4309.407 ms
(25 rows)

===== 2-flattened.sql jit=on =====
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=207134.89..211598.74 rows=446385 width=36) (actual time=5649.049..6482.943 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 5  Memory Usage: 139313kB  Disk Usage: 15632kB
   ->  Nested Loop  (cost=42.10..199134.27 rows=1600124 width=10) (actual time=16.167..4215.681 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=16.141..90.087 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=14.541..14.575 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.042..0.059 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.580..0.580 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=14.475..14.478 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=1.525..13.904 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.923..0.923 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.06 rows=79 width=14) (actual time=0.010..0.183 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.193 ms
 JIT:
   Functions: 27
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 3.390 ms, Inlining 0.000 ms, Optimization 1.001 ms, Emission 17.835 ms, Total 22.227 ms
 Execution Time: 6552.380 ms
(27 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=514723.22..514723.23 rows=1 width=192) (actual time=6715.706..6715.728 rows=100 loops=1)
   ->  Sort  (cost=514723.22..514723.23 rows=1 width=192) (actual time=6232.907..6232.921 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Hash Join  (cost=264793.68..514723.21 rows=1 width=192) (actual time=5196.050..6227.588 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70962.07 rows=8269 width=30) (actual time=0.041..618.926 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=201725.82..201725.82 rows=1600124 width=172) (actual time=5194.955..5194.959 rows=1604080 loops=1)
                     Buckets: 1048576  Batches: 4  Memory Usage: 90233kB
                     ->  Nested Loop  (cost=2.00..201725.82 rows=1600124 width=172) (actual time=0.116..3627.265 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.089..80.330 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.036..0.039 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.048..70.516 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.008..26.735 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.024..0.025 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.005..0.011 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.06 rows=79 width=14) (actual time=0.009..0.158 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.007..0.007 rows=1 loops=12783)
                       Index Cond: (ps_partkey = part.p_partkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.520 ms
 JIT:
   Functions: 41
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.109 ms, Inlining 59.068 ms, Optimization 256.308 ms, Emission 167.065 ms, Total 486.550 ms
 Execution Time: 6720.261 ms
(36 rows)

DROP TABLE
===== 2.sql jit=on =====
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1692882.15..1692882.15 rows=1 width=192) (actual time=9100.361..9100.382 rows=100 loops=1)
   ->  Sort  (cost=1692882.15..1692882.15 rows=1 width=192) (actual time=8434.335..8434.348 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=503348.91..1692882.14 rows=1 width=192) (actual time=5941.283..8428.210 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..102913.53 rows=8269 width=30) (actual time=0.054..941.914 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=503347.62..511348.24 rows=1600124 width=172) (actual time=5940.999..6863.512 rows=1603828 loops=1)
                     ->  Sort  (cost=503347.62..507347.93 rows=1600124 width=172) (actual time=5940.993..6463.862 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293456kB
                           ->  Nested Loop  (cost=2.00..201725.82 rows=1600124 width=172) (actual time=0.085..3811.858 rows=1604080 loops=1)
                                 ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.063..82.705 rows=20051 loops=1)
                                       Join Filter: (nation.n_regionkey = region.r_regionkey)
                                       Rows Removed by Join Filter: 79949
                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.016..0.020 rows=1 loops=1)
                                             Filter: (r_name = 'AMERICA'::bpchar)
                                             Rows Removed by Filter: 4
                                       ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.043..72.357 rows=100000 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.004..24.049 rows=100000 loops=1)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.025..0.026 rows=25 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.008..0.013 rows=25 loops=1)
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.06 rows=79 width=14) (actual time=0.009..0.169 rows=80 loops=20051)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=162.40..162.41 rows=1 width=32) (actual time=0.051..0.051 rows=1 loops=6398)
                       ->  Nested Loop  (cost=0.86..162.39 rows=4 width=6) (actual time=0.030..0.048 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..161.10 rows=18 width=10) (actual time=0.018..0.044 rows=4 loops=6398)
                                   ->  Nested Loop  (cost=0.72..158.33 rows=18 width=10) (actual time=0.015..0.032 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.75 rows=18 width=10) (actual time=0.009..0.011 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 4.712 ms
 JIT:
   Functions: 57
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 5.866 ms, Inlining 64.198 ms, Optimization 362.633 ms, Emission 238.684 ms, Total 671.381 ms
 Execution Time: 9144.856 ms
(53 rows)

===== 3.sql jit=on =====
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2957965.88..2957965.90 rows=10 width=44) (actual time=44347.700..44347.714 rows=10 loops=1)
   ->  Sort  (cost=2957965.88..2965831.44 rows=3146226 width=44) (actual time=43928.695..43928.707 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2813779.40..2889977.06 rows=3146226 width=44) (actual time=43782.707..43880.654 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 8  Batches: 1  Memory Usage: 61457kB
               ->  Hash Join  (cost=528649.83..2556182.15 rows=3146226 width=24) (actual time=25120.428..43265.444 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874393.65 rows=32447042 width=16) (actual time=0.404..12492.002 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=510468.23..510468.23 rows=1454528 width=12) (actual time=25115.332..25115.341 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=139557.49..510468.23 rows=1454528 width=12) (actual time=1736.635..24222.185 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=81231.39..433051.40 rows=7272640 width=16) (actual time=1230.050..20851.508 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..79413.23 rows=7272640 width=0) (actual time=1081.383..1081.383 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54576.25..54576.25 rows=299988 width=4) (actual time=505.425..505.426 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54576.25 rows=299988 width=4) (actual time=0.501..404.113 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 7.856 ms
 JIT:
   Functions: 31
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 3.540 ms, Inlining 61.075 ms, Optimization 217.353 ms, Emission 140.252 ms, Total 422.220 ms
 Execution Time: 44389.965 ms
(33 rows)

===== 4.sql jit=on =====
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2587044.06..2587044.06 rows=1 width=24) (actual time=53482.201..53482.205 rows=1 loops=1)
   ->  Sort  (cost=2587044.06..2587044.07 rows=5 width=24) (actual time=53258.447..53258.450 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2587043.98..2587044.03 rows=5 width=24) (actual time=53258.375..53258.379 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2210328.75..2584165.58 rows=575681 width=16) (actual time=24736.472..53003.617 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7874.55..277423.79 rows=575816 width=20) (actual time=264.924..21961.591 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7730.60 rows=575816 width=0) (actual time=133.685..133.685 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874393.65..1874393.65 rows=19996044 width=4) (actual time=24458.975..24458.975 rows=37929348 loops=1)
                           Buckets: 4194304  Batches: 16  Memory Usage: 116042kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874393.65 rows=19996044 width=4) (actual time=0.309..14618.851 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 6.053 ms
 JIT:
   Functions: 19
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.103 ms, Inlining 55.701 ms, Optimization 103.965 ms, Emission 63.846 ms, Total 225.615 ms
 Execution Time: 53518.788 ms
(26 rows)

===== 5.sql jit=on =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2397657.99..2397657.99 rows=1 width=58) (actual time=45668.169..45668.178 rows=1 loops=1)
   ->  Sort  (cost=2397657.99..2397658.05 rows=25 width=58) (actual time=45082.095..45082.103 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2396747.95..2397657.86 rows=25 width=58) (actual time=45026.036..45082.030 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2396747.95..2396929.87 rows=72768 width=38) (actual time=45012.191..45017.976 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=413515.80..2390871.56 rows=72768 width=38) (actual time=23029.125..44937.197 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=408799.80..2376524.15 rows=1834553 width=50) (actual time=22962.507..44253.571 rows=1815327 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..1724423.32 rows=59988132 width=20) (actual time=0.386..10423.209 rows=59986052 loops=1)
                                 ->  Hash  (cost=403065.48..403065.48 rows=458746 width=38) (actual time=22960.820..22960.825 rows=453399 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 35976kB
                                       ->  Hash Join  (cost=94558.58..403065.48 rows=458746 width=38) (actual time=1230.737..22590.950 rows=453399 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=31355.17..326673.12 rows=2293730 width=8) (actual time=523.846..20824.918 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..30781.74 rows=2293730 width=0) (actual time=376.466..376.466 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Hash  (cost=59453.56..59453.56 rows=299988 width=38) (actual time=705.708..705.712 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                                   ->  Hash Join  (cost=2.51..59453.56 rows=299988 width=38) (actual time=0.832..575.962 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50826.40 rows=1499940 width=8) (actual time=0.333..306.700 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.482..0.484 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.468..0.477 rows=5 loops=1)
                                                                     Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.168..0.172 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.287..0.288 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.276..0.278 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=64.632..64.632 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.572..30.746 rows=100000 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 14.345 ms
 JIT:
   Functions: 56
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 5.425 ms, Inlining 61.252 ms, Optimization 320.245 ms, Emission 204.132 ms, Total 591.054 ms
 Execution Time: 45704.987 ms
(48 rows)

===== 6.sql jit=on =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1508376.54..1508376.55 rows=1 width=32) (actual time=7913.415..7913.416 rows=1 loops=1)
   ->  Aggregate  (cost=1508376.54..1508376.55 rows=1 width=32) (actual time=7744.969..7744.970 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=303385.34..1502368.77 rows=1201553 width=12) (actual time=3373.450..6915.578 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..303084.95 rows=1201553 width=0) (actual time=2962.361..2962.361 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.277 ms
 JIT:
   Functions: 6
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.043 ms, Inlining 58.594 ms, Optimization 66.907 ms, Emission 42.756 ms, Total 169.300 ms
 Execution Time: 7931.284 ms
(14 rows)

===== 7.sql jit=on =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2508123.21..2508123.33 rows=1 width=116) (actual time=91435.210..91435.219 rows=1 loops=1)
   ->  GroupAggregate  (cost=2508123.21..2509317.06 rows=10044 width=116) (actual time=90739.680..90739.688 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2508123.21..2508272.24 rows=59611 width=96) (actual time=90720.783..90722.187 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1018210.26..2503395.08 rows=59611 width=96) (actual time=13244.845..90606.638 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=467107.12..1944479.56 rows=1432405 width=46) (actual time=5683.757..82258.601 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=463482.72..1858829.83 rows=18053674 width=24) (actual time=5638.672..76464.894 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..458969.30 rows=18053674 width=0) (actual time=4876.548..4876.548 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=45.042..45.045 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.903..42.162 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.566..26.259 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.325..0.326 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.315..0.319 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536102.58..536102.58 rows=1200044 width=30) (actual time=7555.327..7555.330 rows=1191175 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                           ->  Hash Join  (cost=56932.56..536102.58 rows=1200044 width=30) (actual time=578.284..7037.305 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..410917.53 rows=15000553 width=8) (actual time=0.290..2765.169 rows=15000000 loops=1)
                                 ->  Hash  (cost=55432.62..55432.62 rows=119995 width=30) (actual time=577.691..577.692 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55432.62 rows=119995 width=30) (actual time=0.357..530.893 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50826.40 rows=1499940 width=8) (actual time=0.306..299.705 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.040..0.040 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.025..0.030 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 12.266 ms
 JIT:
   Functions: 60
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.259 ms, Inlining 60.124 ms, Optimization 388.011 ms, Emission 246.897 ms, Total 701.291 ms
 Execution Time: 91479.603 ms
(49 rows)

===== 8.sql jit=on =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2057802.61..2057802.85 rows=1 width=64) (actual time=50499.755..50499.764 rows=1 loops=1)
   ->  GroupAggregate  (cost=2057802.61..2058386.16 rows=2406 width=64) (actual time=49869.761..49869.769 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=2057802.61..2057862.10 rows=23797 width=70) (actual time=49856.742..49857.652 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=495958.69..2056072.75 rows=23797 width=70) (actual time=11745.334..49797.532 rows=23842 loops=1)
                     ->  Hash Join  (cost=495958.54..2055377.35 rows=23797 width=20) (actual time=11745.305..49676.147 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=491492.54..2050848.36 rows=23995 width=20) (actual time=11682.334..49582.651 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1557627.68 rows=396970 width=20) (actual time=1.441..37498.196 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65962.06 rows=13235 width=4) (actual time=0.932..654.864 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..112.39 rows=32 width=24) (actual time=0.158..2.810 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=480158.35..480158.35 rows=906700 width=8) (actual time=11673.332..11673.337 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=125176.22..480158.35 rows=906700 width=8) (actual time=1627.572..11260.933 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=61972.81..390887.31 rows=4533500 width=12) (actual time=854.488..8935.532 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..60839.43 rows=4533500 width=0) (actual time=707.682..707.682 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59453.56..59453.56 rows=299988 width=4) (actual time=771.929..771.932 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59453.56 rows=299988 width=4) (actual time=0.755..671.142 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50826.40 rows=1499940 width=8) (actual time=0.430..397.186 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.309..0.311 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.287..0.297 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.012..0.016 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.246..0.247 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.225..0.230 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=62.669..62.670 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.521..31.712 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.009..0.009 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 19.890 ms
 JIT:
   Functions: 67
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.545 ms, Inlining 76.036 ms, Optimization 337.743 ms, Emission 215.725 ms, Total 636.050 ms
 Execution Time: 50537.366 ms
(56 rows)

===== 9.sql jit=on =====
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3465026.15..3465026.15 rows=1 width=90) (actual time=62256.326..62256.334 rows=1 loops=1)
   ->  Sort  (cost=3465026.15..3465176.52 rows=60150 width=90) (actual time=61798.115..61798.121 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3463823.15..3464725.40 rows=60150 width=90) (actual time=61797.166..61797.940 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=1143190.31..3369172.89 rows=5408586 width=81) (actual time=14724.477..54684.573 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=1143188.74..3339045.51 rows=5408586 width=31) (actual time=14724.421..52369.220 rows=3248192 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Hash Join  (cost=486168.30..2535285.53 rows=5408586 width=31) (actual time=5761.676..36571.818 rows=3248192 loops=1)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Hash Join  (cost=481702.30..2516503.55 rows=5453477 width=35) (actual time=5711.340..35059.374 rows=3248192 loops=1)
                                       Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                       ->  Hash Join  (cost=68234.80..1950127.30 rows=5453477 width=33) (actual time=761.110..24949.585 rows=3248192 loops=1)
                                             Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1724423.32 rows=59988132 width=29) (actual time=0.499..10895.571 rows=59986052 loops=1)
                                             ->  Hash  (cost=65962.06..65962.06 rows=181819 width=4) (actual time=760.017..760.017 rows=108312 loops=1)
                                                   Buckets: 262144  Batches: 1  Memory Usage: 5856kB
                                                   ->  Seq Scan on part  (cost=0.00..65962.06 rows=181819 width=4) (actual time=0.410..716.249 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                       ->  Hash  (cost=254392.20..254392.20 rows=8000620 width=14) (actual time=4941.077..4941.077 rows=8000000 loops=1)
                                             Buckets: 4194304  Batches: 4  Memory Usage: 126558kB
                                             ->  Seq Scan on partsupp  (cost=0.00..254392.20 rows=8000620 width=14) (actual time=0.562..1858.193 rows=8000000 loops=1)
                                 ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=50.046..50.046 rows=100000 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.023..22.170 rows=100000 loops=1)
                           ->  Hash  (cost=410917.53..410917.53 rows=15000553 width=8) (actual time=8953.016..8953.017 rows=15000000 loops=1)
                                 Buckets: 4194304  Batches: 8  Memory Usage: 106038kB
                                 ->  Seq Scan on orders  (cost=0.00..410917.53 rows=15000553 width=8) (actual time=0.529..4038.093 rows=15000000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.040..0.040 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.020..0.026 rows=25 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 14.516 ms
 JIT:
   Functions: 53
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 5.083 ms, Inlining 68.306 ms, Optimization 242.183 ms, Emission 147.349 ms, Total 462.921 ms
 Execution Time: 62303.359 ms
(42 rows)

===== 10.sql jit=off =====
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2415651.23..2415651.28 rows=20 width=201) (actual time=53260.814..53260.822 rows=20 loops=1)
   ->  Sort  (cost=2415651.23..2417137.82 rows=594636 width=201) (actual time=53260.813..53260.818 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2256161.56..2399828.18 rows=594636 width=201) (actual time=47053.463..52938.580 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=2256161.56..2384962.28 rows=594636 width=181) (actual time=47053.438..50801.843 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 33kB  Peak Memory: 33kB
                     ->  Nested Loop  (cost=2256161.38..2358203.66 rows=594636 width=181) (actual time=47052.889..49929.871 rows=1145402 loops=1)
                           ->  Merge Join  (cost=2256161.23..2343612.93 rows=594636 width=159) (actual time=47052.855..48817.424 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..74793.53 rows=1499940 width=147) (actual time=0.016..712.372 rows=1499997 loops=1)
                                 ->  Sort  (cost=2256160.59..2257647.18 rows=594636 width=16) (actual time=47052.815..47237.942 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: quicksort  Memory: 113386kB
                                       ->  Hash Join  (cost=285453.21..2199130.10 rows=594636 width=16) (actual time=21106.256..46212.532 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1874393.65 rows=14965040 width=16) (actual time=0.295..21662.267 rows=14808183 loops=1)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 45177869
                                             ->  Hash  (cost=278002.62..278002.62 rows=596047 width=8) (actual time=21103.517..21103.518 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=8149.92..278002.62 rows=596047 width=8) (actual time=266.334..20618.271 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233137
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8000.91 rows=596047 width=0) (actual time=135.573..135.573 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..2.16 rows=1 width=30) (actual time=0.004..0.004 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 11.067 ms
 Execution Time: 53268.591 ms
(37 rows)

===== 11.sql jit=off =====
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=94523.42..94523.42 rows=1 width=36) (actual time=2913.057..2913.063 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44194.80..44194.81 rows=1 width=32) (actual time=1073.301..1073.303 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..41794.61 rows=320025 width=10) (actual time=1.640..799.328 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=1.619..15.149 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.014..0.019 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=1.601..13.782 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.010..1.010 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.06 rows=79 width=14) (actual time=0.010..0.171 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50328.61..50595.29 rows=106675 width=36) (actual time=2913.055..2913.057 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=44994.86..49795.23 rows=106675 width=36) (actual time=2912.992..2912.994 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 5  Memory Usage: 135217kB  Disk Usage: 752kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..41794.61 rows=320025 width=14) (actual time=1.722..963.585 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=1.692..17.152 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.029..0.035 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=1.655..15.689 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.040..1.040 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.06 rows=79 width=18) (actual time=0.011..0.207 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.649 ms
 Execution Time: 2917.562 ms
(38 rows)

===== 12.sql jit=off =====
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3029760.42..3030570.67 rows=1 width=27) (actual time=40626.847..40626.851 rows=1 loops=1)
   ->  GroupAggregate  (cost=3029760.42..3035432.13 rows=7 width=27) (actual time=40626.845..40626.848 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3029760.42..3030469.38 rows=283582 width=27) (actual time=40508.111..40518.924 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2477819.74..3004077.24 rows=283582 width=27) (actual time=33597.326..40366.364 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410917.53 rows=15000553 width=20) (actual time=0.191..2677.340 rows=15000000 loops=1)
                     ->  Hash  (cost=2474274.97..2474274.97 rows=283582 width=15) (actual time=33594.815..33594.817 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474274.97 rows=283582 width=15) (actual time=0.976..33384.266 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.697 ms
 Execution Time: 40628.832 ms
(17 rows)

===== 13.sql jit=off =====
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1523773.63..1523773.64 rows=1 width=16) (actual time=31894.573..31894.576 rows=1 loops=1)
   ->  Sort  (cost=1523773.63..1523774.13 rows=200 width=16) (actual time=31894.571..31894.574 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1523770.63..1523772.63 rows=200 width=16) (actual time=31894.506..31894.522 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1371447.82..1501271.53 rows=1499940 width=12) (actual time=30342.407..31390.917 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 5  Memory Usage: 131121kB  Disk Usage: 27424kB
                     ->  Hash Right Join  (cost=57712.78..544712.77 rows=14697512 width=8) (actual time=714.706..20339.718 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448418.91 rows=14697512 width=8) (actual time=0.056..10130.996 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38963.53..38963.53 rows=1499940 width=4) (actual time=710.160..710.161 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38963.53 rows=1499940 width=4) (actual time=0.037..261.123 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.394 ms
 Execution Time: 31913.917 ms
(22 rows)

===== 14.sql jit=off =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1234188.24..1234188.26 rows=1 width=32) (actual time=6652.642..6652.646 rows=1 loops=1)
   ->  Aggregate  (cost=1234188.24..1234188.26 rows=1 width=32) (actual time=6652.640..6652.643 rows=1 loops=1)
         ->  Hash Join  (cost=119461.85..1220674.53 rows=772212 width=33) (actual time=1878.896..5616.180 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=19827.74..1097799.36 rows=772212 width=16) (actual time=550.145..3223.877 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..19634.68 rows=772212 width=0) (actual time=292.242..292.242 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60962.05..60962.05 rows=2000005 width=25) (actual time=1324.216..1324.217 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 74141kB
                     ->  Seq Scan on part  (cost=0.00..60962.05 rows=2000005 width=25) (actual time=0.041..628.627 rows=2000000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.990 ms
 Execution Time: 6655.465 ms
(15 rows)

===== 15.sql jit=off =====
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1239484.63..1240745.00 rows=100830 width=36) (actual time=9084.847..9170.404 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=57402.41..1217125.76 rows=2235887 width=16) (actual time=1101.753..5186.471 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56843.43 rows=2235887 width=0) (actual time=685.964..685.965 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.030 ms
 Execution Time: 9179.198 ms
(11 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2483030.42..2483040.51 rows=1 width=103) (actual time=17866.909..17866.914 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1242005.38..1242005.39 rows=1 width=32) (actual time=8933.455..8933.456 rows=1 loops=1)
           ->  HashAggregate  (cost=1239484.63..1240745.00 rows=100830 width=36) (actual time=8837.327..8920.274 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=57402.41..1217125.76 rows=2235887 width=16) (actual time=1073.202..4970.403 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56843.43 rows=2235887 width=0) (actual time=658.845..658.845 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1241025.03..1246109.69 rows=504 width=103) (actual time=17866.907..17866.909 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4827.39 rows=100000 width=71) (actual time=0.267..23.721 rows=69998 loops=1)
         ->  Sort  (cost=1241024.74..1241026.00 rows=504 width=36) (actual time=17833.983..17833.985 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1239484.63..1241002.12 rows=504 width=36) (actual time=17772.951..17833.968 rows=1 loops=1)
                     ->  HashAggregate  (cost=1239484.63..1240997.08 rows=504 width=36) (actual time=17772.949..17833.964 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=57402.41..1217125.76 rows=2235887 width=16) (actual time=1090.545..4965.222 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56843.43 rows=2235887 width=0) (actual time=672.607..672.607 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.978 ms
 Execution Time: 17875.106 ms
(31 rows)

DROP VIEW
===== 16.sql jit=off =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=402589.72..402589.72 rows=1 width=44) (actual time=12566.373..12566.377 rows=1 loops=1)
   ->  Sort  (cost=402589.72..402972.98 rows=153306 width=44) (actual time=12566.371..12566.375 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=392916.45..401823.19 rows=153306 width=44) (actual time=11568.982..12552.473 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=392916.45..394391.19 rows=589894 width=40) (actual time=11568.907..11703.473 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 122929kB
                     ->  Hash Join  (cost=98115.15..336374.83 rows=589894 width=40) (actual time=1390.440..7072.835 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3466.46..231225.31 rows=4000310 width=8) (actual time=50.441..3844.110 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=10 width=4) (actual time=0.221..50.352 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90962.12..90962.12 rows=294925 width=40) (actual time=1338.838..1338.839 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90962.12 rows=294925 width=40) (actual time=0.053..1187.986 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.588 ms
 Execution Time: 12572.689 ms
(27 rows)

===== 17-flattened.sql jit=off =====
                                                           QUERY PLAN                                                           
--------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5567413.03..6181096.50 rows=1857458 width=36) (actual time=74933.214..123987.549 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
   ->  Seq Scan on lineitem  (cost=0.00..1724423.32 rows=59988132 width=9) (actual time=0.404..12883.972 rows=59986052 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.768 ms
 Execution Time: 124201.975 ms
(7 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=249734.65..249734.66 rows=1 width=32) (actual time=838.846..838.847 rows=1 loops=1)
   ->  Aggregate  (cost=249734.65..249734.66 rows=1 width=32) (actual time=838.844..838.845 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..249682.53 rows=20846 width=8) (actual time=0.469..836.740 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..86614.75 rows=2085 width=20) (actual time=0.447..733.377 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70962.07 rows=2085 width=4) (actual time=0.428..710.399 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.50 rows=1 width=16) (actual time=0.010..0.010 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..78.07 rows=11 width=17) (actual time=0.021..0.050 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.909 ms
 Execution Time: 838.900 ms
(17 rows)

DROP TABLE
===== 17.sql jit=off =====
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6425987.40..6425987.42 rows=1 width=32) (actual time=123098.153..123098.157 rows=1 loops=1)
   ->  Aggregate  (cost=6425987.40..6425987.42 rows=1 width=32) (actual time=123098.150..123098.154 rows=1 loops=1)
         ->  Nested Loop  (cost=5638401.60..6425939.00 rows=19360 width=8) (actual time=74657.280..123095.956 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5638401.16..6275535.05 rows=1936 width=40) (actual time=74657.231..122990.550 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5567413.03..6181096.50 rows=1857458 width=36) (actual time=73973.534..121968.383 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724423.32 rows=59988132 width=9) (actual time=0.364..12306.680 rows=59986052 loops=1)
                     ->  Hash  (cost=70962.07..70962.07 rows=2085 width=4) (actual time=680.244..680.244 rows=1996 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 103kB
                           ->  Seq Scan on part  (cost=0.00..70962.07 rows=2085 width=4) (actual time=0.577..678.004 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..77.55 rows=11 width=17) (actual time=0.023..0.051 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.601 ms
 Execution Time: 123197.389 ms
(22 rows)

===== 18.sql jit=off =====
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9939345.98..9939346.23 rows=100 width=71) (actual time=100965.848..100965.873 rows=99 loops=1)
   ->  Sort  (cost=9939345.98..9989324.36 rows=19991352 width=71) (actual time=100965.846..100965.863 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8573988.50..9175290.88 rows=19991352 width=71) (actual time=100962.881..100965.621 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 64  Batches: 1  Memory Usage: 12369kB
               ->  Hash Join  (cost=69717.20..6618584.38 rows=19991352 width=44) (actual time=3159.760..100961.229 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=141.55..6496531.29 rows=19991352 width=25) (actual time=2175.782..99976.392 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729786.56 rows=4999011 width=24) (actual time=1660.033..75476.575 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650447.73 rows=15000553 width=20) (actual time=0.334..5117.060 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929359.70 rows=4999011 width=4) (actual time=1496.574..68384.824 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404463.55 rows=59988132 width=9) (actual time=0.903..25428.352 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404463.55 rows=59988132 width=9) (actual time=0.034..17035.095 rows=59916431 loops=1)
                     ->  Hash  (cost=50826.40..50826.40 rows=1499940 width=23) (actual time=979.714..979.721 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50826.40 rows=1499940 width=23) (actual time=0.487..440.401 rows=1500000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.389 ms
 Execution Time: 100970.746 ms
(26 rows)

===== 19.sql jit=off =====


 Limit  (cost=736534.71..736534.72 rows=1 width=32) (actual time=2022.540..2022.542 rows=1 loops=1)
   ->  Aggregate  (cost=736534.71..736534.72 rows=1 width=32) (actual time=2022.538..2022.539 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..736526.25 rows=1127 width=12) (actual time=5.051..2020.046 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125962.21 rows=4817 width=30) (actual time=0.567..1165.756 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..126.74 rows=1 width=21) (actual time=0.160..0.177 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.485 ms
 Execution Time: 2022.655 ms
(13 rows)

===== 1.sql jit=off =====
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3947214.94..3947214.95 rows=1 width=236) (actual time=213597.293..213597.295 rows=1 loops=1)
   ->  Sort  (cost=3947214.94..3947214.96 rows=6 width=236) (actual time=213597.291..213597.292 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3947214.75..3947214.92 rows=6 width=236) (actual time=213597.234..213597.254 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874393.65 rows=59223460 width=25) (actual time=0.045..28602.751 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.101 ms
 Execution Time: 213597.422 ms
(13 rows)

===== 20-flattened.sql jit=off =====
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2120531.42..2284481.60 rows=4883205 width=40) (actual time=108661.124..125141.309 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
   ->  Bitmap Heap Scan on lineitem  (cost=238445.49..1502305.91 rows=9287895 width=13) (actual time=3299.195..92891.509 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..236123.52 rows=9287895 width=0) (actual time=2585.672..2585.673 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.289 ms
 Execution Time: 125479.254 ms
(11 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=58600.48..58600.48 rows=1 width=51) (actual time=8825.552..8825.555 rows=1 loops=1)
   ->  Sort  (cost=58600.48..58600.48 rows=1 width=51) (actual time=8825.549..8825.552 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..58600.47 rows=1 width=51) (actual time=12.207..8819.787 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=55) (actual time=4.464..23.820 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.185..0.192 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=59) (actual time=4.270..21.502 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=3.157..3.157 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..14.04 rows=1 width=8) (actual time=2.147..2.147 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..13.55 rows=1 width=16) (actual time=1.889..2.136 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.06 rows=79 width=12) (actual time=0.027..1.071 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.017..0.017 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.017..0.017 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.014..0.014 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.141 ms
 Execution Time: 8826.880 ms
(33 rows)

DROP TABLE
===== 20.sql jit=off =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2447985.63..2447985.64 rows=1 width=51) (actual time=165282.016..165282.022 rows=1 loops=1)
   ->  Sort  (cost=2447985.63..2447985.64 rows=1 width=51) (actual time=165282.014..165282.019 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2186746.44..2447985.62 rows=1 width=51) (actual time=115867.351..165278.056 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183310388
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=55) (actual time=0.044..47.602 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.027..0.033 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=59) (actual time=0.011..25.872 rows=100000 loops=1)
               ->  Materialize  (cost=2186746.44..2443338.32 rows=3 width=8) (actual time=26.529..34.888 rows=44765 loops=4095)
                     ->  Nested Loop  (cost=2186746.44..2443338.30 rows=3 width=8) (actual time=108637.741..130971.298 rows=59002 loops=1)
                           ->  Hash Join  (cost=2186746.01..2412346.67 rows=49325 width=44) (actual time=108637.165..126964.559 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2120531.42..2284481.60 rows=4883205 width=40) (actual time=108020.901..125051.598 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=238445.49..1502305.91 rows=9287895 width=13) (actual time=3244.163..92056.605 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..236123.52 rows=9287895 width=0) (actual time=2530.778..2530.778 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65962.06..65962.06 rows=20202 width=4) (actual time=616.114..616.115 rows=21718 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1020kB
                                       ->  Seq Scan on part  (cost=0.00..65962.06 rows=20202 width=4) (actual time=0.264..604.133 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.066..0.066 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 6.352 ms
 Execution Time: 165311.372 ms
(38 rows)

===== 21.sql jit=off =====
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4271580.93..4271580.94 rows=1 width=34) (actual time=96616.184..96616.206 rows=100 loops=1)
   ->  Sort  (cost=4271580.93..4271580.94 rows=1 width=34) (actual time=96616.182..96616.195 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4271580.90..4271580.92 rows=1 width=34) (actual time=96598.344..96614.072 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4271580.90..4271580.91 rows=1 width=26) (actual time=96598.326..96603.376 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204909.77..4271580.89 rows=1 width=26) (actual time=39572.380..96400.667 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204909.20..4271573.35 rows=1 width=38) (actual time=39553.642..90779.820 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204908.77..4271566.04 rows=1 width=34) (actual time=39551.055..78592.108 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959765.96 rows=793258 width=34) (actual time=25.335..31035.166 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874393.65 rows=19996044 width=8) (actual time=0.188..24128.001 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=25.083..25.085 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=4.210..23.313 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.171..0.177 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=4.034..22.059 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=3.093..3.093 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874393.65..1874393.65 rows=19996044 width=8) (actual time=39510.259..39510.259 rows=37929348 loops=1)
                                             Buckets: 4194304  Batches: 16  Memory Usage: 125295kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874393.65 rows=19996044 width=8) (actual time=0.022..27738.933 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.089..0.089 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.082..0.083 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 12.485 ms
 Execution Time: 96618.629 ms
(47 rows)

===== 22.sql jit=off =====
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163185.71..163185.73 rows=1 width=72) (actual time=4605.767..4605.770 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75319.78..75319.79 rows=1 width=32) (actual time=2038.363..2038.364 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75200.43 rows=47740 width=6) (actual time=0.014..1934.216 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87865.92..88071.12 rows=7462 width=72) (actual time=4605.766..4605.767 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87865.92..87884.57 rows=7462 width=38) (actual time=4601.158..4601.800 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87385.91 rows=7462 width=38) (actual time=2038.469..4558.563 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75200.43 rows=17499 width=26) (actual time=2038.437..3581.325 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.28 rows=17 width=4) (actual time=0.004..0.004 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.599 ms
 Execution Time: 4606.053 ms
(21 rows)

===== 2-flattened.sql jit=off =====
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=207134.89..211598.74 rows=446385 width=36) (actual time=5783.831..6667.645 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 5  Memory Usage: 139313kB  Disk Usage: 15632kB
   ->  Nested Loop  (cost=42.10..199134.27 rows=1600124 width=10) (actual time=1.738..4271.266 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=1.711..78.445 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=0.078..0.114 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.041..0.055 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.022..0.024 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=1.537..14.272 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.934..0.934 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.06 rows=79 width=14) (actual time=0.011..0.183 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.186 ms
 Execution Time: 6719.202 ms
(23 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=514723.22..514723.23 rows=1 width=192) (actual time=6772.204..6772.226 rows=100 loops=1)
   ->  Sort  (cost=514723.22..514723.23 rows=1 width=192) (actual time=6772.203..6772.216 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Hash Join  (cost=264793.68..514723.21 rows=1 width=192) (actual time=5500.816..6766.666 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70962.07 rows=8269 width=30) (actual time=0.031..843.398 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=201725.82..201725.82 rows=1600124 width=172) (actual time=5499.706..5499.710 rows=1604080 loops=1)
                     Buckets: 1048576  Batches: 4  Memory Usage: 90233kB
                     ->  Nested Loop  (cost=2.00..201725.82 rows=1600124 width=172) (actual time=0.107..3903.425 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.082..124.154 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.030..0.033 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.049..105.572 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.008..27.697 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.025..0.026 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.005..0.012 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.06 rows=79 width=14) (actual time=0.009..0.158 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.007..0.007 rows=1 loops=12783)
                       Index Cond: (ps_partkey = part.p_partkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.481 ms
 Execution Time: 6772.597 ms
(32 rows)

DROP TABLE
===== 2.sql jit=off =====
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1692882.15..1692882.15 rows=1 width=192) (actual time=9094.621..9094.642 rows=100 loops=1)
   ->  Sort  (cost=1692882.15..1692882.15 rows=1 width=192) (actual time=9094.620..9094.632 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=503348.91..1692882.14 rows=1 width=192) (actual time=6191.246..9088.500 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..102913.53 rows=8269 width=30) (actual time=0.048..1197.573 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=503347.62..511348.24 rows=1600124 width=172) (actual time=6190.984..7104.843 rows=1603828 loops=1)
                     ->  Sort  (cost=503347.62..507347.93 rows=1600124 width=172) (actual time=6190.975..6711.056 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293456kB
                           ->  Nested Loop  (cost=2.00..201725.82 rows=1600124 width=172) (actual time=0.087..4136.607 rows=1604080 loops=1)
                                 ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.067..125.943 rows=20051 loops=1)
                                       Join Filter: (nation.n_regionkey = region.r_regionkey)
                                       Rows Removed by Join Filter: 79949
                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.014..0.018 rows=1 loops=1)
                                             Filter: (r_name = 'AMERICA'::bpchar)
                                             Rows Removed by Filter: 4
                                       ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.050..107.767 rows=100000 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.003..25.252 rows=100000 loops=1)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.031..0.032 rows=25 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.011..0.018 rows=25 loops=1)
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.06 rows=79 width=14) (actual time=0.009..0.171 rows=80 loops=20051)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=162.40..162.41 rows=1 width=32) (actual time=0.053..0.053 rows=1 loops=6398)
                       ->  Nested Loop  (cost=0.86..162.39 rows=4 width=6) (actual time=0.031..0.050 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..161.10 rows=18 width=10) (actual time=0.019..0.045 rows=4 loops=6398)
                                   ->  Nested Loop  (cost=0.72..158.33 rows=18 width=10) (actual time=0.015..0.033 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.75 rows=18 width=10) (actual time=0.009..0.011 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 4.708 ms
 Execution Time: 9114.993 ms
(49 rows)

===== 3.sql jit=off =====
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2957965.88..2957965.90 rows=10 width=44) (actual time=58641.104..58641.111 rows=10 loops=1)
   ->  Sort  (cost=2957965.88..2965831.44 rows=3146226 width=44) (actual time=58641.102..58641.108 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2813779.40..2889977.06 rows=3146226 width=44) (actual time=58482.354..58590.631 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 8  Batches: 1  Memory Usage: 61457kB
               ->  Hash Join  (cost=528649.83..2556182.15 rows=3146226 width=24) (actual time=29279.556..57871.450 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874393.65 rows=32447042 width=16) (actual time=0.363..22386.091 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=510468.23..510468.23 rows=1454528 width=12) (actual time=29274.435..29274.438 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=139557.49..510468.23 rows=1454528 width=12) (actual time=1922.000..28313.647 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=81231.39..433051.40 rows=7272640 width=16) (actual time=1232.640..23738.661 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..79413.23 rows=7272640 width=0) (actual time=1084.385..1084.385 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54576.25..54576.25 rows=299988 width=4) (actual time=688.207..688.208 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54576.25 rows=299988 width=4) (actual time=0.340..578.636 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 7.573 ms
 Execution Time: 58647.786 ms
(29 rows)

===== 4.sql jit=off =====
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2587044.06..2587044.06 rows=1 width=24) (actual time=66743.676..66743.679 rows=1 loops=1)
   ->  Sort  (cost=2587044.06..2587044.07 rows=5 width=24) (actual time=66743.674..66743.676 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2587043.98..2587044.03 rows=5 width=24) (actual time=66743.621..66743.625 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2210328.75..2584165.58 rows=575681 width=16) (actual time=36958.055..66413.922 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7874.55..277423.79 rows=575816 width=20) (actual time=264.194..23286.267 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7730.60 rows=575816 width=0) (actual time=133.121..133.122 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874393.65..1874393.65 rows=19996044 width=4) (actual time=36684.486..36684.487 rows=37929348 loops=1)
                           Buckets: 4194304  Batches: 16  Memory Usage: 116042kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874393.65 rows=19996044 width=4) (actual time=0.503..26232.478 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 5.885 ms
 Execution Time: 66745.377 ms
(22 rows)

===== 5.sql jit=off =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2397657.99..2397657.99 rows=1 width=58) (actual time=48473.556..48473.564 rows=1 loops=1)
   ->  Sort  (cost=2397657.99..2397658.05 rows=25 width=58) (actual time=48473.554..48473.562 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2396747.95..2397657.86 rows=25 width=58) (actual time=48406.840..48473.521 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2396747.95..2396929.87 rows=72768 width=38) (actual time=48390.343..48396.437 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=413515.80..2390871.56 rows=72768 width=38) (actual time=23441.303..48317.431 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=408799.80..2376524.15 rows=1834553 width=50) (actual time=23364.397..47585.477 rows=1815327 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..1724423.32 rows=59988132 width=20) (actual time=0.472..10579.791 rows=59986052 loops=1)
                                 ->  Hash  (cost=403065.48..403065.48 rows=458746 width=38) (actual time=23362.623..23362.629 rows=453399 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 35976kB
                                       ->  Hash Join  (cost=94558.58..403065.48 rows=458746 width=38) (actual time=1377.276..22989.660 rows=453399 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=31355.17..326673.12 rows=2293730 width=8) (actual time=522.808..20752.331 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..30781.74 rows=2293730 width=0) (actual time=375.747..375.747 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Hash  (cost=59453.56..59453.56 rows=299988 width=38) (actual time=853.294..853.298 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                                   ->  Hash Join  (cost=2.51..59453.56 rows=299988 width=38) (actual time=1.098..719.051 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50826.40 rows=1499940 width=8) (actual time=0.468..306.060 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.610..0.613 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.595..0.607 rows=5 loops=1)
                                                                     Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.307..0.311 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.265..0.266 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.254..0.257 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=74.447..74.448 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.373..38.831 rows=100000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 13.769 ms
 Execution Time: 48475.380 ms
(44 rows)

===== 6.sql jit=off =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1508376.54..1508376.55 rows=1 width=32) (actual time=8011.218..8011.220 rows=1 loops=1)
   ->  Aggregate  (cost=1508376.54..1508376.55 rows=1 width=32) (actual time=8011.216..8011.217 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=303385.34..1502368.77 rows=1201553 width=12) (actual time=3362.350..6959.537 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..303084.95 rows=1201553 width=0) (actual time=2951.337..2951.337 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.114 ms
 Execution Time: 8013.697 ms
(10 rows)

===== 7.sql jit=off =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2508123.21..2508123.33 rows=1 width=116) (actual time=91281.833..91281.842 rows=1 loops=1)
   ->  GroupAggregate  (cost=2508123.21..2509317.06 rows=10044 width=116) (actual time=91281.831..91281.839 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2508123.21..2508272.24 rows=59611 width=96) (actual time=91258.350..91259.864 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1018210.26..2503395.08 rows=59611 width=96) (actual time=14312.729..91147.296 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=467107.12..1944479.56 rows=1432405 width=46) (actual time=5713.013..81701.852 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=463482.72..1858829.83 rows=18053674 width=24) (actual time=5660.060..74357.873 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..458969.30 rows=18053674 width=0) (actual time=4898.138..4898.139 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=52.903..52.905 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.514..49.773 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.344..26.408 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.156..0.157 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.144..0.148 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536102.58..536102.58 rows=1200044 width=30) (actual time=8593.351..8593.354 rows=1191175 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                           ->  Hash Join  (cost=56932.56..536102.58 rows=1200044 width=30) (actual time=713.917..8067.668 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..410917.53 rows=15000553 width=8) (actual time=0.038..2806.943 rows=15000000 loops=1)
                                 ->  Hash  (cost=55432.62..55432.62 rows=119995 width=30) (actual time=713.571..713.572 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55432.62 rows=119995 width=30) (actual time=0.514..664.300 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50826.40 rows=1499940 width=8) (actual time=0.461..316.900 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.035..0.036 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.023..0.028 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 11.725 ms
 Execution Time: 91287.108 ms
(45 rows)

===== 8.sql jit=off =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2057802.61..2057802.85 rows=1 width=64) (actual time=42329.998..42330.007 rows=1 loops=1)
   ->  GroupAggregate  (cost=2057802.61..2058386.16 rows=2406 width=64) (actual time=42329.995..42330.003 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=2057802.61..2057862.10 rows=23797 width=70) (actual time=42313.005..42313.922 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=495958.69..2056072.75 rows=23797 width=70) (actual time=13464.436..42260.263 rows=23842 loops=1)
                     ->  Hash Join  (cost=495958.54..2055377.35 rows=23797 width=20) (actual time=13464.379..42141.055 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=491492.54..2050848.36 rows=23995 width=20) (actual time=13396.859..42041.525 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1557627.68 rows=396970 width=20) (actual time=0.153..28277.319 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65962.06 rows=13235 width=4) (actual time=0.111..819.494 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..112.39 rows=32 width=24) (actual time=0.093..2.082 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=480158.35..480158.35 rows=906700 width=8) (actual time=13391.202..13391.206 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=125176.22..480158.35 rows=906700 width=8) (actual time=1700.982..12960.123 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=61972.81..390887.31 rows=4533500 width=12) (actual time=842.726..10113.806 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..60839.43 rows=4533500 width=0) (actual time=696.680..696.680 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59453.56..59453.56 rows=299988 width=4) (actual time=857.108..857.111 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59453.56 rows=299988 width=4) (actual time=0.112..754.593 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50826.40 rows=1499940 width=8) (actual time=0.033..365.103 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.063..0.066 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.047..0.059 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.011..0.013 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.016..0.018 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=67.220..67.220 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.022..36.104 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.008..0.008 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 9.844 ms
 Execution Time: 42332.413 ms
(52 rows)

===== 9.sql jit=off =====
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3465026.15..3465026.15 rows=1 width=90) (actual time=70225.087..70225.095 rows=1 loops=1)
   ->  Sort  (cost=3465026.15..3465176.52 rows=60150 width=90) (actual time=70225.085..70225.092 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3463823.15..3464725.40 rows=60150 width=90) (actual time=70223.412..70224.195 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=1143190.31..3369172.89 rows=5408586 width=81) (actual time=16013.466..61733.487 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=1143188.74..3339045.51 rows=5408586 width=31) (actual time=16013.404..58696.852 rows=3248192 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Hash Join  (cost=486168.30..2535285.53 rows=5408586 width=31) (actual time=6721.174..42125.459 rows=3248192 loops=1)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Hash Join  (cost=481702.30..2516503.55 rows=5453477 width=35) (actual time=6662.760..40116.887 rows=3248192 loops=1)
                                       Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                       ->  Hash Join  (cost=68234.80..1950127.30 rows=5453477 width=33) (actual time=904.340..28491.868 rows=3248192 loops=1)
                                             Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1724423.32 rows=59988132 width=29) (actual time=0.491..10919.644 rows=59986052 loops=1)
                                             ->  Hash  (cost=65962.06..65962.06 rows=181819 width=4) (actual time=903.260..903.261 rows=108312 loops=1)
                                                   Buckets: 262144  Batches: 1  Memory Usage: 5856kB
                                                   ->  Seq Scan on part  (cost=0.00..65962.06 rows=181819 width=4) (actual time=0.403..856.472 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                       ->  Hash  (cost=254392.20..254392.20 rows=8000620 width=14) (actual time=5749.428..5749.429 rows=8000000 loops=1)
                                             Buckets: 4194304  Batches: 4  Memory Usage: 126558kB
                                             ->  Seq Scan on partsupp  (cost=0.00..254392.20 rows=8000620 width=14) (actual time=0.516..2527.998 rows=8000000 loops=1)
                                 ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=58.123..58.123 rows=100000 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.009..28.829 rows=100000 loops=1)
                           ->  Hash  (cost=410917.53..410917.53 rows=15000553 width=8) (actual time=9282.717..9282.718 rows=15000000 loops=1)
                                 Buckets: 4194304  Batches: 8  Memory Usage: 106038kB
                                 ->  Seq Scan on orders  (cost=0.00..410917.53 rows=15000553 width=8) (actual time=0.373..4692.248 rows=15000000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.043..0.043 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.020..0.027 rows=25 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 13.417 ms
 Execution Time: 70230.226 ms
(38 rows)

