===== 10.sql jit=on =====
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2409425.79..2409425.84 rows=20 width=201) (actual time=25551.820..25551.828 rows=20 loops=1)
   ->  Sort  (cost=2409425.79..2410857.79 rows=572801 width=201) (actual time=25055.530..25055.536 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2252898.27..2394183.76 rows=572801 width=201) (actual time=20017.989..24753.143 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=2252898.27..2379863.74 rows=572801 width=181) (actual time=20017.960..23029.623 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 33kB  Peak Memory: 33kB
                     ->  Nested Loop  (cost=2252898.08..2354087.69 rows=572801 width=181) (actual time=20017.478..22203.976 rows=1145402 loops=1)
                           ->  Merge Join  (cost=2252897.94..2340030.75 rows=572801 width=159) (actual time=20017.441..21394.419 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..74793.84 rows=1499961 width=147) (actual time=0.027..670.022 rows=1499997 loops=1)
                                 ->  Sort  (cost=2252897.45..2254329.45 rows=572801 width=16) (actual time=20017.374..20187.609 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: quicksort  Memory: 113386kB
                                       ->  Hash Join  (cost=284715.22..2198115.69 rows=572801 width=16) (actual time=2600.580..19168.403 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1874390.35 rows=14860995 width=16) (actual time=0.032..13494.223 rows=14808183 loops=1)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 45177869
                                             ->  Hash  (cost=277489.13..277489.13 rows=578087 width=8) (actual time=2598.063..2598.064 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=7905.83..277489.13 rows=578087 width=8) (actual time=279.441..2341.082 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233137
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7761.31 rows=578087 width=0) (actual time=136.036..136.036 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..2.16 rows=1 width=30) (actual time=0.004..0.004 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.580 ms
 JIT:
   Functions: 38
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.258 ms, Inlining 65.806 ms, Optimization 275.862 ms, Emission 154.218 ms, Total 500.143 ms
 Execution Time: 25612.531 ms
(41 rows)

===== 11.sql jit=on =====
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=94967.00..94967.01 rows=1 width=36) (actual time=2663.043..2663.048 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44416.58..44416.59 rows=1 width=32) (actual time=955.688..955.691 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..42016.38 rows=320026 width=10) (actual time=1.703..711.421 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=1.683..14.451 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.018 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=1.666..13.215 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.013..1.013 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.09 rows=81 width=14) (actual time=0.009..0.151 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50550.41..50817.10 rows=106675 width=36) (actual time=2663.040..2663.042 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=45216.64..50017.03 rows=106675 width=36) (actual time=2662.980..2662.982 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 5  Memory Usage: 135217kB  Disk Usage: 752kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..42016.38 rows=320026 width=14) (actual time=1.786..878.396 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=1.754..16.433 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.028..0.033 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=1.719..15.093 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.045..1.045 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.09 rows=81 width=18) (actual time=0.011..0.188 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.656 ms
 Execution Time: 2667.517 ms
(38 rows)

===== 12.sql jit=on =====
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3030091.70..3030910.95 rows=1 width=27) (actual time=27687.234..27687.238 rows=1 loops=1)
   ->  GroupAggregate  (cost=3030091.70..3035826.47 rows=7 width=27) (actual time=27335.524..27335.527 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3030091.70..3030808.53 rows=286735 width=27) (actual time=27266.605..27276.943 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2477853.22..3004100.09 rows=286735 width=27) (actual time=21060.604..27120.146 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410893.44 rows=14998144 width=20) (actual time=0.045..2538.572 rows=15000000 loops=1)
                     ->  Hash  (cost=2474269.03..2474269.03 rows=286735 width=15) (actual time=21059.364..21059.365 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474269.03 rows=286735 width=15) (actual time=0.298..20869.538 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.673 ms
 JIT:
   Functions: 19
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.508 ms, Inlining 56.415 ms, Optimization 191.757 ms, Emission 103.213 ms, Total 353.894 ms
 Execution Time: 27740.849 ms
(21 rows)

===== 13.sql jit=on =====
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1523587.17..1523587.18 rows=1 width=16) (actual time=23641.445..23641.449 rows=1 loops=1)
   ->  Sort  (cost=1523587.17..1523587.67 rows=200 width=16) (actual time=23428.393..23428.396 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1523584.17..1523586.17 rows=200 width=16) (actual time=23428.308..23428.323 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1371279.28..1501084.76 rows=1499961 width=12) (actual time=22142.612..23062.485 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 5  Memory Usage: 131121kB  Disk Usage: 27424kB
                     ->  Hash Right Join  (cost=57713.35..544677.04 rows=14695151 width=8) (actual time=697.940..15165.961 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448388.80 rows=14695151 width=8) (actual time=0.063..7600.690 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38963.84..38963.84 rows=1499961 width=4) (actual time=693.547..693.548 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38963.84 rows=1499961 width=4) (actual time=0.032..245.929 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.379 ms
 JIT:
   Functions: 25
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 3.005 ms, Inlining 57.486 ms, Optimization 129.822 ms, Emission 63.751 ms, Total 254.064 ms
 Execution Time: 23686.299 ms
(26 rows)

===== 14.sql jit=on =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1241795.09..1241795.10 rows=1 width=32) (actual time=6147.529..6147.532 rows=1 loops=1)
   ->  Aggregate  (cost=1241795.09..1241795.10 rows=1 width=32) (actual time=5905.002..5905.005 rows=1 loops=1)
         ->  Hash Join  (cost=119855.20..1228012.73 rows=787563 width=33) (actual time=1723.001..5083.553 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=20221.09..1104947.26 rows=787563 width=16) (actual time=578.168..2997.809 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20024.19 rows=787563 width=0) (actual time=295.514..295.514 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60962.05..60962.05 rows=2000005 width=25) (actual time=1140.268..1140.269 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 74141kB
                     ->  Seq Scan on part  (cost=0.00..60962.05 rows=2000005 width=25) (actual time=0.051..438.053 rows=2000000 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.969 ms
 JIT:
   Functions: 15
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.895 ms, Inlining 57.354 ms, Optimization 118.644 ms, Emission 66.267 ms, Total 244.159 ms
 Execution Time: 6178.596 ms
(19 rows)

===== 15.sql jit=on =====
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1241860.49..1243119.04 rows=100684 width=36) (actual time=8351.623..8429.386 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=56561.55..1219830.26 rows=2203023 width=16) (actual time=1148.512..5017.584 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56010.79 rows=2203023 width=0) (actual time=686.620..686.620 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.060 ms
 JIT:
   Functions: 9
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.366 ms, Inlining 53.939 ms, Optimization 95.802 ms, Emission 51.229 ms, Total 202.336 ms
 Execution Time: 8462.392 ms
(15 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2487776.24..2487786.34 rows=1 width=104) (actual time=16424.477..16424.482 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1244377.59..1244377.60 rows=1 width=32) (actual time=8013.201..8013.203 rows=1 loops=1)
           ->  HashAggregate  (cost=1241860.49..1243119.04 rows=100684 width=36) (actual time=7925.130..8003.631 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=56561.55..1219830.26 rows=2203023 width=16) (actual time=1140.366..4820.554 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56010.79 rows=2203023 width=0) (actual time=681.093..681.094 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1243398.64..1248479.19 rows=503 width=104) (actual time=16023.210..16023.212 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4823.30 rows=100000 width=72) (actual time=0.362..22.543 rows=69998 loops=1)
         ->  Sort  (cost=1243398.35..1243399.60 rows=503 width=36) (actual time=15994.406..15994.407 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1241860.49..1243375.78 rows=503 width=36) (actual time=15937.270..15994.392 rows=1 loops=1)
                     ->  HashAggregate  (cost=1241860.49..1243370.75 rows=503 width=36) (actual time=15937.267..15994.387 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=56561.55..1219830.26 rows=2203023 width=16) (actual time=1142.554..4783.979 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56010.79 rows=2203023 width=0) (actual time=682.996..682.997 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.975 ms
 JIT:
   Functions: 30
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 3.765 ms, Inlining 14.090 ms, Optimization 250.397 ms, Emission 136.396 ms, Total 404.648 ms
 Execution Time: 16437.499 ms
(35 rows)

DROP VIEW
===== 16.sql jit=on =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=400725.68..400725.69 rows=1 width=44) (actual time=11581.226..11581.231 rows=1 loops=1)
   ->  Sort  (cost=400725.68..401104.82 rows=151655 width=44) (actual time=11562.142..11562.145 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=391266.12..399967.41 rows=151655 width=44) (actual time=10794.888..11548.448 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=391266.12..392703.07 rows=574779 width=40) (actual time=10794.810..10919.771 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 122929kB
                     ->  Hash Join  (cost=98020.67..336280.90 rows=574779 width=40) (actual time=1109.134..6296.716 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3466.46..231225.81 rows=4000324 width=8) (actual time=47.536..3579.957 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=10 width=4) (actual time=3.940..46.785 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90962.12..90962.12 rows=287367 width=40) (actual time=1060.417..1060.418 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90962.12 rows=287367 width=40) (actual time=0.061..912.260 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.662 ms
 JIT:
   Functions: 32
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 3.716 ms, Inlining 0.000 ms, Optimization 0.971 ms, Emission 21.557 ms, Total 26.243 ms
 Execution Time: 11613.536 ms
(31 rows)

===== 17-flattened.sql jit=on =====
                                                           QUERY PLAN                                                           
--------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5567393.47..6182419.57 rows=1947138 width=36) (actual time=73223.879..109233.157 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
   ->  Seq Scan on lineitem  (cost=0.00..1724420.68 rows=59987868 width=9) (actual time=0.352..12711.084 rows=59986052 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.740 ms
 JIT:
   Functions: 11
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.047 ms, Inlining 70.719 ms, Optimization 99.684 ms, Emission 52.299 ms, Total 224.749 ms
 Execution Time: 109472.062 ms
(11 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=232927.06..232927.08 rows=1 width=32) (actual time=693.510..693.513 rows=1 loops=1)
   ->  Aggregate  (cost=232927.06..232927.08 rows=1 width=32) (actual time=675.386..675.388 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..232878.55 rows=19406 width=8) (actual time=1.306..673.584 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..85645.23 rows=1941 width=20) (actual time=1.278..581.458 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70962.07 rows=1941 width=4) (actual time=1.247..559.370 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.55 rows=1 width=16) (actual time=0.009..0.010 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..75.73 rows=10 width=17) (actual time=0.019..0.045 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.956 ms
 JIT:
   Functions: 20
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.402 ms, Inlining 0.000 ms, Optimization 4.237 ms, Emission 13.645 ms, Total 20.284 ms
 Execution Time: 696.021 ms
(21 rows)

DROP TABLE
===== 17.sql jit=on =====
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6420419.90..6420419.91 rows=1 width=32) (actual time=110139.298..110139.302 rows=1 loops=1)
   ->  Aggregate  (cost=6420419.90..6420419.91 rows=1 width=32) (actual time=109799.659..109799.662 rows=1 loops=1)
         ->  Nested Loop  (cost=5638380.25..6420372.67 rows=18893 width=8) (actual time=73273.808..109797.942 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5638379.81..6277988.53 rows=1890 width=40) (actual time=73273.766..109705.408 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5567393.47..6182419.57 rows=1947138 width=36) (actual time=72849.044..108933.369 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724420.68 rows=59987868 width=9) (actual time=0.236..12460.206 rows=59986052 loops=1)
                     ->  Hash  (cost=70962.07..70962.07 rows=1941 width=4) (actual time=421.428..421.429 rows=1996 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 87kB
                           ->  Seq Scan on part  (cost=0.00..70962.07 rows=1941 width=4) (actual time=0.521..420.016 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..75.21 rows=10 width=17) (actual time=0.020..0.045 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.006 ms
 JIT:
   Functions: 33
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.186 ms, Inlining 74.490 ms, Optimization 210.448 ms, Emission 141.847 ms, Total 430.972 ms
 Execution Time: 110295.410 ms
(26 rows)

===== 18.sql jit=on =====
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9939774.42..9939774.67 rows=100 width=71) (actual time=79613.061..79613.080 rows=99 loops=1)
   ->  Sort  (cost=9939774.42..9989760.39 rows=19994387 width=71) (actual time=79310.212..79310.224 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8574209.66..9175603.33 rows=19994387 width=71) (actual time=79307.356..79309.991 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 64  Batches: 1  Memory Usage: 12369kB
               ->  Hash Join  (cost=69685.49..6618508.68 rows=19994387 width=44) (actual time=2608.396..79305.880 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=109.36..6496447.15 rows=19994387 width=25) (actual time=1724.505..78421.342 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729737.64 rows=4998989 width=24) (actual time=1262.076..56556.943 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650411.59 rows=14998144 width=20) (actual time=0.485..4814.183 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929353.43 rows=4998989 width=4) (actual time=1116.953..50423.441 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404459.58 rows=59987868 width=9) (actual time=0.842..21874.741 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404459.58 rows=59987868 width=9) (actual time=0.028..16682.298 rows=59916431 loops=1)
                     ->  Hash  (cost=50826.61..50826.61 rows=1499961 width=23) (actual time=879.553..879.555 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50826.61 rows=1499961 width=23) (actual time=0.552..354.780 rows=1500000 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.239 ms
 JIT:
   Functions: 30
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 3.180 ms, Inlining 56.598 ms, Optimization 157.538 ms, Emission 88.429 ms, Total 305.744 ms
 Execution Time: 79673.958 ms
(30 rows)

===== 19.sql jit=on =====


 Limit  (cost=731503.85..731503.86 rows=1 width=32) (actual time=1803.714..1803.716 rows=1 loops=1)
   ->  Aggregate  (cost=731503.85..731503.86 rows=1 width=32) (actual time=1483.378..1483.379 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..731495.18 rows=1155 width=12) (actual time=3.852..1481.331 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125962.21 rows=4923 width=30) (actual time=0.406..696.543 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..122.99 rows=1 width=21) (actual time=0.147..0.163 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.539 ms
 JIT:
   Functions: 12
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.379 ms, Inlining 57.999 ms, Optimization 161.258 ms, Emission 100.772 ms, Total 322.409 ms
 Execution Time: 1831.121 ms
(17 rows)

===== 1.sql jit=on =====
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3951253.02..3951253.03 rows=1 width=236) (actual time=160789.211..160789.213 rows=1 loops=1)
   ->  Sort  (cost=3951253.02..3951253.04 rows=6 width=236) (actual time=160491.254..160491.254 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3951252.83..3951253.00 rows=6 width=236) (actual time=160490.228..160490.252 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874390.35 rows=59338928 width=25) (actual time=0.378..15753.353 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.121 ms
 JIT:
   Functions: 10
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.732 ms, Inlining 58.676 ms, Optimization 151.481 ms, Emission 87.508 ms, Total 299.396 ms
 Execution Time: 160843.797 ms
(17 rows)

===== 20-flattened.sql jit=on =====
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2100451.53..2261944.49 rows=4841298 width=40) (actual time=106558.320..120522.360 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
   ->  Bitmap Heap Scan on lineitem  (cost=233638.18..1494689.85 rows=9100645 width=13) (actual time=3403.054..90734.814 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231363.02 rows=9100645 width=0) (actual time=2624.400..2624.401 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.590 ms
 JIT:
   Functions: 13
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.824 ms, Inlining 72.363 ms, Optimization 147.150 ms, Emission 80.619 ms, Total 302.956 ms
 Execution Time: 120837.385 ms
(15 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=59237.47..59237.47 rows=1 width=52) (actual time=6291.774..6291.777 rows=1 loops=1)
   ->  Sort  (cost=59237.47..59237.47 rows=1 width=52) (actual time=6291.772..6291.774 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..59237.46 rows=1 width=52) (actual time=14.014..6285.304 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=56) (actual time=3.641..21.845 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.184..0.192 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=60) (actual time=3.448..19.714 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=2.393..2.393 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..14.20 rows=1 width=8) (actual time=1.529..1.529 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..13.71 rows=1 width=16) (actual time=1.335..1.518 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.09 rows=81 width=12) (actual time=0.025..0.908 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.013..0.013 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 11.231 ms
 Execution Time: 6293.627 ms
(33 rows)

DROP TABLE
===== 20.sql jit=on =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2424721.74..2424721.75 rows=1 width=52) (actual time=148089.615..148089.621 rows=1 loops=1)
   ->  Sort  (cost=2424721.74..2424721.75 rows=1 width=52) (actual time=147676.051..147676.056 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2166666.55..2424721.73 rows=1 width=52) (actual time=111479.028..147671.571 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183310388
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=56) (actual time=0.040..33.183 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.024..0.029 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=60) (actual time=0.010..24.900 rows=100000 loops=1)
               ->  Materialize  (cost=2166666.55..2420074.43 rows=3 width=8) (actual time=25.613..33.478 rows=44765 loops=4095)
                     ->  Nested Loop  (cost=2166666.55..2420074.41 rows=3 width=8) (actual time=104885.840..124761.792 rows=59002 loops=1)
                           ->  Hash Join  (cost=2166666.12..2389280.49 rows=48902 width=44) (actual time=104885.206..120736.690 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2100451.53..2261944.49 rows=4841298 width=40) (actual time=104325.135..118969.680 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=233638.18..1494689.85 rows=9100645 width=13) (actual time=3375.485..88891.964 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231363.02 rows=9100645 width=0) (actual time=2598.701..2598.702 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65962.06..65962.06 rows=20202 width=4) (actual time=559.927..559.928 rows=21718 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1020kB
                                       ->  Seq Scan on part  (cost=0.00..65962.06 rows=20202 width=4) (actual time=0.342..548.929 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.066..0.066 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 8.373 ms
 JIT:
   Functions: 42
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 5.122 ms, Inlining 78.965 ms, Optimization 275.959 ms, Emission 147.147 ms, Total 507.193 ms
 Execution Time: 148173.743 ms
(42 rows)

===== 21.sql jit=on =====
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4271629.61..4271629.62 rows=1 width=34) (actual time=71761.125..71761.147 rows=100 loops=1)
   ->  Sort  (cost=4271629.61..4271629.62 rows=1 width=34) (actual time=71272.518..71272.532 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4271629.58..4271629.60 rows=1 width=34) (actual time=71257.847..71270.413 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4271629.58..4271629.59 rows=1 width=26) (actual time=71257.810..71262.379 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204905.37..4271629.57 rows=1 width=26) (actual time=25985.562..71055.645 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204904.80..4271622.04 rows=1 width=38) (actual time=25971.641..65123.234 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204904.37..4271614.72 rows=1 width=34) (actual time=25969.375..53230.104 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959773.80 rows=794405 width=34) (actual time=23.871..19761.413 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874390.35 rows=19995956 width=8) (actual time=0.208..13393.766 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=23.606..23.609 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=3.824..21.975 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.175..0.181 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=3.639..21.119 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=2.576..2.577 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874390.35..1874390.35 rows=19995956 width=8) (actual time=25931.553..25931.553 rows=37929348 loops=1)
                                             Buckets: 4194304  Batches: 16  Memory Usage: 125295kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874390.35 rows=19995956 width=8) (actual time=0.032..14870.195 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.087..0.087 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.087..0.088 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 17.994 ms
 JIT:
   Functions: 47
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.870 ms, Inlining 59.432 ms, Optimization 274.556 ms, Emission 153.895 ms, Total 492.753 ms
 Execution Time: 71875.484 ms
(51 rows)

===== 22.sql jit=on =====
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163244.03..163244.06 rows=1 width=72) (actual time=4200.037..4200.041 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75320.20..75320.21 rows=1 width=32) (actual time=1828.226..1828.227 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75200.98 rows=47688 width=6) (actual time=0.022..1743.530 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87923.82..88125.15 rows=7321 width=72) (actual time=4184.007..4184.008 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87923.82..87942.12 rows=7321 width=38) (actual time=4180.647..4181.257 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87453.89 rows=7321 width=38) (actual time=1828.331..4140.447 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75200.98 rows=17500 width=26) (actual time=1828.305..3180.891 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.28 rows=17 width=4) (actual time=0.004..0.004 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.634 ms
 JIT:
   Functions: 17
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.281 ms, Inlining 0.000 ms, Optimization 0.656 ms, Emission 15.107 ms, Total 18.044 ms
 Execution Time: 4226.457 ms
(25 rows)

===== 2-flattened.sql jit=on =====
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=208243.81..212752.88 rows=450907 width=36) (actual time=5216.453..6043.783 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 5  Memory Usage: 139313kB  Disk Usage: 15632kB
   ->  Nested Loop  (cost=42.10..200243.16 rows=1600130 width=10) (actual time=17.051..3846.468 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=17.020..90.346 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=15.349..15.385 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.045..0.061 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.612..0.612 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=15.281..15.284 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=1.587..13.913 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.922..0.922 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.09 rows=81 width=14) (actual time=0.010..0.168 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.223 ms
 JIT:
   Functions: 27
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 3.492 ms, Inlining 0.000 ms, Optimization 1.060 ms, Emission 18.631 ms, Total 23.184 ms
 Execution Time: 6121.746 ms
(27 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=514953.14..514953.15 rows=1 width=193) (actual time=6194.431..6194.451 rows=100 loops=1)
   ->  Sort  (cost=514953.14..514953.15 rows=1 width=193) (actual time=5696.401..5696.414 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Hash Join  (cost=265902.66..514953.13 rows=1 width=193) (actual time=4679.825..5691.202 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70962.07 rows=8217 width=30) (actual time=0.041..595.116 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=202834.71..202834.71 rows=1600130 width=173) (actual time=4678.712..4678.716 rows=1604080 loops=1)
                     Buckets: 1048576  Batches: 4  Memory Usage: 90233kB
                     ->  Nested Loop  (cost=2.00..202834.71 rows=1600130 width=173) (actual time=0.120..3276.897 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=167) (actual time=0.093..80.042 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.038..0.041 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=171) (actual time=0.050..70.795 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=145) (actual time=0.009..26.335 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.025..0.026 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.006..0.011 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.09 rows=81 width=14) (actual time=0.008..0.144 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.007..0.007 rows=1 loops=12783)
                       Index Cond: (ps_partkey = part.p_partkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.530 ms
 JIT:
   Functions: 41
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.271 ms, Inlining 53.525 ms, Optimization 285.722 ms, Emission 158.389 ms, Total 501.907 ms
 Execution Time: 6199.148 ms
(36 rows)

DROP TABLE
===== 2.sql jit=on =====
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1687170.01..1687170.01 rows=1 width=193) (actual time=8721.145..8721.166 rows=100 loops=1)
   ->  Sort  (cost=1687170.01..1687170.01 rows=1 width=193) (actual time=8035.157..8035.170 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=504457.66..1687170.00 rows=1 width=193) (actual time=5601.729..8029.197 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..102913.53 rows=8217 width=30) (actual time=0.053..915.614 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=504457.17..512457.82 rows=1600130 width=173) (actual time=5601.430..6498.085 rows=1603828 loops=1)
                     ->  Sort  (cost=504457.17..508457.50 rows=1600130 width=173) (actual time=5601.425..6113.850 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293456kB
                           ->  Nested Loop  (cost=2.00..202834.71 rows=1600130 width=173) (actual time=0.084..3504.080 rows=1604080 loops=1)
                                 ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=167) (actual time=0.062..80.388 rows=20051 loops=1)
                                       Join Filter: (nation.n_regionkey = region.r_regionkey)
                                       Rows Removed by Join Filter: 79949
                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.017..0.020 rows=1 loops=1)
                                             Filter: (r_name = 'AMERICA'::bpchar)
                                             Rows Removed by Filter: 4
                                       ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=171) (actual time=0.041..71.282 rows=100000 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=145) (actual time=0.004..24.008 rows=100000 loops=1)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.024..0.025 rows=25 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.005..0.011 rows=25 loops=1)
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.09 rows=81 width=14) (actual time=0.009..0.156 rows=80 loops=20051)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=162.40..162.41 rows=1 width=32) (actual time=0.051..0.051 rows=1 loops=6398)
                       ->  Nested Loop  (cost=0.86..162.39 rows=4 width=6) (actual time=0.029..0.048 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..161.10 rows=18 width=10) (actual time=0.018..0.044 rows=4 loops=6398)
                                   ->  Nested Loop  (cost=0.72..158.33 rows=18 width=10) (actual time=0.015..0.032 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.75 rows=18 width=10) (actual time=0.009..0.010 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 4.787 ms
 JIT:
   Functions: 57
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.057 ms, Inlining 58.946 ms, Optimization 401.015 ms, Emission 225.483 ms, Total 691.501 ms
 Execution Time: 8774.441 ms
(53 rows)

===== 3.sql jit=on =====
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2950046.98..2950047.01 rows=10 width=44) (actual time=38831.970..38831.977 rows=10 loops=1)
   ->  Sort  (cost=2950046.98..2957807.28 rows=3104117 width=44) (actual time=38400.217..38400.222 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2807790.30..2882968.13 rows=3104117 width=44) (actual time=38251.979..38352.158 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 8  Batches: 1  Memory Usage: 61457kB
               ->  Hash Join  (cost=526181.45..2553640.72 rows=3104117 width=24) (actual time=19403.233..37742.280 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874390.35 rows=32540732 width=16) (actual time=0.400..12546.605 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=508297.72..508297.72 rows=1430699 width=12) (actual time=19398.097..19398.100 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=138627.03..508297.72 rows=1430699 width=12) (actual time=1753.274..18595.563 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=80320.00..431115.16 rows=7190653 width=16) (actual time=1249.757..15421.634 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..78522.33 rows=7190653 width=0) (actual time=1084.650..1084.651 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54576.51..54576.51 rows=298442 width=4) (actual time=502.324..502.325 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54576.51 rows=298442 width=4) (actual time=0.554..397.585 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 9.138 ms
 JIT:
   Functions: 31
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 3.631 ms, Inlining 56.420 ms, Optimization 242.210 ms, Emission 132.781 ms, Total 435.042 ms
 Execution Time: 38896.245 ms
(33 rows)

===== 4.sql jit=on =====
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2584956.77..2584956.78 rows=1 width=24) (actual time=51022.990..51022.994 rows=1 loops=1)
   ->  Sort  (cost=2584956.77..2584956.79 rows=5 width=24) (actual time=50796.537..50796.540 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2584956.70..2584956.75 rows=5 width=24) (actual time=50795.666..50795.671 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2209962.29..2582209.57 rows=549426 width=16) (actual time=25580.726..50553.638 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7512.49..276666.53 rows=549469 width=20) (actual time=276.892..18572.073 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7375.13 rows=549469 width=0) (actual time=133.629..133.630 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874390.35..1874390.35 rows=19995956 width=4) (actual time=25291.489..25291.490 rows=37929348 loops=1)
                           Buckets: 4194304  Batches: 16  Memory Usage: 116042kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874390.35 rows=19995956 width=4) (actual time=0.286..14773.613 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 7.243 ms
 JIT:
   Functions: 19
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.141 ms, Inlining 51.247 ms, Optimization 114.535 ms, Emission 60.426 ms, Total 228.349 ms
 Execution Time: 51081.078 ms
(26 rows)

===== 5.sql jit=on =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2372404.28..2372404.28 rows=1 width=58) (actual time=45205.863..45205.877 rows=1 loops=1)
   ->  Sort  (cost=2372404.28..2372404.34 rows=25 width=58) (actual time=44647.755..44647.769 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2371503.52..2372404.15 rows=25 width=58) (actual time=44594.838..44647.695 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2371503.52..2371683.58 rows=72026 width=38) (actual time=44581.703..44587.352 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=422153.29..2365692.38 rows=72026 width=38) (actual time=19412.591..44509.109 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=417437.29..2351456.84 rows=1813242 width=50) (actual time=19344.719..43800.493 rows=1815327 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=354233.49..2236122.37 rows=9066208 width=20) (actual time=18640.475..40964.236 rows=9108027 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1724420.68 rows=59987868 width=20) (actual time=0.356..10355.074 rows=59986052 loops=1)
                                       ->  Hash  (cost=325899.37..325899.37 rows=2266730 width=8) (actual time=18631.279..18631.281 rows=2276638 loops=1)
                                             Buckets: 4194304  Batches: 1  Memory Usage: 121700kB
                                             ->  Bitmap Heap Scan on orders  (cost=30986.42..325899.37 rows=2266730 width=8) (actual time=539.433..17488.539 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..30419.74 rows=2266730 width=0) (actual time=377.755..377.755 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=59453.89..59453.89 rows=299992 width=38) (actual time=702.934..702.936 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                       ->  Hash Join  (cost=2.51..59453.89 rows=299992 width=38) (actual time=1.215..573.666 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50826.61 rows=1499961 width=8) (actual time=0.552..306.737 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.646..0.647 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.630..0.639 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.309..0.312 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.307..0.307 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.297..0.299 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=65.916..65.923 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.471..31.452 rows=100000 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 15.914 ms
 JIT:
   Functions: 55
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 5.539 ms, Inlining 56.694 ms, Optimization 323.936 ms, Emission 177.037 ms, Total 563.206 ms
 Execution Time: 45269.530 ms
(48 rows)

===== 6.sql jit=on =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1499346.14..1499346.15 rows=1 width=32) (actual time=7754.521..7754.523 rows=1 loops=1)
   ->  Aggregate  (cost=1499346.14..1499346.15 rows=1 width=32) (actual time=7587.765..7587.766 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=296372.42..1493413.02 rows=1186624 width=12) (actual time=3417.338..6807.634 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..296075.76 rows=1186624 width=0) (actual time=2965.282..2965.283 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.147 ms
 JIT:
   Functions: 6
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.001 ms, Inlining 53.989 ms, Optimization 72.135 ms, Emission 40.429 ms, Total 167.553 ms
 Execution Time: 7782.364 ms
(14 rows)

===== 7.sql jit=on =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2519655.03..2519655.15 rows=1 width=116) (actual time=90060.846..90060.854 rows=1 loops=1)
   ->  GroupAggregate  (cost=2519655.03..2520864.61 rows=10024 width=116) (actual time=89344.599..89344.606 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2519655.03..2519806.34 rows=60527 width=96) (actual time=89325.401..89326.773 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1024617.31..2514847.58 rows=60527 width=96) (actual time=13423.658..89209.739 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=473551.30..1955849.10 rows=1454421 width=46) (actual time=5888.728..80897.464 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=469926.90..1869038.17 rows=18304618 width=24) (actual time=5843.105..75319.121 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..465350.74 rows=18304618 width=0) (actual time=5009.717..5009.717 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=45.571..45.573 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.543..42.553 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.339..26.449 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.195..0.196 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.186..0.190 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536067.86..536067.86 rows=1199852 width=30) (actual time=7528.311..7528.313 rows=1191175 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                           ->  Hash Join  (cost=56932.85..536067.86 rows=1199852 width=30) (actual time=582.566..6995.508 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..410893.44 rows=14998144 width=8) (actual time=0.429..2727.717 rows=15000000 loops=1)
                                 ->  Hash  (cost=55432.89..55432.89 rows=119997 width=30) (actual time=581.805..581.806 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55432.89 rows=119997 width=30) (actual time=0.533..532.725 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50826.61 rows=1499961 width=8) (actual time=0.476..295.557 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.043..0.043 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.029..0.033 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 12.488 ms
 JIT:
   Functions: 60
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.422 ms, Inlining 55.074 ms, Optimization 427.729 ms, Emission 232.899 ms, Total 722.124 ms
 Execution Time: 90131.432 ms
(49 rows)

===== 8.sql jit=on =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2024817.53..2024817.78 rows=1 width=64) (actual time=53018.074..53018.083 rows=1 loops=1)
   ->  GroupAggregate  (cost=2024817.53..2025404.50 rows=2406 width=64) (actual time=52378.865..52378.873 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=2024817.53..2024877.40 rows=23949 width=70) (actual time=52365.873..52366.773 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=496100.51..2023075.52 rows=23949 width=70) (actual time=19121.607..52307.743 rows=23842 loops=1)
                     ->  Hash Join  (cost=496100.36..2022376.02 rows=23949 width=20) (actual time=19121.554..52197.352 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=491634.36..2017846.73 rows=24113 width=20) (actual time=19059.380..52108.148 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1524477.19 rows=398528 width=20) (actual time=0.733..32685.130 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65962.06 rows=13287 width=4) (actual time=0.413..613.860 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..109.46 rows=31 width=24) (actual time=0.117..2.447 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=480290.81..480290.81 rows=907449 width=8) (actual time=19052.796..19052.801 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=125230.99..480290.81 rows=907449 width=8) (actual time=1691.433..18592.429 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=62027.20..390997.87 rows=4537245 width=12) (actual time=861.186..16099.886 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..60892.89 rows=4537245 width=0) (actual time=700.515..700.516 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59453.89..59453.89 rows=299992 width=4) (actual time=829.087..829.091 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59453.89 rows=299992 width=4) (actual time=0.123..723.850 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50826.61 rows=1499961 width=8) (actual time=0.035..451.257 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.074..0.076 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.061..0.071 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.012..0.014 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.037..0.038 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.024..0.026 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=61.865..61.865 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.462..31.631 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.007..0.007 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 18.716 ms
 JIT:
   Functions: 67
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.742 ms, Inlining 64.386 ms, Optimization 371.352 ms, Emission 202.937 ms, Total 645.416 ms
 Execution Time: 53082.373 ms
(56 rows)

===== 9.sql jit=on =====
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2514698.17..2514698.18 rows=1 width=90) (actual time=267231.172..267231.847 rows=1 loops=1)
   ->  Sort  (cost=2514698.17..2514848.55 rows=60150 width=90) (actual time=266683.834..266683.845 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2513495.17..2514397.42 rows=60150 width=90) (actual time=266680.155..266680.955 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=1838387.49..2481899.64 rows=1805459 width=81) (actual time=244894.899..259582.729 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=1838385.93..2471841.68 rows=1805459 width=31) (actual time=244892.936..257250.155 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..410893.44 rows=14998144 width=8) (actual time=0.321..3702.046 rows=15000000 loops=1)
                           ->  Hash  (cost=1803474.69..1803474.69 rows=1805459 width=31) (actual time=244875.071..244875.075 rows=3248192 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 122446kB
                                 ->  Nested Loop  (cost=71186.08..1803474.69 rows=1805459 width=31) (actual time=831.213..239270.075 rows=3248192 loops=1)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Hash Join  (cost=71185.64..347216.31 rows=242443 width=26) (actual time=830.845..6250.200 rows=433248 loops=1)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Hash Join  (cost=66719.64..342113.88 rows=242443 width=18) (actual time=768.836..5677.001 rows=433248 loops=1)
                                                   Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                   ->  Seq Scan on partsupp  (cost=0.00..254392.49 rows=8000649 width=14) (actual time=0.542..2463.743 rows=8000000 loops=1)
                                                   ->  Hash  (cost=65962.06..65962.06 rows=60606 width=4) (actual time=768.070..768.071 rows=108312 loops=1)
                                                         Buckets: 131072 (originally 65536)  Batches: 1 (originally 1)  Memory Usage: 4832kB
                                                         ->  Seq Scan on part  (cost=0.00..65962.06 rows=60606 width=4) (actual time=0.520..724.018 rows=108312 loops=1)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 1891688
                                             ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=61.700..61.701 rows=100000 loops=1)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                                   ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.475..31.812 rows=100000 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..5.99 rows=1 width=29) (actual time=0.078..0.532 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.347..0.347 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.329..0.334 rows=25 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 37.632 ms
 JIT:
   Functions: 51
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 5.328 ms, Inlining 69.455 ms, Optimization 295.511 ms, Emission 181.688 ms, Total 551.982 ms
 Execution Time: 267393.806 ms
(41 rows)

===== 10.sql jit=off =====
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2409425.79..2409425.84 rows=20 width=201) (actual time=44119.116..44119.123 rows=20 loops=1)
   ->  Sort  (cost=2409425.79..2410857.79 rows=572801 width=201) (actual time=44119.114..44119.119 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2252898.27..2394183.76 rows=572801 width=201) (actual time=37911.245..43811.570 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=2252898.27..2379863.74 rows=572801 width=181) (actual time=37911.217..41678.462 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 33kB  Peak Memory: 33kB
                     ->  Nested Loop  (cost=2252898.08..2354087.69 rows=572801 width=181) (actual time=37909.853..40824.897 rows=1145402 loops=1)
                           ->  Merge Join  (cost=2252897.94..2340030.75 rows=572801 width=159) (actual time=37909.818..39683.829 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..74793.84 rows=1499961 width=147) (actual time=0.018..697.145 rows=1499997 loops=1)
                                 ->  Sort  (cost=2252897.45..2254329.45 rows=572801 width=16) (actual time=37909.777..38093.682 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: quicksort  Memory: 113386kB
                                       ->  Hash Join  (cost=284715.22..2198115.69 rows=572801 width=16) (actual time=10790.255..37030.163 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1874390.35 rows=14860995 width=16) (actual time=0.215..22539.774 rows=14808183 loops=1)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 45177869
                                             ->  Hash  (cost=277489.13..277489.13 rows=578087 width=8) (actual time=10787.558..10787.559 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=7905.83..277489.13 rows=578087 width=8) (actual time=280.553..10420.439 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233137
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7761.31 rows=578087 width=0) (actual time=136.176..136.177 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..2.16 rows=1 width=30) (actual time=0.004..0.004 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 11.416 ms
 Execution Time: 44127.010 ms
(37 rows)

===== 11.sql jit=off =====
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=94967.00..94967.01 rows=1 width=36) (actual time=2667.727..2667.732 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44416.58..44416.59 rows=1 width=32) (actual time=970.398..970.400 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..42016.38 rows=320026 width=10) (actual time=1.739..724.913 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=1.719..14.630 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.019 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=1.701..13.416 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.017..1.017 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.09 rows=81 width=14) (actual time=0.010..0.155 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50550.41..50817.10 rows=106675 width=36) (actual time=2667.724..2667.726 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=45216.64..50017.03 rows=106675 width=36) (actual time=2667.661..2667.663 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 5  Memory Usage: 135217kB  Disk Usage: 752kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..42016.38 rows=320026 width=14) (actual time=1.798..868.733 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=1.764..16.438 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.030..0.036 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=1.727..15.102 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.041..1.041 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.09 rows=81 width=18) (actual time=0.011..0.185 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.650 ms
 Execution Time: 2672.285 ms
(38 rows)

===== 12.sql jit=off =====
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3030091.70..3030910.95 rows=1 width=27) (actual time=40628.867..40628.871 rows=1 loops=1)
   ->  GroupAggregate  (cost=3030091.70..3035826.47 rows=7 width=27) (actual time=40628.865..40628.868 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3030091.70..3030808.53 rows=286735 width=27) (actual time=40511.326..40522.081 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2477853.22..3004100.09 rows=286735 width=27) (actual time=33091.204..40361.249 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410893.44 rows=14998144 width=20) (actual time=0.215..3092.837 rows=15000000 loops=1)
                     ->  Hash  (cost=2474269.03..2474269.03 rows=286735 width=15) (actual time=33088.678..33088.680 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474269.03 rows=286735 width=15) (actual time=0.977..32894.137 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.739 ms
 Execution Time: 40630.859 ms
(17 rows)

===== 13.sql jit=off =====
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1523587.17..1523587.18 rows=1 width=16) (actual time=32008.719..32008.723 rows=1 loops=1)
   ->  Sort  (cost=1523587.17..1523587.67 rows=200 width=16) (actual time=32008.716..32008.720 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1523584.17..1523586.17 rows=200 width=16) (actual time=32008.651..32008.667 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1371279.28..1501084.76 rows=1499961 width=12) (actual time=30423.693..31475.584 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 5  Memory Usage: 131121kB  Disk Usage: 27424kB
                     ->  Hash Right Join  (cost=57713.35..544677.04 rows=14695151 width=8) (actual time=709.910..20982.087 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448388.80 rows=14695151 width=8) (actual time=0.057..10334.737 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38963.84..38963.84 rows=1499961 width=4) (actual time=705.322..705.324 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38963.84 rows=1499961 width=4) (actual time=0.037..251.968 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.454 ms
 Execution Time: 32028.194 ms
(22 rows)

===== 14.sql jit=off =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1241795.09..1241795.10 rows=1 width=32) (actual time=6637.477..6637.480 rows=1 loops=1)
   ->  Aggregate  (cost=1241795.09..1241795.10 rows=1 width=32) (actual time=6637.474..6637.477 rows=1 loops=1)
         ->  Hash Join  (cost=119855.20..1228012.73 rows=787563 width=33) (actual time=1926.008..5643.989 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=20221.09..1104947.26 rows=787563 width=16) (actual time=577.605..3202.141 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20024.19 rows=787563 width=0) (actual time=293.920..293.921 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60962.05..60962.05 rows=2000005 width=25) (actual time=1343.851..1343.852 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 74141kB
                     ->  Seq Scan on part  (cost=0.00..60962.05 rows=2000005 width=25) (actual time=0.042..629.585 rows=2000000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.986 ms
 Execution Time: 6640.391 ms
(15 rows)

===== 15.sql jit=off =====
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1241860.49..1243119.04 rows=100684 width=36) (actual time=8952.058..9033.864 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=56561.55..1219830.26 rows=2203023 width=16) (actual time=1164.613..5117.158 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56010.79 rows=2203023 width=0) (actual time=702.472..702.472 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.059 ms
 Execution Time: 9041.305 ms
(11 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2487776.24..2487786.34 rows=1 width=104) (actual time=17616.365..17616.370 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1244377.59..1244377.60 rows=1 width=32) (actual time=8821.027..8821.029 rows=1 loops=1)
           ->  HashAggregate  (cost=1241860.49..1243119.04 rows=100684 width=36) (actual time=8720.240..8805.573 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=56561.55..1219830.26 rows=2203023 width=16) (actual time=1129.248..4940.764 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56010.79 rows=2203023 width=0) (actual time=668.902..668.902 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1243398.64..1248479.19 rows=503 width=104) (actual time=17616.363..17616.365 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4823.30 rows=100000 width=72) (actual time=0.227..22.512 rows=69998 loops=1)
         ->  Sort  (cost=1243398.35..1243399.60 rows=503 width=36) (actual time=17585.089..17585.090 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1241860.49..1243375.78 rows=503 width=36) (actual time=17523.299..17585.073 rows=1 loops=1)
                     ->  HashAggregate  (cost=1241860.49..1243370.75 rows=503 width=36) (actual time=17523.297..17585.069 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=56561.55..1219830.26 rows=2203023 width=16) (actual time=1125.918..4891.270 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56010.79 rows=2203023 width=0) (actual time=665.112..665.113 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.978 ms
 Execution Time: 17624.998 ms
(31 rows)

DROP VIEW
===== 16.sql jit=off =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=400725.68..400725.69 rows=1 width=44) (actual time=12666.795..12666.807 rows=1 loops=1)
   ->  Sort  (cost=400725.68..401104.82 rows=151655 width=44) (actual time=12666.793..12666.804 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=391266.12..399967.41 rows=151655 width=44) (actual time=11720.046..12652.946 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=391266.12..392703.07 rows=574779 width=40) (actual time=11719.973..11846.605 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 122929kB
                     ->  Hash Join  (cost=98020.67..336280.90 rows=574779 width=40) (actual time=1371.756..7216.493 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3466.46..231225.81 rows=4000324 width=8) (actual time=48.703..3942.562 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=10 width=4) (actual time=0.204..48.614 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90962.12..90962.12 rows=287367 width=40) (actual time=1321.885..1321.893 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90962.12 rows=287367 width=40) (actual time=0.055..1174.073 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.604 ms
 Execution Time: 12673.131 ms
(27 rows)

===== 17-flattened.sql jit=off =====
                                                           QUERY PLAN                                                           
--------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5567393.47..6182419.57 rows=1947138 width=36) (actual time=76103.399..122198.581 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
   ->  Seq Scan on lineitem  (cost=0.00..1724420.68 rows=59987868 width=9) (actual time=0.331..12749.130 rows=59986052 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.764 ms
 Execution Time: 122384.562 ms
(7 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=232927.06..232927.08 rows=1 width=32) (actual time=823.276..823.278 rows=1 loops=1)
   ->  Aggregate  (cost=232927.06..232927.08 rows=1 width=32) (actual time=823.274..823.275 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..232878.55 rows=19406 width=8) (actual time=0.719..821.148 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..85645.23 rows=1941 width=20) (actual time=0.697..723.223 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70962.07 rows=1941 width=4) (actual time=0.679..701.074 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.55 rows=1 width=16) (actual time=0.009..0.010 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..75.73 rows=10 width=17) (actual time=0.020..0.047 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.763 ms
 Execution Time: 823.334 ms
(17 rows)

DROP TABLE
===== 17.sql jit=off =====
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6420419.90..6420419.91 rows=1 width=32) (actual time=123714.019..123714.023 rows=1 loops=1)
   ->  Aggregate  (cost=6420419.90..6420419.91 rows=1 width=32) (actual time=123714.015..123714.019 rows=1 loops=1)
         ->  Nested Loop  (cost=5638380.25..6420372.67 rows=18893 width=8) (actual time=77410.848..123711.880 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5638379.81..6277988.53 rows=1890 width=40) (actual time=77410.799..123611.390 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5567393.47..6182419.57 rows=1947138 width=36) (actual time=76663.665..122500.463 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724420.68 rows=59987868 width=9) (actual time=0.315..13132.268 rows=59986052 loops=1)
                     ->  Hash  (cost=70962.07..70962.07 rows=1941 width=4) (actual time=743.699..743.700 rows=1996 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 87kB
                           ->  Seq Scan on part  (cost=0.00..70962.07 rows=1941 width=4) (actual time=0.773..741.695 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..75.21 rows=10 width=17) (actual time=0.022..0.048 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.875 ms
 Execution Time: 123812.560 ms
(22 rows)

===== 18.sql jit=off =====
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9939774.42..9939774.67 rows=100 width=71) (actual time=92293.059..92293.083 rows=99 loops=1)
   ->  Sort  (cost=9939774.42..9989760.39 rows=19994387 width=71) (actual time=92293.057..92293.073 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8574209.66..9175603.33 rows=19994387 width=71) (actual time=92290.067..92292.832 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 64  Batches: 1  Memory Usage: 12369kB
               ->  Hash Join  (cost=69685.49..6618508.68 rows=19994387 width=44) (actual time=2997.801..92288.432 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=109.36..6496447.15 rows=19994387 width=25) (actual time=1997.778..91287.525 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729737.64 rows=4998989 width=24) (actual time=1488.988..67183.261 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650411.59 rows=14998144 width=20) (actual time=0.338..4829.446 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929353.43 rows=4998989 width=4) (actual time=1331.876..60480.098 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404459.58 rows=59987868 width=9) (actual time=0.695..22398.696 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404459.58 rows=59987868 width=9) (actual time=0.035..16653.074 rows=59916431 loops=1)
                     ->  Hash  (cost=50826.61..50826.61 rows=1499961 width=23) (actual time=995.687..995.693 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50826.61 rows=1499961 width=23) (actual time=0.412..451.787 rows=1500000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.436 ms
 Execution Time: 92298.194 ms
(26 rows)

===== 19.sql jit=off =====


 Limit  (cost=731503.85..731503.86 rows=1 width=32) (actual time=2017.474..2017.476 rows=1 loops=1)
   ->  Aggregate  (cost=731503.85..731503.86 rows=1 width=32) (actual time=2017.472..2017.473 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..731495.18 rows=1155 width=12) (actual time=5.056..2015.117 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125962.21 rows=4923 width=30) (actual time=0.578..1189.839 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..122.99 rows=1 width=21) (actual time=0.155..0.171 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.538 ms
 Execution Time: 2017.591 ms
(13 rows)

===== 1.sql jit=off =====
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3951253.02..3951253.03 rows=1 width=236) (actual time=210621.386..210621.388 rows=1 loops=1)
   ->  Sort  (cost=3951253.02..3951253.04 rows=6 width=236) (actual time=210621.383..210621.384 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3951252.83..3951253.00 rows=6 width=236) (actual time=210620.433..210620.457 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874390.35 rows=59338928 width=25) (actual time=0.264..27744.070 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.370 ms
 Execution Time: 210621.516 ms
(13 rows)

===== 20-flattened.sql jit=off =====
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2100451.53..2261944.49 rows=4841298 width=40) (actual time=119044.012..135080.864 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
   ->  Bitmap Heap Scan on lineitem  (cost=233638.18..1494689.85 rows=9100645 width=13) (actual time=3361.912..102181.104 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231363.02 rows=9100645 width=0) (actual time=2583.408..2583.408 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 3.715 ms
 Execution Time: 135332.651 ms
(11 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=59237.47..59237.47 rows=1 width=52) (actual time=8402.472..8402.475 rows=1 loops=1)
   ->  Sort  (cost=59237.47..59237.47 rows=1 width=52) (actual time=8402.470..8402.472 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..59237.46 rows=1 width=52) (actual time=10.856..8395.919 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=56) (actual time=3.865..22.267 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.279..0.286 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=60) (actual time=3.577..20.047 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=2.527..2.527 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..14.20 rows=1 width=8) (actual time=2.044..2.044 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..13.71 rows=1 width=16) (actual time=1.788..2.034 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.09 rows=81 width=12) (actual time=0.027..1.063 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.015..0.015 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.015..0.015 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.013..0.013 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.205 ms
 Execution Time: 8403.789 ms
(33 rows)

DROP TABLE
===== 20.sql jit=off =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2424721.74..2424721.75 rows=1 width=52) (actual time=171870.784..171870.789 rows=1 loops=1)
   ->  Sort  (cost=2424721.74..2424721.75 rows=1 width=52) (actual time=171870.781..171870.786 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2166666.55..2424721.73 rows=1 width=52) (actual time=123230.368..171865.594 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183310388
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=56) (actual time=0.040..43.846 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.025..0.030 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=60) (actual time=0.009..25.815 rows=100000 loops=1)
               ->  Materialize  (cost=2166666.55..2420074.43 rows=3 width=8) (actual time=28.379..36.563 rows=44765 loops=4095)
                     ->  Nested Loop  (cost=2166666.55..2420074.41 rows=3 width=8) (actual time=116211.195..138136.096 rows=59002 loops=1)
                           ->  Hash Join  (cost=2166666.12..2389280.49 rows=48902 width=44) (actual time=116210.559..134033.127 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2100451.53..2261944.49 rows=4841298 width=40) (actual time=115593.844..132107.499 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=233638.18..1494689.85 rows=9100645 width=13) (actual time=3350.798..99010.313 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231363.02 rows=9100645 width=0) (actual time=2574.637..2574.637 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65962.06..65962.06 rows=20202 width=4) (actual time=616.558..616.559 rows=21718 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1020kB
                                       ->  Seq Scan on part  (cost=0.00..65962.06 rows=20202 width=4) (actual time=0.275..605.649 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.068..0.068 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 6.614 ms
 Execution Time: 171900.131 ms
(38 rows)

===== 21.sql jit=off =====
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4271629.61..4271629.62 rows=1 width=34) (actual time=94874.378..94874.400 rows=100 loops=1)
   ->  Sort  (cost=4271629.61..4271629.62 rows=1 width=34) (actual time=94874.376..94874.389 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4271629.58..4271629.60 rows=1 width=34) (actual time=94856.430..94872.204 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4271629.58..4271629.59 rows=1 width=26) (actual time=94856.411..94861.313 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204905.37..4271629.57 rows=1 width=26) (actual time=38168.419..94658.196 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204904.80..4271622.04 rows=1 width=38) (actual time=38149.065..89004.677 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204904.37..4271614.72 rows=1 width=34) (actual time=38146.547..77121.452 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959773.80 rows=794405 width=34) (actual time=24.566..30916.866 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874390.35 rows=19995956 width=8) (actual time=0.283..23712.436 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=24.219..24.221 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=3.867..22.489 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.176..0.183 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=3.684..21.276 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=2.628..2.628 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874390.35..1874390.35 rows=19995956 width=8) (actual time=38106.894..38106.895 rows=37929348 loops=1)
                                             Buckets: 4194304  Batches: 16  Memory Usage: 125295kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874390.35 rows=19995956 width=8) (actual time=0.022..26103.051 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.087..0.087 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.083..0.083 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 14.480 ms
 Execution Time: 94876.856 ms
(47 rows)

===== 22.sql jit=off =====
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163244.03..163244.06 rows=1 width=72) (actual time=4597.893..4597.896 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75320.20..75320.21 rows=1 width=32) (actual time=2044.595..2044.596 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75200.98 rows=47688 width=6) (actual time=0.017..1947.317 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87923.82..88125.15 rows=7321 width=72) (actual time=4597.891..4597.892 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87923.82..87942.12 rows=7321 width=38) (actual time=4593.663..4594.244 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87453.89 rows=7321 width=38) (actual time=2044.699..4553.020 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75200.98 rows=17500 width=26) (actual time=2044.670..3575.406 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.28 rows=17 width=4) (actual time=0.004..0.004 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.626 ms
 Execution Time: 4598.195 ms
(21 rows)

===== 2-flattened.sql jit=off =====
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=208243.81..212752.88 rows=450907 width=36) (actual time=5392.276..6269.192 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 5  Memory Usage: 139313kB  Disk Usage: 15632kB
   ->  Nested Loop  (cost=42.10..200243.16 rows=1600130 width=10) (actual time=1.804..3952.995 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=1.778..75.797 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=0.078..0.114 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.042..0.055 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=1.603..13.917 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.932..0.932 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.09 rows=81 width=14) (actual time=0.010..0.170 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.200 ms
 Execution Time: 6320.164 ms
(23 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=514953.14..514953.15 rows=1 width=193) (actual time=6356.585..6356.607 rows=100 loops=1)
   ->  Sort  (cost=514953.14..514953.15 rows=1 width=193) (actual time=6356.584..6356.597 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Hash Join  (cost=265902.66..514953.13 rows=1 width=193) (actual time=5115.638..6351.247 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70962.07 rows=8217 width=30) (actual time=0.031..821.216 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=202834.71..202834.71 rows=1600130 width=173) (actual time=5114.514..5114.518 rows=1604080 loops=1)
                     Buckets: 1048576  Batches: 4  Memory Usage: 90233kB
                     ->  Nested Loop  (cost=2.00..202834.71 rows=1600130 width=173) (actual time=0.123..3636.004 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=167) (actual time=0.099..124.866 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.032..0.035 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=171) (actual time=0.051..107.596 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=145) (actual time=0.009..26.229 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.025..0.026 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.005..0.012 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.09 rows=81 width=14) (actual time=0.009..0.146 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.007..0.007 rows=1 loops=12783)
                       Index Cond: (ps_partkey = part.p_partkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.477 ms
 Execution Time: 6356.982 ms
(32 rows)

DROP TABLE
===== 2.sql jit=off =====
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1687170.01..1687170.01 rows=1 width=193) (actual time=8701.539..8701.560 rows=100 loops=1)
   ->  Sort  (cost=1687170.01..1687170.01 rows=1 width=193) (actual time=8701.537..8701.550 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=504457.66..1687170.00 rows=1 width=193) (actual time=5854.385..8695.558 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..102913.53 rows=8217 width=30) (actual time=0.048..1156.835 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=504457.17..512457.82 rows=1600130 width=173) (actual time=5854.121..6753.808 rows=1603828 loops=1)
                     ->  Sort  (cost=504457.17..508457.50 rows=1600130 width=173) (actual time=5854.113..6367.269 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293456kB
                           ->  Nested Loop  (cost=2.00..202834.71 rows=1600130 width=173) (actual time=0.085..3834.157 rows=1604080 loops=1)
                                 ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=167) (actual time=0.065..126.034 rows=20051 loops=1)
                                       Join Filter: (nation.n_regionkey = region.r_regionkey)
                                       Rows Removed by Join Filter: 79949
                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.014..0.017 rows=1 loops=1)
                                             Filter: (r_name = 'AMERICA'::bpchar)
                                             Rows Removed by Filter: 4
                                       ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=171) (actual time=0.048..108.505 rows=100000 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=145) (actual time=0.003..23.791 rows=100000 loops=1)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.029..0.030 rows=25 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.009..0.016 rows=25 loops=1)
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.09 rows=81 width=14) (actual time=0.009..0.157 rows=80 loops=20051)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=162.40..162.41 rows=1 width=32) (actual time=0.053..0.053 rows=1 loops=6398)
                       ->  Nested Loop  (cost=0.86..162.39 rows=4 width=6) (actual time=0.031..0.050 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..161.10 rows=18 width=10) (actual time=0.019..0.045 rows=4 loops=6398)
                                   ->  Nested Loop  (cost=0.72..158.33 rows=18 width=10) (actual time=0.015..0.033 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.75 rows=18 width=10) (actual time=0.009..0.010 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 4.801 ms
 Execution Time: 8720.932 ms
(49 rows)

===== 3.sql jit=off =====
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2950046.98..2950047.01 rows=10 width=44) (actual time=54165.987..54165.994 rows=10 loops=1)
   ->  Sort  (cost=2950046.98..2957807.28 rows=3104117 width=44) (actual time=54165.984..54165.989 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2807790.30..2882968.13 rows=3104117 width=44) (actual time=54011.960..54116.788 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 8  Batches: 1  Memory Usage: 61457kB
               ->  Hash Join  (cost=526181.45..2553640.72 rows=3104117 width=24) (actual time=25725.022..53431.239 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874390.35 rows=32540732 width=16) (actual time=0.234..21387.383 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=508297.72..508297.72 rows=1430699 width=12) (actual time=25720.044..25720.047 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=138627.03..508297.72 rows=1430699 width=12) (actual time=1922.134..24853.172 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=80320.00..431115.16 rows=7190653 width=16) (actual time=1252.240..20401.516 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..78522.33 rows=7190653 width=0) (actual time=1086.773..1086.773 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54576.51..54576.51 rows=298442 width=4) (actual time=668.732..668.733 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54576.51 rows=298442 width=4) (actual time=0.368..563.525 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 9.453 ms
 Execution Time: 54172.709 ms
(29 rows)

===== 4.sql jit=off =====
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2584956.77..2584956.78 rows=1 width=24) (actual time=62345.796..62345.800 rows=1 loops=1)
   ->  Sort  (cost=2584956.77..2584956.79 rows=5 width=24) (actual time=62345.794..62345.797 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2584956.70..2584956.75 rows=5 width=24) (actual time=62344.957..62344.962 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2209962.29..2582209.57 rows=549426 width=16) (actual time=36676.135..62030.517 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7512.49..276666.53 rows=549469 width=20) (actual time=277.169..19193.660 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7375.13 rows=549469 width=0) (actual time=133.346..133.347 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874390.35..1874390.35 rows=19995956 width=4) (actual time=36387.003..36387.004 rows=37929348 loops=1)
                           Buckets: 4194304  Batches: 16  Memory Usage: 116042kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874390.35 rows=19995956 width=4) (actual time=0.401..25801.245 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 7.415 ms
 Execution Time: 62347.499 ms
(22 rows)

===== 5.sql jit=off =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2372404.28..2372404.28 rows=1 width=58) (actual time=52846.331..52846.339 rows=1 loops=1)
   ->  Sort  (cost=2372404.28..2372404.34 rows=25 width=58) (actual time=52846.329..52846.336 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2371503.52..2372404.15 rows=25 width=58) (actual time=52778.677..52846.297 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2371503.52..2371683.58 rows=72026 width=38) (actual time=52762.081..52768.186 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=422153.29..2365692.38 rows=72026 width=38) (actual time=22289.780..52689.300 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=417437.29..2351456.84 rows=1813242 width=50) (actual time=22211.813..51938.424 rows=1815327 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=354233.49..2236122.37 rows=9066208 width=20) (actual time=21340.119..48473.178 rows=9108027 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1724420.68 rows=59987868 width=20) (actual time=0.391..10431.395 rows=59986052 loops=1)
                                       ->  Hash  (cost=325899.37..325899.37 rows=2266730 width=8) (actual time=21330.752..21330.753 rows=2276638 loops=1)
                                             Buckets: 4194304  Batches: 1  Memory Usage: 121700kB
                                             ->  Bitmap Heap Scan on orders  (cost=30986.42..325899.37 rows=2266730 width=8) (actual time=539.878..20137.125 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..30419.74 rows=2266730 width=0) (actual time=377.969..377.969 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=59453.89..59453.89 rows=299992 width=38) (actual time=870.334..870.336 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                       ->  Hash Join  (cost=2.51..59453.89 rows=299992 width=38) (actual time=1.155..733.774 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50826.61 rows=1499961 width=8) (actual time=0.480..300.881 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.656..0.658 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.642..0.652 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.314..0.316 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.309..0.310 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.296..0.299 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=76.099..76.099 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.302..39.558 rows=100000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 15.556 ms
 Execution Time: 52850.129 ms
(44 rows)

===== 6.sql jit=off =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1499346.14..1499346.15 rows=1 width=32) (actual time=7954.669..7954.670 rows=1 loops=1)
   ->  Aggregate  (cost=1499346.14..1499346.15 rows=1 width=32) (actual time=7954.666..7954.667 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=296372.42..1493413.02 rows=1186624 width=12) (actual time=3498.241..6933.718 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..296075.76 rows=1186624 width=0) (actual time=3045.988..3045.989 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.131 ms
 Execution Time: 7957.239 ms
(10 rows)

===== 7.sql jit=off =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2519655.03..2519655.15 rows=1 width=116) (actual time=93223.127..93223.135 rows=1 loops=1)
   ->  GroupAggregate  (cost=2519655.03..2520864.61 rows=10024 width=116) (actual time=93223.124..93223.132 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2519655.03..2519806.34 rows=60527 width=96) (actual time=93199.220..93200.643 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1024617.31..2514847.58 rows=60527 width=96) (actual time=14646.306..93085.688 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=473551.30..1955849.10 rows=1454421 width=46) (actual time=5961.210..83547.301 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=469926.90..1869038.17 rows=18304618 width=24) (actual time=5906.931..75954.856 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..465350.74 rows=18304618 width=0) (actual time=5074.080..5074.080 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=54.229..54.232 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.465..51.041 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.287..26.836 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.164..0.165 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.151..0.156 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536067.86..536067.86 rows=1199852 width=30) (actual time=8678.494..8678.496 rows=1191175 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                           ->  Hash Join  (cost=56932.85..536067.86 rows=1199852 width=30) (actual time=705.851..8136.431 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..410893.44 rows=14998144 width=8) (actual time=0.415..2751.960 rows=15000000 loops=1)
                                 ->  Hash  (cost=55432.89..55432.89 rows=119997 width=30) (actual time=705.119..705.121 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55432.89 rows=119997 width=30) (actual time=0.509..655.348 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50826.61 rows=1499961 width=8) (actual time=0.455..298.174 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.038..0.038 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.023..0.029 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 12.459 ms
 Execution Time: 93227.258 ms
(45 rows)

===== 8.sql jit=off =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2024817.53..2024817.78 rows=1 width=64) (actual time=46321.248..46321.258 rows=1 loops=1)
   ->  GroupAggregate  (cost=2024817.53..2025404.50 rows=2406 width=64) (actual time=46321.246..46321.254 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=2024817.53..2024877.40 rows=23949 width=70) (actual time=46304.913..46305.767 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=496100.51..2023075.52 rows=23949 width=70) (actual time=20345.968..46252.234 rows=23842 loops=1)
                     ->  Hash Join  (cost=496100.36..2022376.02 rows=23949 width=20) (actual time=20345.908..46138.578 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=491634.36..2017846.73 rows=24113 width=20) (actual time=20277.910..46036.933 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1524477.19 rows=398528 width=20) (actual time=0.150..25413.995 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65962.06 rows=13287 width=4) (actual time=0.108..782.584 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..109.46 rows=31 width=24) (actual time=0.079..1.867 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=480290.81..480290.81 rows=907449 width=8) (actual time=20272.080..20272.085 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=125230.99..480290.81 rows=907449 width=8) (actual time=1649.940..19781.405 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=62027.20..390997.87 rows=4537245 width=12) (actual time=861.292..16739.172 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..60892.89 rows=4537245 width=0) (actual time=700.699..700.699 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59453.89..59453.89 rows=299992 width=4) (actual time=787.496..787.500 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59453.89 rows=299992 width=4) (actual time=0.111..685.662 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50826.61 rows=1499961 width=8) (actual time=0.035..276.897 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.062..0.065 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.045..0.057 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.010..0.013 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.022..0.023 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.015..0.017 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=67.714..67.714 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.016..36.416 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.010..0.010 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 12.604 ms
 Execution Time: 46323.656 ms
(52 rows)

===== 9.sql jit=off =====
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2514698.17..2514698.18 rows=1 width=90) (actual time=272907.786..272908.572 rows=1 loops=1)
   ->  Sort  (cost=2514698.17..2514848.55 rows=60150 width=90) (actual time=272907.544..272907.555 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2513495.17..2514397.42 rows=60150 width=90) (actual time=272904.582..272905.392 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=1838387.49..2481899.64 rows=1805459 width=81) (actual time=246423.189..264287.757 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=1838385.93..2471841.68 rows=1805459 width=31) (actual time=246421.424..261206.716 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..410893.44 rows=14998144 width=8) (actual time=0.171..5058.459 rows=15000000 loops=1)
                           ->  Hash  (cost=1803474.69..1803474.69 rows=1805459 width=31) (actual time=246415.273..246415.277 rows=3248192 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 122446kB
                                 ->  Nested Loop  (cost=71186.08..1803474.69 rows=1805459 width=31) (actual time=957.243..240840.383 rows=3248192 loops=1)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Hash Join  (cost=71185.64..347216.31 rows=242443 width=26) (actual time=957.001..7046.063 rows=433248 loops=1)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Hash Join  (cost=66719.64..342113.88 rows=242443 width=18) (actual time=884.257..6329.950 rows=433248 loops=1)
                                                   Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                   ->  Seq Scan on partsupp  (cost=0.00..254392.49 rows=8000649 width=14) (actual time=0.495..2407.889 rows=8000000 loops=1)
                                                   ->  Hash  (cost=65962.06..65962.06 rows=60606 width=4) (actual time=883.558..883.559 rows=108312 loops=1)
                                                         Buckets: 131072 (originally 65536)  Batches: 1 (originally 1)  Memory Usage: 4832kB
                                                         ->  Seq Scan on part  (cost=0.00..65962.06 rows=60606 width=4) (actual time=0.507..838.914 rows=108312 loops=1)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 1891688
                                             ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=72.405..72.406 rows=100000 loops=1)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                                   ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.362..39.991 rows=100000 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..5.99 rows=1 width=29) (actual time=0.078..0.529 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.210..0.211 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.182..0.188 rows=25 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 36.911 ms
 Execution Time: 272911.289 ms
(37 rows)

