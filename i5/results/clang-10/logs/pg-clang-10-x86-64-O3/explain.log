===== 10.sql jit=on =====
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2405230.09..2405230.14 rows=20 width=202) (actual time=15079.439..15079.446 rows=20 loops=1)
   ->  Sort  (cost=2405230.09..2406625.71 rows=558248 width=202) (actual time=14530.749..14530.754 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2250682.30..2390375.31 rows=558248 width=202) (actual time=12270.930..14413.973 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=2250682.30..2376419.11 rows=558248 width=182) (actual time=12270.907..13744.690 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 33kB  Peak Memory: 33kB
                     ->  Nested Loop  (cost=2250682.11..2351297.95 rows=558248 width=182) (actual time=12270.531..13369.626 rows=1145402 loops=1)
                           ->  Merge Join  (cost=2250681.97..2337596.78 rows=558248 width=160) (actual time=12270.503..13056.176 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..74796.38 rows=1500130 width=148) (actual time=0.013..370.680 rows=1499997 loops=1)
                                 ->  Sort  (cost=2250680.39..2252076.01 rows=558248 width=16) (actual time=12270.453..12399.149 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: quicksort  Memory: 113386kB
                                       ->  Hash Join  (cost=284246.27..2197394.09 rows=558248 width=16) (actual time=1605.927..11914.060 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1874354.75 rows=14778309 width=16) (actual time=0.027..8402.246 rows=14808183 loops=1)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 45177869
                                             ->  Hash  (cost=277162.22..277162.22 rows=566724 width=8) (actual time=1603.342..1603.343 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=7749.36..277162.22 rows=566724 width=8) (actual time=130.580..1475.091 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233137
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7607.68 rows=566724 width=0) (actual time=73.866..73.866 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..2.16 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 8.919 ms
 JIT:
   Functions: 38
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.589 ms, Inlining 72.432 ms, Optimization 309.280 ms, Emission 166.587 ms, Total 552.888 ms
 Execution Time: 15131.379 ms
(41 rows)

===== 11.sql jit=on =====
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=95186.00..95186.00 rows=1 width=36) (actual time=1499.846..1499.851 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44526.25..44526.26 rows=1 width=32) (actual time=538.310..538.312 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..42126.19 rows=320008 width=10) (actual time=0.616..448.629 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.605..9.173 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.594..8.489 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.371..0.371 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.11 rows=82 width=14) (actual time=0.005..0.100 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50659.73..50926.41 rows=106669 width=36) (actual time=1499.844..1499.846 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=45326.27..50126.39 rows=106669 width=36) (actual time=1499.790..1499.792 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 5  Memory Usage: 135217kB  Disk Usage: 752kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..42126.19 rows=320008 width=14) (actual time=0.683..577.390 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.660..10.892 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.021..0.025 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.634..10.116 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.404..0.405 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.11 rows=82 width=18) (actual time=0.006..0.130 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.305 ms
 Execution Time: 1504.306 ms
(38 rows)

===== 12.sql jit=on =====
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3030911.69..3031750.02 rows=1 width=27) (actual time=16160.302..16160.306 rows=1 loops=1)
   ->  GroupAggregate  (cost=3030911.69..3036780.02 rows=7 width=27) (actual time=15773.295..15773.298 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3030911.69..3031645.22 rows=293413 width=27) (actual time=15737.991..15744.281 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2477872.61..3004266.01 rows=293413 width=27) (actual time=11882.709..15669.057 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410939.01 rows=15002701 width=20) (actual time=0.044..1372.416 rows=15000000 loops=1)
                     ->  Hash  (cost=2474204.95..2474204.95 rows=293413 width=15) (actual time=11881.456..11881.456 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474204.95 rows=293413 width=15) (actual time=0.265..11781.317 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.825 ms
 JIT:
   Functions: 19
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.712 ms, Inlining 60.743 ms, Optimization 214.900 ms, Emission 111.062 ms, Total 389.417 ms
 Execution Time: 16205.957 ms
(21 rows)

===== 13.sql jit=on =====
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1523950.77..1523950.77 rows=1 width=16) (actual time=13805.783..13805.787 rows=1 loops=1)
   ->  Sort  (cost=1523950.77..1523951.27 rows=200 width=16) (actual time=13569.811..13569.813 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1523947.77..1523949.77 rows=200 width=16) (actual time=13569.757..13569.765 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1371603.77..1501445.82 rows=1500130 width=12) (actual time=12938.352..13439.730 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 5  Memory Usage: 131121kB  Disk Usage: 27424kB
                     ->  Hash Right Join  (cost=57718.00..544750.37 rows=14699616 width=8) (actual time=363.201..9008.812 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448445.76 rows=14699616 width=8) (actual time=0.061..4170.048 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38966.38..38966.38 rows=1500130 width=4) (actual time=358.693..358.694 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38966.38 rows=1500130 width=4) (actual time=0.020..123.755 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.741 ms
 JIT:
   Functions: 25
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 3.200 ms, Inlining 64.256 ms, Optimization 147.374 ms, Emission 69.158 ms, Total 283.987 ms
 Execution Time: 13851.716 ms
(26 rows)

===== 14.sql jit=on =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1225865.29..1225865.31 rows=1 width=32) (actual time=3784.081..3784.084 rows=1 loops=1)
   ->  Aggregate  (cost=1225865.29..1225865.31 rows=1 width=32) (actual time=3503.592..3503.595 rows=1 loops=1)
         ->  Hash Join  (cost=119069.01..1213124.31 rows=728056 width=33) (actual time=849.784..3140.697 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=19435.60..1090437.82 rows=756979 width=16) (actual time=264.795..1999.569 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..19246.35 rows=756979 width=0) (actual time=148.186..148.186 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60961.74..60961.74 rows=1999974 width=25) (actual time=580.738..580.739 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 74141kB
                     ->  Seq Scan on part  (cost=0.00..60961.74 rows=1999974 width=25) (actual time=0.044..247.994 rows=2000000 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.091 ms
 JIT:
   Functions: 15
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.240 ms, Inlining 74.886 ms, Optimization 133.642 ms, Emission 71.715 ms, Total 282.483 ms
 Execution Time: 3817.426 ms
(19 rows)

===== 15.sql jit=on =====
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1239846.19..1241113.93 rows=101419 width=36) (actual time=5105.362..5145.531 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=57280.32..1217536.19 rows=2231000 width=16) (actual time=537.111..3245.951 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56722.57 rows=2231000 width=0) (actual time=350.421..350.422 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.623 ms
 JIT:
   Functions: 9
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.424 ms, Inlining 58.573 ms, Optimization 106.591 ms, Emission 54.793 ms, Total 221.381 ms
 Execution Time: 5178.279 ms
(15 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2483777.29..2483787.32 rows=1 width=103) (actual time=9768.469..9768.473 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1242381.67..1242381.68 rows=1 width=32) (actual time=4622.675..4622.677 rows=1 loops=1)
           ->  HashAggregate  (cost=1239846.19..1241113.93 rows=101419 width=36) (actual time=4577.418..4617.482 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=57280.32..1217536.19 rows=2231000 width=16) (actual time=516.755..3009.541 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56722.57 rows=2231000 width=0) (actual time=331.603..331.603 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1241395.62..1246480.27 rows=507 width=103) (actual time=9318.349..9318.351 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4827.34 rows=100000 width=71) (actual time=0.346..12.633 rows=69998 loops=1)
         ->  Sort  (cost=1241395.32..1241396.59 rows=507 width=36) (actual time=9302.494..9302.495 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1239846.19..1241372.55 rows=507 width=36) (actual time=9275.676..9302.484 rows=1 loops=1)
                     ->  HashAggregate  (cost=1239846.19..1241367.48 rows=507 width=36) (actual time=9275.674..9302.481 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=57280.32..1217536.19 rows=2231000 width=16) (actual time=510.249..3023.280 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56722.57 rows=2231000 width=0) (actual time=325.114..325.114 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.469 ms
 JIT:
   Functions: 30
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.067 ms, Inlining 20.704 ms, Optimization 282.012 ms, Emission 147.030 ms, Total 453.814 ms
 Execution Time: 9780.784 ms
(35 rows)

DROP VIEW
===== 16.sql jit=on =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=403741.12..403741.12 rows=1 width=44) (actual time=6107.728..6107.731 rows=1 loops=1)
   ->  Sort  (cost=403741.12..404126.87 rows=154300 width=44) (actual time=6087.821..6087.823 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=393935.49..402969.62 rows=154300 width=44) (actual time=5688.816..6082.336 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=393935.49..395433.72 rows=599290 width=40) (actual time=5688.761..5785.870 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 122929kB
                     ->  Hash Join  (cost=98173.23..336424.94 rows=599290 width=40) (actual time=577.234..2723.990 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3466.46..231217.89 rows=4000098 width=8) (actual time=28.086..1333.454 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=10 width=4) (actual time=4.088..27.329 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90961.35..90961.35 rows=299634 width=40) (actual time=548.001..548.002 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90961.35 rows=299634 width=40) (actual time=0.049..478.373 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.884 ms
 JIT:
   Functions: 32
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 4.001 ms, Inlining 0.000 ms, Optimization 1.020 ms, Emission 22.548 ms, Total 27.569 ms
 Execution Time: 6142.142 ms
(31 rows)

===== 17-flattened.sql jit=on =====
                                                          QUERY PLAN                                                           
-------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5567182.54..6184165.16 rows=2079427 width=36) (actual time=33537.583..54412.508 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
   ->  Seq Scan on lineitem  (cost=0.00..1724392.20 rows=59985020 width=9) (actual time=0.214..7738.922 rows=59986052 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.454 ms
 JIT:
   Functions: 11
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.121 ms, Inlining 82.723 ms, Optimization 110.211 ms, Emission 55.664 ms, Total 250.719 ms
 Execution Time: 54652.892 ms
(11 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=237909.57..237909.58 rows=1 width=32) (actual time=451.576..451.577 rows=1 loops=1)
   ->  Aggregate  (cost=237909.57..237909.58 rows=1 width=32) (actual time=432.461..432.462 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..237858.56 rows=20404 width=8) (actual time=0.975..431.705 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..86859.12 rows=2122 width=20) (actual time=0.957..380.139 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70961.61 rows=2122 width=4) (actual time=0.932..365.848 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.48 rows=1 width=16) (actual time=0.006..0.006 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..71.03 rows=10 width=17) (actual time=0.010..0.025 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.612 ms
 JIT:
   Functions: 20
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.559 ms, Inlining 0.000 ms, Optimization 4.025 ms, Emission 14.850 ms, Total 21.434 ms
 Execution Time: 454.220 ms
(21 rows)

DROP TABLE
===== 17.sql jit=on =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6437325.62..6437325.63 rows=1 width=32) (actual time=55489.426..55489.430 rows=1 loops=1)
   ->  Aggregate  (cost=6437325.62..6437325.63 rows=1 width=32) (actual time=55152.612..55152.614 rows=1 loops=1)
         ->  Nested Loop  (cost=5638171.12..6437272.58 rows=21215 width=8) (actual time=34170.731..55151.822 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5638170.68..6281406.07 rows=2206 width=40) (actual time=34170.702..55100.302 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5567182.54..6184165.16 rows=2079427 width=36) (actual time=33850.546..54628.628 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724392.20 rows=59985020 width=9) (actual time=0.171..8048.687 rows=59986052 loops=1)
                     ->  Hash  (cost=70961.61..70961.61 rows=2122 width=4) (actual time=318.654..318.655 rows=1996 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 103kB
                           ->  Seq Scan on part  (cost=0.00..70961.61 rows=2122 width=4) (actual time=0.448..317.931 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..70.53 rows=10 width=17) (actual time=0.011..0.025 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.185 ms
 JIT:
   Functions: 33
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.497 ms, Inlining 85.980 ms, Optimization 230.789 ms, Emission 120.655 ms, Total 441.920 ms
 Execution Time: 55677.242 ms
(26 rows)

===== 18.sql jit=on =====
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9938373.37..9938373.62 rows=100 width=71) (actual time=36862.238..36862.252 rows=99 loops=1)
   ->  Sort  (cost=9938373.37..9988339.41 rows=19986417 width=71) (actual time=36528.206..36528.215 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8573352.93..9174506.88 rows=19986417 width=71) (actual time=36526.791..36528.105 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 64  Batches: 1  Memory Usage: 12369kB
               ->  Hash Join  (cost=69741.01..6618431.52 rows=19986417 width=44) (actual time=1315.582..36526.009 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=161.08..6496387.11 rows=19986417 width=25) (actual time=830.172..36040.255 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729744.41 rows=4998752 width=24) (actual time=606.715..25429.706 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650479.95 rows=15002701 width=20) (actual time=0.519..2723.232 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929285.79 rows=4998752 width=4) (actual time=519.728..22041.056 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404416.87 rows=59985020 width=9) (actual time=0.566..11505.319 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404416.87 rows=59985020 width=9) (actual time=0.013..7949.417 rows=59916431 loops=1)
                     ->  Hash  (cost=50828.30..50828.30 rows=1500130 width=23) (actual time=480.914..480.915 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50828.30 rows=1500130 width=23) (actual time=0.510..211.146 rows=1500000 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 8.955 ms
 JIT:
   Functions: 30
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 3.454 ms, Inlining 60.473 ms, Optimization 177.810 ms, Emission 95.551 ms, Total 337.287 ms
 Execution Time: 36916.009 ms
(30 rows)

===== 19.sql jit=on =====


 Limit  (cost=694765.94..694765.95 rows=1 width=32) (actual time=1346.986..1346.987 rows=1 loops=1)
   ->  Aggregate  (cost=694765.94..694765.95 rows=1 width=32) (actual time=993.791..993.792 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..694757.74 rows=1093 width=12) (actual time=2.762..992.448 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125960.90 rows=4912 width=30) (actual time=0.255..369.292 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..115.79 rows=1 width=21) (actual time=0.117..0.130 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.258 ms
 JIT:
   Functions: 12
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.607 ms, Inlining 62.390 ms, Optimization 182.462 ms, Emission 108.124 ms, Total 355.583 ms
 Execution Time: 1363.966 ms
(17 rows)

===== 1.sql jit=on =====
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3949259.35..3949259.35 rows=1 width=236) (actual time=65696.011..65696.013 rows=1 loops=1)
   ->  Sort  (cost=3949259.35..3949259.37 rows=6 width=236) (actual time=65365.670..65365.670 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3949259.16..3949259.32 rows=6 width=236) (actual time=65365.608..65365.616 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874354.75 rows=59282983 width=25) (actual time=0.326..9900.592 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.615 ms
 JIT:
   Functions: 10
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.912 ms, Inlining 65.275 ms, Optimization 170.541 ms, Emission 94.241 ms, Total 331.969 ms
 Execution Time: 65738.639 ms
(17 rows)

===== 20-flattened.sql jit=on =====
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2100417.47..2261903.56 rows=4841082 width=40) (actual time=118399.703..125060.024 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
   ->  Bitmap Heap Scan on lineitem  (cost=233634.37..1494680.48 rows=9100274 width=13) (actual time=1698.125..110418.406 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231359.30 rows=9100274 width=0) (actual time=1359.652..1359.653 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 3.632 ms
 JIT:
   Functions: 13
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.896 ms, Inlining 80.867 ms, Optimization 162.738 ms, Emission 84.666 ms, Total 331.168 ms
 Execution Time: 125275.046 ms
(15 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=59400.84..59400.85 rows=1 width=51) (actual time=7998.112..7998.114 rows=1 loops=1)
   ->  Sort  (cost=59400.84..59400.85 rows=1 width=51) (actual time=7998.110..7998.112 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..59400.83 rows=1 width=51) (actual time=9.923..7993.478 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=55) (actual time=2.584..16.908 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.344..0.348 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=59) (actual time=2.234..15.351 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.595..1.595 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..14.24 rows=1 width=8) (actual time=1.947..1.947 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..13.75 rows=1 width=16) (actual time=1.711..1.940 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.11 rows=82 width=12) (actual time=0.022..1.039 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.015..0.015 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.015..0.015 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.010..0.010 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 8.697 ms
 Execution Time: 7999.418 ms
(33 rows)

DROP TABLE
===== 20.sql jit=on =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2424676.80..2424676.80 rows=1 width=51) (actual time=136557.195..136557.200 rows=1 loops=1)
   ->  Sort  (cost=2424676.80..2424676.80 rows=1 width=51) (actual time=136101.736..136101.741 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2166632.10..2424676.79 rows=1 width=51) (actual time=115702.132..136099.169 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183310388
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=55) (actual time=0.032..22.356 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.020..0.023 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=59) (actual time=0.006..16.512 rows=100000 loops=1)
               ->  Materialize  (cost=2166632.10..2420029.48 rows=3 width=8) (actual time=27.156..31.549 rows=44765 loops=4095)
                     ->  Nested Loop  (cost=2166632.10..2420029.47 rows=3 width=8) (actual time=111204.089..122626.421 rows=59002 loops=1)
                           ->  Hash Join  (cost=2166631.67..2389236.45 rows=48900 width=44) (actual time=111203.385..118924.382 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2100417.47..2261903.56 rows=4841082 width=40) (actual time=110882.152..117883.221 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=233634.37..1494680.48 rows=9100274 width=13) (actual time=1691.627..103489.240 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231359.30 rows=9100274 width=0) (actual time=1352.334..1352.334 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65961.68..65961.68 rows=20202 width=4) (actual time=321.119..321.120 rows=21718 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1020kB
                                       ->  Seq Scan on part  (cost=0.00..65961.68 rows=20202 width=4) (actual time=0.415..316.276 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.062..0.062 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 7.439 ms
 JIT:
   Functions: 42
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 5.542 ms, Inlining 91.129 ms, Optimization 307.583 ms, Emission 158.397 ms, Total 562.652 ms
 Execution Time: 136632.788 ms
(42 rows)

===== 21.sql jit=on =====
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4271249.41..4271249.42 rows=1 width=34) (actual time=49726.553..49726.569 rows=100 loops=1)
   ->  Sort  (cost=4271249.41..4271249.42 rows=1 width=34) (actual time=49200.033..49200.043 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4271249.38..4271249.40 rows=1 width=34) (actual time=49192.777..49198.862 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4271249.38..4271249.39 rows=1 width=26) (actual time=49192.748..49195.275 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204853.90..4271249.37 rows=1 width=26) (actual time=14779.420..49028.878 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204853.34..4271241.83 rows=1 width=38) (actual time=14769.130..43474.826 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204852.90..4271234.52 rows=1 width=34) (actual time=14767.773..30894.271 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959676.69 rows=788610 width=34) (actual time=20.175..12152.852 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874354.75 rows=19995007 width=8) (actual time=0.281..9021.982 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=19.841..19.843 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=2.550..19.047 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.315..0.318 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=2.204..18.202 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.604..1.604 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874354.75..1874354.75 rows=19995007 width=8) (actual time=14733.994..14733.995 rows=37929348 loops=1)
                                             Buckets: 4194304  Batches: 16  Memory Usage: 125295kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874354.75 rows=19995007 width=8) (actual time=0.026..9803.704 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.093..0.093 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.083..0.083 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.818 ms
 JIT:
   Functions: 47
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 5.751 ms, Inlining 63.001 ms, Optimization 299.372 ms, Emission 163.763 ms, Total 531.887 ms
 Execution Time: 49836.217 ms
(51 rows)

===== 22.sql jit=on =====
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163220.77..163220.80 rows=1 width=72) (actual time=1721.555..1721.558 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75324.65..75324.65 rows=1 width=32) (actual time=764.004..764.004 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75205.41 rows=47692 width=6) (actual time=0.010..731.321 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87896.11..88099.72 rows=7404 width=72) (actual time=1704.955..1704.956 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87896.11..87914.62 rows=7404 width=38) (actual time=1703.308..1703.658 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87420.26 rows=7404 width=38) (actual time=764.078..1682.244 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75205.41 rows=17502 width=26) (actual time=764.059..1342.580 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.28 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.855 ms
 JIT:
   Functions: 17
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.466 ms, Inlining 0.000 ms, Optimization 0.678 ms, Emission 15.666 ms, Total 18.810 ms
 Execution Time: 1749.169 ms
(25 rows)

===== 2-flattened.sql jit=on =====
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=208792.39..213242.15 rows=444976 width=36) (actual time=3290.815..3737.300 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 5  Memory Usage: 139313kB  Disk Usage: 15632kB
   ->  Nested Loop  (cost=42.10..200792.19 rows=1600039 width=10) (actual time=16.556..2626.996 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=16.538..66.198 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=15.933..15.959 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.049..0.060 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.635..0.635 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=15.870..15.871 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=0.539..9.244 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.313..0.313 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.11 rows=82 width=14) (actual time=0.006..0.116 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.128 ms
 JIT:
   Functions: 27
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 3.677 ms, Inlining 0.000 ms, Optimization 1.097 ms, Emission 19.330 ms, Total 24.103 ms
 Execution Time: 3805.177 ms
(27 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=512755.73..512755.74 rows=1 width=192) (actual time=3906.242..3906.258 rows=100 loops=1)
   ->  Sort  (cost=512755.73..512755.74 rows=1 width=192) (actual time=3338.633..3338.643 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Hash Join  (cost=266448.33..512755.72 rows=1 width=192) (actual time=2741.202..3336.447 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70961.61 rows=8055 width=30) (actual time=0.040..314.537 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=203383.74..203383.74 rows=1600039 width=172) (actual time=2739.831..2739.834 rows=1604080 loops=1)
                     Buckets: 1048576  Batches: 4  Memory Usage: 90233kB
                     ->  Nested Loop  (cost=2.00..203383.74 rows=1600039 width=172) (actual time=0.131..2097.449 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.102..47.149 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.052..0.054 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.045..40.998 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.007..15.347 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.019..0.020 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.006..0.011 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.11 rows=82 width=14) (actual time=0.004..0.093 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.004..0.004 rows=1 loops=12783)
                       Index Cond: (ps_partkey = part.p_partkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.126 ms
 JIT:
   Functions: 41
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.561 ms, Inlining 60.260 ms, Optimization 317.139 ms, Emission 189.522 ms, Total 571.482 ms
 Execution Time: 3911.188 ms
(36 rows)

DROP TABLE
===== 2.sql jit=on =====
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1666584.68..1666584.69 rows=1 width=192) (actual time=5415.732..5415.748 rows=100 loops=1)
   ->  Sort  (cost=1666584.68..1666584.69 rows=1 width=192) (actual time=4653.175..4653.185 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=505002.37..1666584.67 rows=1 width=192) (actual time=3376.056..4650.495 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..102912.91 rows=8055 width=30) (actual time=0.048..489.735 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=504989.17..512989.36 rows=1600039 width=172) (actual time=3375.831..3851.469 rows=1603828 loops=1)
                     ->  Sort  (cost=504989.17..508989.26 rows=1600039 width=172) (actual time=3375.827..3670.122 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293456kB
                           ->  Nested Loop  (cost=2.00..203383.74 rows=1600039 width=172) (actual time=0.063..2292.815 rows=1604080 loops=1)
                                 ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.048..48.386 rows=20051 loops=1)
                                       Join Filter: (nation.n_regionkey = region.r_regionkey)
                                       Rows Removed by Join Filter: 79949
                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.015..0.017 rows=1 loops=1)
                                             Filter: (r_name = 'AMERICA'::bpchar)
                                             Rows Removed by Filter: 4
                                       ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.030..42.202 rows=100000 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.003..14.048 rows=100000 loops=1)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.016..0.017 rows=25 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.010 rows=25 loops=1)
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.11 rows=82 width=14) (actual time=0.004..0.104 rows=80 loops=20051)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=162.40..162.41 rows=1 width=32) (actual time=0.024..0.024 rows=1 loops=6398)
                       ->  Nested Loop  (cost=0.86..162.39 rows=4 width=6) (actual time=0.015..0.023 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..161.10 rows=18 width=10) (actual time=0.010..0.021 rows=4 loops=6398)
                                   ->  Nested Loop  (cost=0.72..158.33 rows=18 width=10) (actual time=0.008..0.017 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.75 rows=18 width=10) (actual time=0.005..0.006 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=25592)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.347 ms
 JIT:
   Functions: 57
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.654 ms, Inlining 66.929 ms, Optimization 450.571 ms, Emission 244.546 ms, Total 768.700 ms
 Execution Time: 5474.046 ms
(53 rows)

===== 3.sql jit=on =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2949543.71..2949543.74 rows=10 width=44) (actual time=37120.773..37120.782 rows=10 loops=1)
   ->  Sort  (cost=2949543.71..2957279.47 rows=3094305 width=44) (actual time=36644.297..36644.305 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2807736.69..2882676.89 rows=3094305 width=44) (actual time=36578.981..36627.045 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 8  Batches: 1  Memory Usage: 61457kB
               ->  Hash Join  (cost=527038.74..2554390.47 rows=3094305 width=24) (actual time=24505.973..36355.793 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874354.75 rows=32547716 width=16) (actual time=0.394..8523.740 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=509209.94..509209.94 rows=1426304 width=12) (actual time=24500.920..24500.925 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=138994.63..509209.94 rows=1426304 width=12) (actual time=979.651..23979.795 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=80715.06..431960.32 rows=7226661 width=16) (actual time=686.457..21577.826 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..78908.39 rows=7226661 width=0) (actual time=620.829..620.829 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54578.62..54578.62 rows=296076 width=4) (actual time=292.020..292.024 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54578.62 rows=296076 width=4) (actual time=0.518..240.806 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 7.121 ms
 JIT:
   Functions: 31
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 3.956 ms, Inlining 62.018 ms, Optimization 270.756 ms, Emission 143.359 ms, Total 480.089 ms
 Execution Time: 37178.533 ms
(33 rows)

===== 4.sql jit=on =====
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2586636.55..2586636.56 rows=1 width=24) (actual time=40344.709..40344.712 rows=1 loops=1)
   ->  Sort  (cost=2586636.55..2586636.57 rows=5 width=24) (actual time=40097.077..40097.080 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2586636.48..2586636.53 rows=5 width=24) (actual time=40097.024..40097.027 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2210212.42..2583780.32 rows=571232 width=16) (actual time=13863.791..39987.970 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7814.08..277298.25 rows=571478 width=20) (actual time=131.887..22432.628 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7671.22 rows=571478 width=0) (actual time=74.053..74.053 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874354.75..1874354.75 rows=19995007 width=4) (actual time=13719.419..13719.420 rows=37929348 loops=1)
                           Buckets: 4194304  Batches: 16  Memory Usage: 116042kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874354.75 rows=19995007 width=4) (actual time=0.443..9335.831 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 5.279 ms
 JIT:
   Functions: 19
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.246 ms, Inlining 54.453 ms, Optimization 127.833 ms, Emission 65.108 ms, Total 249.640 ms
 Execution Time: 40395.351 ms
(26 rows)

===== 5.sql jit=on =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2397728.34..2397728.34 rows=1 width=58) (actual time=34592.331..34592.339 rows=1 loops=1)
   ->  Sort  (cost=2397728.34..2397728.40 rows=25 width=58) (actual time=33920.652..33920.658 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2396822.26..2397728.21 rows=25 width=58) (actual time=33899.749..33920.609 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2396822.26..2397003.39 rows=72451 width=38) (actual time=33894.554..33897.931 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=413630.21..2390973.76 rows=72451 width=38) (actual time=20917.577..33858.301 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=408914.21..2376615.82 rows=1836557 width=50) (actual time=20879.759..33424.310 rows=1815327 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..1724392.20 rows=59985020 width=20) (actual time=0.379..6456.660 rows=59986052 loops=1)
                                 ->  Hash  (cost=403172.49..403172.49 rows=459337 width=38) (actual time=20878.065..20878.069 rows=453399 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 35976kB
                                       ->  Hash Join  (cost=94604.32..403172.49 rows=459337 width=38) (actual time=685.901..20663.266 rows=453399 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=31397.44..326759.68 rows=2296683 width=8) (actual time=280.537..19535.885 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..30823.27 rows=2296683 width=0) (actual time=215.247..215.248 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Hash  (cost=59456.56..59456.56 rows=300026 width=38) (actual time=404.178..404.181 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                                   ->  Hash Join  (cost=2.51..59456.56 rows=300026 width=38) (actual time=1.202..336.957 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50828.30 rows=1500130 width=8) (actual time=0.485..197.478 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.703..0.705 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.694..0.699 rows=5 loops=1)
                                                                     Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.389..0.391 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.293..0.294 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.285..0.286 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=35.969..35.969 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.474..21.476 rows=100000 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.202 ms
 JIT:
   Functions: 56
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.151 ms, Inlining 62.014 ms, Optimization 400.110 ms, Emission 209.098 ms, Total 677.373 ms
 Execution Time: 34643.717 ms
(48 rows)

===== 6.sql jit=on =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1500197.68..1500197.69 rows=1 width=32) (actual time=4251.815..4251.817 rows=1 loops=1)
   ->  Aggregate  (cost=1500197.68..1500197.69 rows=1 width=32) (actual time=4068.357..4068.357 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=297875.19..1494287.79 rows=1181976 width=12) (actual time=1233.225..3729.873 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..297579.70 rows=1181976 width=0) (actual time=1046.792..1046.792 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.694 ms
 JIT:
   Functions: 6
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.117 ms, Inlining 58.366 ms, Optimization 81.222 ms, Emission 43.674 ms, Total 184.379 ms
 Execution Time: 4280.854 ms
(14 rows)

===== 7.sql jit=on =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2511826.07..2511826.18 rows=1 width=116) (actual time=80963.875..80963.883 rows=1 loops=1)
   ->  GroupAggregate  (cost=2511826.07..2513018.62 rows=10044 width=116) (actual time=80170.652..80170.659 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2511826.07..2511974.91 rows=59537 width=96) (actual time=80163.261..80164.128 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1020392.23..2507104.34 rows=59537 width=96) (actual time=7922.689..80091.991 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=469253.05..1948162.46 rows=1430627 width=46) (actual time=2971.634..74588.847 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=465628.65..1862219.56 rows=18136594 width=24) (actual time=2942.755..71131.212 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..461094.51 rows=18136594 width=0) (actual time=2581.406..2581.406 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=28.837..28.839 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.848..27.495 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.472..19.014 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.367..0.368 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.362..0.363 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536136.48..536136.48 rows=1200216 width=30) (actual time=4944.710..4944.713 rows=1191175 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                           ->  Hash Join  (cost=56935.22..536136.48 rows=1200216 width=30) (actual time=340.465..4661.040 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..410939.01 rows=15002701 width=8) (actual time=0.429..1758.009 rows=15000000 loops=1)
                                 ->  Hash  (cost=55435.10..55435.10 rows=120010 width=30) (actual time=339.714..339.716 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55435.10 rows=120010 width=30) (actual time=0.538..313.621 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50828.30 rows=1500130 width=8) (actual time=0.491..195.810 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.035..0.036 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.026..0.028 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 8.766 ms
 JIT:
   Functions: 60
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.944 ms, Inlining 60.341 ms, Optimization 480.404 ms, Emission 251.959 ms, Total 799.648 ms
 Execution Time: 81025.160 ms
(49 rows)

===== 8.sql jit=on =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1951709.36..1951709.60 rows=1 width=64) (actual time=55944.562..55944.571 rows=1 loops=1)
   ->  GroupAggregate  (cost=1951709.36..1952281.60 rows=2406 width=64) (actual time=55229.481..55229.489 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=1951709.36..1951767.60 rows=23294 width=70) (actual time=55224.376..55224.848 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=499051.95..1950019.65 rows=23294 width=70) (actual time=16379.637..55191.459 rows=23842 loops=1)
                     ->  Hash Join  (cost=499051.80..1949337.81 rows=23294 width=20) (actual time=16379.599..55126.691 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=494585.80..1944809.80 rows=23624 width=20) (actual time=16344.695..55074.369 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1448548.92 rows=383808 width=20) (actual time=1.550..38471.124 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65961.68 rows=13305 width=4) (actual time=0.921..413.621 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..103.62 rows=29 width=24) (actual time=0.161..2.911 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=483042.22..483042.22 rows=923451 width=8) (actual time=16336.005..16336.010 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=126322.18..483042.22 rows=923451 width=8) (actual time=951.982..16072.954 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=63115.30..393286.12 rows=4617255 width=12) (actual time=468.523..14455.095 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..61960.99 rows=4617255 width=0) (actual time=404.636..404.637 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59456.56..59456.56 rows=300026 width=4) (actual time=482.302..482.305 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59456.56 rows=300026 width=4) (actual time=0.875..424.094 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50828.30 rows=1500130 width=8) (actual time=0.482..279.772 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.380..0.382 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.368..0.374 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.012..0.014 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.345..0.346 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.336..0.338 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=34.607..34.607 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.334..21.090 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.005..0.005 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 15.612 ms
 JIT:
   Functions: 67
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.330 ms, Inlining 78.791 ms, Optimization 415.624 ms, Emission 220.147 ms, Total 721.891 ms
 Execution Time: 55997.340 ms
(56 rows)

===== 9.sql jit=on =====
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1312778.54..1312778.58 rows=1 width=90) (actual time=437074.816..437074.823 rows=1 loops=1)
   ->  GroupAggregate  (cost=1312778.54..1312780.08 rows=44 width=90) (actual time=436494.394..436494.400 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=1312778.54..1312778.65 rows=44 width=81) (actual time=436471.327..436474.576 rows=11401 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Sort Method: external merge  Disk: 211200kB
               ->  Nested Loop  (cost=66467.89..1312777.34 rows=44 width=81) (actual time=414.212..430659.081 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 39009119
                     ->  Nested Loop  (cost=66467.89..1312760.11 rows=44 width=31) (actual time=414.176..420666.901 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=66467.46..1312500.40 rows=44 width=31) (actual time=413.898..330905.963 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=66467.17..1312250.37 rows=44 width=35) (actual time=413.877..316255.353 rows=3248192 loops=1)
                                       ->  Hash Join  (cost=66466.73..341855.24 rows=161622 width=18) (actual time=413.526..3665.362 rows=433248 loops=1)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..254387.96 rows=8000196 width=14) (actual time=0.449..1640.890 rows=8000000 loops=1)
                                             ->  Hash  (cost=65961.68..65961.68 rows=40404 width=4) (actual time=412.868..412.869 rows=108312 loops=1)
                                                   Buckets: 131072 (originally 65536)  Batches: 1 (originally 1)  Memory Usage: 4832kB
                                                   ->  Seq Scan on part  (cost=0.00..65961.68 rows=40404 width=4) (actual time=0.377..392.659 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..5.99 rows=1 width=29) (actual time=0.100..0.717 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..5.68 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..5.90 rows=1 width=8) (actual time=0.027..0.027 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.015..0.018 rows=25 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 23.912 ms
 JIT:
   Functions: 41
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.071 ms, Inlining 76.515 ms, Optimization 313.237 ms, Emission 188.136 ms, Total 583.958 ms
 Execution Time: 437293.777 ms
(35 rows)

===== 10.sql jit=off =====
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2405230.09..2405230.14 rows=20 width=202) (actual time=43966.695..43966.700 rows=20 loops=1)
   ->  Sort  (cost=2405230.09..2406625.71 rows=558248 width=202) (actual time=43966.694..43966.697 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2250682.30..2390375.31 rows=558248 width=202) (actual time=41439.227..43850.270 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=2250682.30..2376419.11 rows=558248 width=182) (actual time=41439.212..43085.102 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 33kB  Peak Memory: 33kB
                     ->  Nested Loop  (cost=2250682.11..2351297.95 rows=558248 width=182) (actual time=41438.923..42709.198 rows=1145402 loops=1)
                           ->  Merge Join  (cost=2250681.97..2337596.78 rows=558248 width=160) (actual time=41438.892..42318.501 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..74796.38 rows=1500130 width=148) (actual time=0.011..369.931 rows=1499997 loops=1)
                                 ->  Sort  (cost=2250680.39..2252076.01 rows=558248 width=16) (actual time=41438.866..41568.469 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: quicksort  Memory: 113386kB
                                       ->  Hash Join  (cost=284246.27..2197394.09 rows=558248 width=16) (actual time=27944.745..41071.158 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1874354.75 rows=14778309 width=16) (actual time=0.151..11149.500 rows=14808183 loops=1)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 45177869
                                             ->  Hash  (cost=277162.22..277162.22 rows=566724 width=8) (actual time=27941.947..27941.948 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=7749.36..277162.22 rows=566724 width=8) (actual time=132.027..27631.626 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233137
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7607.68 rows=566724 width=0) (actual time=74.657..74.657 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..2.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 9.829 ms
 Execution Time: 43974.500 ms
(37 rows)

===== 11.sql jit=off =====
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=95186.00..95186.00 rows=1 width=36) (actual time=1647.125..1647.130 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44526.25..44526.26 rows=1 width=32) (actual time=601.024..601.027 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..42126.19 rows=320008 width=10) (actual time=0.626..507.374 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.614..9.376 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.012 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.602..8.687 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.376..0.376 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.11 rows=82 width=14) (actual time=0.005..0.114 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50659.73..50926.41 rows=106669 width=36) (actual time=1647.124..1647.126 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=45326.27..50126.39 rows=106669 width=36) (actual time=1647.074..1647.076 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 5  Memory Usage: 135217kB  Disk Usage: 752kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..42126.19 rows=320008 width=14) (actual time=0.688..652.743 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.662..11.112 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.022..0.025 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.635..10.343 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.405..0.405 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.11 rows=82 width=18) (actual time=0.006..0.149 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.294 ms
 Execution Time: 1651.652 ms
(38 rows)

===== 12.sql jit=off =====
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3030911.69..3031750.02 rows=1 width=27) (actual time=19208.915..19208.918 rows=1 loops=1)
   ->  GroupAggregate  (cost=3030911.69..3036780.02 rows=7 width=27) (actual time=19208.913..19208.916 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3030911.69..3031645.22 rows=293413 width=27) (actual time=19162.580..19169.121 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2477872.61..3004266.01 rows=293413 width=27) (actual time=14924.019..19094.056 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410939.01 rows=15002701 width=20) (actual time=0.209..1659.259 rows=15000000 loops=1)
                     ->  Hash  (cost=2474204.95..2474204.95 rows=293413 width=15) (actual time=14922.642..14922.643 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474204.95 rows=293413 width=15) (actual time=0.627..14829.335 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.818 ms
 Execution Time: 19210.872 ms
(17 rows)

===== 13.sql jit=off =====
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1523950.77..1523950.77 rows=1 width=16) (actual time=16021.466..16021.469 rows=1 loops=1)
   ->  Sort  (cost=1523950.77..1523951.27 rows=200 width=16) (actual time=16021.465..16021.467 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1523947.77..1523949.77 rows=200 width=16) (actual time=16021.431..16021.439 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1371603.77..1501445.82 rows=1500130 width=12) (actual time=15337.988..15850.140 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 5  Memory Usage: 131121kB  Disk Usage: 27424kB
                     ->  Hash Right Join  (cost=57718.00..544750.37 rows=14699616 width=8) (actual time=365.134..10215.532 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448445.76 rows=14699616 width=8) (actual time=0.050..4726.685 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38966.38..38966.38 rows=1500130 width=4) (actual time=360.560..360.561 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38966.38 rows=1500130 width=4) (actual time=0.025..123.711 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.719 ms
 Execution Time: 16040.521 ms
(22 rows)

===== 14.sql jit=off =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1225865.29..1225865.31 rows=1 width=32) (actual time=3699.160..3699.163 rows=1 loops=1)
   ->  Aggregate  (cost=1225865.29..1225865.31 rows=1 width=32) (actual time=3699.159..3699.161 rows=1 loops=1)
         ->  Hash Join  (cost=119069.01..1213124.31 rows=728056 width=33) (actual time=910.241..3325.161 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=19435.60..1090437.82 rows=756979 width=16) (actual time=270.086..2083.697 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..19246.35 rows=756979 width=0) (actual time=152.061..152.061 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60961.74..60961.74 rows=1999974 width=25) (actual time=635.579..635.579 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 74141kB
                     ->  Seq Scan on part  (cost=0.00..60961.74 rows=1999974 width=25) (actual time=0.034..299.657 rows=2000000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.096 ms
 Execution Time: 3701.962 ms
(15 rows)

===== 15.sql jit=off =====
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1239846.19..1241113.93 rows=101419 width=36) (actual time=5101.141..5140.675 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=57280.32..1217536.19 rows=2231000 width=16) (actual time=561.238..3301.754 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56722.57 rows=2231000 width=0) (actual time=374.031..374.031 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.623 ms
 Execution Time: 5146.867 ms
(11 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2483777.29..2483787.32 rows=1 width=103) (actual time=9775.661..9775.665 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1242381.67..1242381.68 rows=1 width=32) (actual time=4890.806..4890.807 rows=1 loops=1)
           ->  HashAggregate  (cost=1239846.19..1241113.93 rows=101419 width=36) (actual time=4845.339..4885.046 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=57280.32..1217536.19 rows=2231000 width=16) (actual time=516.532..3061.738 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56722.57 rows=2231000 width=0) (actual time=331.215..331.215 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1241395.62..1246480.27 rows=507 width=103) (actual time=9775.659..9775.661 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4827.34 rows=100000 width=71) (actual time=0.252..12.602 rows=69998 loops=1)
         ->  Sort  (cost=1241395.32..1241396.59 rows=507 width=36) (actual time=9759.212..9759.213 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1239846.19..1241372.55 rows=507 width=36) (actual time=9731.836..9759.201 rows=1 loops=1)
                     ->  HashAggregate  (cost=1239846.19..1241367.48 rows=507 width=36) (actual time=9731.834..9759.198 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=57280.32..1217536.19 rows=2231000 width=16) (actual time=516.425..3054.662 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..56722.57 rows=2231000 width=0) (actual time=330.996..330.996 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.466 ms
 Execution Time: 9782.217 ms
(31 rows)

DROP VIEW
===== 16.sql jit=off =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=403741.12..403741.12 rows=1 width=44) (actual time=6026.118..6026.121 rows=1 loops=1)
   ->  Sort  (cost=403741.12..404126.87 rows=154300 width=44) (actual time=6026.117..6026.119 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=393935.49..402969.62 rows=154300 width=44) (actual time=5596.178..6020.622 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=393935.49..395433.72 rows=599290 width=40) (actual time=5596.135..5687.236 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 122929kB
                     ->  Hash Join  (cost=98173.23..336424.94 rows=599290 width=40) (actual time=571.754..2634.284 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3466.46..231217.89 rows=4000098 width=8) (actual time=22.931..1272.649 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=10 width=4) (actual time=0.105..22.883 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90961.35..90961.35 rows=299634 width=40) (actual time=547.673..547.674 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90961.35 rows=299634 width=40) (actual time=0.044..479.573 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.879 ms
 Execution Time: 6032.324 ms
(27 rows)

===== 17-flattened.sql jit=off =====
                                                          QUERY PLAN                                                           
-------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5567182.54..6184165.16 rows=2079427 width=36) (actual time=35251.793..61042.116 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
   ->  Seq Scan on lineitem  (cost=0.00..1724392.20 rows=59985020 width=9) (actual time=0.314..8395.720 rows=59986052 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.446 ms
 Execution Time: 61215.361 ms
(7 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=237909.57..237909.58 rows=1 width=32) (actual time=402.970..402.972 rows=1 loops=1)
   ->  Aggregate  (cost=237909.57..237909.58 rows=1 width=32) (actual time=402.969..402.970 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..237858.56 rows=20404 width=8) (actual time=0.316..402.176 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..86859.12 rows=2122 width=21) (actual time=0.306..354.529 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70961.61 rows=2122 width=4) (actual time=0.294..340.705 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.48 rows=1 width=17) (actual time=0.006..0.006 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..71.03 rows=10 width=17) (actual time=0.009..0.023 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.607 ms
 Execution Time: 403.000 ms
(17 rows)

DROP TABLE
===== 17.sql jit=off =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6437325.62..6437325.63 rows=1 width=32) (actual time=61136.741..61136.744 rows=1 loops=1)
   ->  Aggregate  (cost=6437325.62..6437325.63 rows=1 width=32) (actual time=61136.740..61136.742 rows=1 loops=1)
         ->  Nested Loop  (cost=5638171.12..6437272.58 rows=21215 width=8) (actual time=35278.218..61135.950 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5638170.68..6281406.07 rows=2206 width=40) (actual time=35278.184..61084.060 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5567182.54..6184165.16 rows=2079427 width=36) (actual time=34977.118..60648.571 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724392.20 rows=59985020 width=9) (actual time=0.387..8204.003 rows=59986052 loops=1)
                     ->  Hash  (cost=70961.61..70961.61 rows=2122 width=4) (actual time=299.591..299.592 rows=1996 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 103kB
                           ->  Seq Scan on part  (cost=0.00..70961.61 rows=2122 width=4) (actual time=0.350..298.888 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..70.53 rows=10 width=17) (actual time=0.011..0.025 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.987 ms
 Execution Time: 61255.034 ms
(22 rows)

===== 18.sql jit=off =====
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9938373.37..9938373.62 rows=100 width=71) (actual time=39727.057..39727.071 rows=99 loops=1)
   ->  Sort  (cost=9938373.37..9988339.41 rows=19986417 width=71) (actual time=39727.056..39727.064 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8573352.93..9174506.88 rows=19986417 width=71) (actual time=39725.633..39726.945 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 64  Batches: 1  Memory Usage: 12369kB
               ->  Hash Join  (cost=69741.01..6618431.52 rows=19986417 width=44) (actual time=1406.130..39724.794 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=161.08..6496387.11 rows=19986417 width=25) (actual time=885.809..39204.045 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729744.41 rows=4998752 width=24) (actual time=648.757..27949.133 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650479.95 rows=15002701 width=20) (actual time=0.337..2760.610 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929285.79 rows=4998752 width=4) (actual time=558.751..24371.432 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404416.87 rows=59985020 width=9) (actual time=0.372..11602.850 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404416.87 rows=59985020 width=9) (actual time=0.025..8012.136 rows=59916431 loops=1)
                     ->  Hash  (cost=50828.30..50828.30 rows=1500130 width=23) (actual time=515.915..515.915 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50828.30 rows=1500130 width=23) (actual time=0.490..243.346 rows=1500000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 9.332 ms
 Execution Time: 39732.253 ms
(26 rows)

===== 19.sql jit=off =====
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            

 Limit  (cost=694765.94..694765.95 rows=1 width=32) (actual time=1142.047..1142.049 rows=1 loops=1)
   ->  Aggregate  (cost=694765.94..694765.95 rows=1 width=32) (actual time=1142.046..1142.047 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..694757.74 rows=1093 width=12) (actual time=3.099..1140.656 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125960.90 rows=4912 width=30) (actual time=0.301..511.617 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..115.79 rows=1 width=21) (actual time=0.118..0.131 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.262 ms
 Execution Time: 1142.117 ms
(13 rows)

===== 1.sql jit=off =====
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3949259.35..3949259.35 rows=1 width=236) (actual time=71122.204..71122.205 rows=1 loops=1)
   ->  Sort  (cost=3949259.35..3949259.37 rows=6 width=236) (actual time=71122.202..71122.203 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3949259.16..3949259.32 rows=6 width=236) (actual time=71122.168..71122.176 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874354.75 rows=59282983 width=25) (actual time=0.268..12025.731 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.623 ms
 Execution Time: 71122.283 ms
(13 rows)

===== 20-flattened.sql jit=off =====
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2100417.47..2261903.56 rows=4841082 width=40) (actual time=104020.722..111066.320 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
   ->  Bitmap Heap Scan on lineitem  (cost=233634.37..1494680.48 rows=9100274 width=13) (actual time=1702.863..96439.784 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231359.30 rows=9100274 width=0) (actual time=1363.472..1363.472 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.289 ms
 Execution Time: 111243.565 ms
(11 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=59400.84..59400.85 rows=1 width=51) (actual time=5581.738..5581.740 rows=1 loops=1)
   ->  Sort  (cost=59400.84..59400.85 rows=1 width=51) (actual time=5581.736..5581.738 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..59400.83 rows=1 width=51) (actual time=9.775..5577.218 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=55) (actual time=2.536..16.525 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.344..0.348 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=59) (actual time=2.186..14.992 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.564..1.564 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..14.24 rows=1 width=8) (actual time=1.357..1.357 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..13.75 rows=1 width=16) (actual time=1.179..1.351 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.11 rows=82 width=12) (actual time=0.021..0.988 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.009..0.009 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 8.801 ms
 Execution Time: 5583.039 ms
(33 rows)

DROP TABLE
===== 20.sql jit=off =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2424676.80..2424676.80 rows=1 width=51) (actual time=133621.666..133621.671 rows=1 loops=1)
   ->  Sort  (cost=2424676.80..2424676.80 rows=1 width=51) (actual time=133621.664..133621.669 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2166632.10..2424676.79 rows=1 width=51) (actual time=109056.262..133618.889 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183310388
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=55) (actual time=0.035..25.416 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.022..0.026 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=59) (actual time=0.008..17.203 rows=100000 loops=1)
               ->  Materialize  (cost=2166632.10..2420029.48 rows=3 width=8) (actual time=25.542..30.051 rows=44765 loops=4095)
                     ->  Nested Loop  (cost=2166632.10..2420029.47 rows=3 width=8) (actual time=104593.109..116438.155 rows=59002 loops=1)
                           ->  Hash Join  (cost=2166631.67..2389236.45 rows=48900 width=44) (actual time=104592.469..112693.487 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2100417.47..2261903.56 rows=4841082 width=40) (actual time=104254.102..111642.384 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=233634.37..1494680.48 rows=9100274 width=13) (actual time=1697.689..96720.030 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231359.30 rows=9100274 width=0) (actual time=1357.183..1357.183 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65961.68..65961.68 rows=20202 width=4) (actual time=338.249..338.250 rows=21718 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1020kB
                                       ->  Seq Scan on part  (cost=0.00..65961.68 rows=20202 width=4) (actual time=0.211..333.126 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.063..0.063 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 4.303 ms
 Execution Time: 133651.769 ms
(38 rows)

===== 21.sql jit=off =====
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4271249.41..4271249.42 rows=1 width=34) (actual time=54611.114..54611.129 rows=100 loops=1)
   ->  Sort  (cost=4271249.41..4271249.42 rows=1 width=34) (actual time=54611.113..54611.122 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4271249.38..4271249.40 rows=1 width=34) (actual time=54602.916..54609.948 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4271249.38..4271249.39 rows=1 width=26) (actual time=54602.906..54605.799 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204853.90..4271249.37 rows=1 width=26) (actual time=17658.167..54438.800 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204853.34..4271241.83 rows=1 width=38) (actual time=17646.746..48748.536 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204852.90..4271234.52 rows=1 width=34) (actual time=17645.033..36842.266 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959676.69 rows=788610 width=34) (actual time=19.085..14955.534 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874354.75 rows=19995007 width=8) (actual time=0.170..11764.193 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=18.872..18.873 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=2.254..18.080 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.203..0.207 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=2.048..17.341 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.546..1.546 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874354.75..1874354.75 rows=19995007 width=8) (actual time=17611.441..17611.441 rows=37929348 loops=1)
                                             Buckets: 4194304  Batches: 16  Memory Usage: 125295kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874354.75 rows=19995007 width=8) (actual time=0.016..12841.335 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.088..0.088 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.085..0.085 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.840 ms
 Execution Time: 54611.796 ms
(47 rows)

===== 22.sql jit=off =====
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163220.77..163220.80 rows=1 width=72) (actual time=1667.182..1667.185 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75324.65..75324.65 rows=1 width=32) (actual time=742.839..742.840 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75205.41 rows=47692 width=6) (actual time=0.008..710.069 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87896.11..88099.72 rows=7404 width=72) (actual time=1667.181..1667.182 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87896.11..87914.62 rows=7404 width=38) (actual time=1665.362..1665.721 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87420.26 rows=7404 width=38) (actual time=742.899..1644.022 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75205.41 rows=17502 width=26) (actual time=742.881..1309.080 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.28 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.801 ms
 Execution Time: 1667.445 ms
(21 rows)

===== 2-flattened.sql jit=off =====
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=208792.39..213242.15 rows=444976 width=36) (actual time=3267.356..3720.327 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 5  Memory Usage: 139313kB  Disk Usage: 15632kB
   ->  Nested Loop  (cost=42.10..200792.19 rows=1600039 width=10) (actual time=0.717..2571.479 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=0.697..50.029 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=0.064..0.089 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.035..0.045 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=0.554..9.315 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.327..0.327 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.11 rows=82 width=14) (actual time=0.006..0.116 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.149 ms
 Execution Time: 3759.674 ms
(23 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=512755.73..512755.74 rows=1 width=192) (actual time=3449.394..3449.409 rows=100 loops=1)
   ->  Sort  (cost=512755.73..512755.74 rows=1 width=192) (actual time=3449.393..3449.402 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Hash Join  (cost=266448.33..512755.72 rows=1 width=192) (actual time=2787.827..3447.265 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70961.61 rows=8055 width=30) (actual time=0.018..380.982 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=203383.74..203383.74 rows=1600039 width=172) (actual time=2786.854..2786.857 rows=1604080 loops=1)
                     Buckets: 1048576  Batches: 4  Memory Usage: 90233kB
                     ->  Nested Loop  (cost=2.00..203383.74 rows=1600039 width=172) (actual time=0.069..2132.893 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.053..55.903 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.022..0.024 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.029..47.923 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.006..15.517 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.013..0.013 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.003..0.007 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.11 rows=82 width=14) (actual time=0.004..0.093 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.004..0.004 rows=1 loops=12783)
                       Index Cond: (ps_partkey = part.p_partkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.166 ms
 Execution Time: 3449.742 ms
(32 rows)

DROP TABLE
===== 2.sql jit=off =====
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1666584.68..1666584.69 rows=1 width=192) (actual time=4819.798..4819.814 rows=100 loops=1)
   ->  Sort  (cost=1666584.68..1666584.69 rows=1 width=192) (actual time=4819.797..4819.806 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=505002.37..1666584.67 rows=1 width=192) (actual time=3454.938..4817.152 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..102912.91 rows=8055 width=30) (actual time=0.024..549.429 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=504989.17..512989.36 rows=1600039 width=172) (actual time=3454.773..3924.949 rows=1603828 loops=1)
                     ->  Sort  (cost=504989.17..508989.26 rows=1600039 width=172) (actual time=3454.767..3740.930 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293456kB
                           ->  Nested Loop  (cost=2.00..203383.74 rows=1600039 width=172) (actual time=0.056..2430.825 rows=1604080 loops=1)
                                 ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.044..58.413 rows=20051 loops=1)
                                       Join Filter: (nation.n_regionkey = region.r_regionkey)
                                       Rows Removed by Join Filter: 79949
                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.015 rows=1 loops=1)
                                             Filter: (r_name = 'AMERICA'::bpchar)
                                             Rows Removed by Filter: 4
                                       ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.030..50.557 rows=100000 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.002..14.136 rows=100000 loops=1)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.018..0.019 rows=25 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.009..0.012 rows=25 loops=1)
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.11 rows=82 width=14) (actual time=0.004..0.105 rows=80 loops=20051)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=162.40..162.41 rows=1 width=32) (actual time=0.024..0.024 rows=1 loops=6398)
                       ->  Nested Loop  (cost=0.86..162.39 rows=4 width=6) (actual time=0.015..0.023 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..161.10 rows=18 width=10) (actual time=0.009..0.021 rows=4 loops=6398)
                                   ->  Nested Loop  (cost=0.72..158.33 rows=18 width=10) (actual time=0.008..0.016 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.75 rows=18 width=10) (actual time=0.005..0.006 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=25592)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.335 ms
 Execution Time: 4839.533 ms
(49 rows)

===== 3.sql jit=off =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2949543.71..2949543.74 rows=10 width=44) (actual time=37023.623..37023.629 rows=10 loops=1)
   ->  Sort  (cost=2949543.71..2957279.47 rows=3094305 width=44) (actual time=37023.622..37023.626 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2807736.69..2882676.89 rows=3094305 width=44) (actual time=36958.673..37006.387 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 8  Batches: 1  Memory Usage: 61457kB
               ->  Hash Join  (cost=527038.74..2554390.47 rows=3094305 width=24) (actual time=22443.253..36720.891 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874354.75 rows=32547716 width=16) (actual time=0.258..10934.625 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=509209.94..509209.94 rows=1426304 width=12) (actual time=22438.366..22438.368 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=138994.63..509209.94 rows=1426304 width=12) (actual time=1057.396..21936.368 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=80715.06..431960.32 rows=7226661 width=16) (actual time=691.971..19380.155 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..78908.39 rows=7226661 width=0) (actual time=626.571..626.572 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54578.62..54578.62 rows=296076 width=4) (actual time=364.297..364.298 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54578.62 rows=296076 width=4) (actual time=0.345..307.775 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 6.799 ms
 Execution Time: 37030.252 ms
(29 rows)

===== 4.sql jit=off =====
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2586636.55..2586636.56 rows=1 width=24) (actual time=40531.624..40531.628 rows=1 loops=1)
   ->  Sort  (cost=2586636.55..2586636.57 rows=5 width=24) (actual time=40531.623..40531.625 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2586636.48..2586636.53 rows=5 width=24) (actual time=40531.586..40531.589 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2210212.42..2583780.32 rows=571232 width=16) (actual time=16682.172..40414.027 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7814.08..277298.25 rows=571478 width=20) (actual time=132.956..20314.559 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7671.22 rows=571478 width=0) (actual time=75.045..75.045 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874354.75..1874354.75 rows=19995007 width=4) (actual time=16539.264..16539.265 rows=37929348 loops=1)
                           Buckets: 4194304  Batches: 16  Memory Usage: 116042kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874354.75 rows=19995007 width=4) (actual time=0.302..12168.240 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 4.976 ms
 Execution Time: 40534.578 ms
(22 rows)

===== 5.sql jit=off =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2397728.34..2397728.34 rows=1 width=58) (actual time=35427.937..35427.945 rows=1 loops=1)
   ->  Sort  (cost=2397728.34..2397728.40 rows=25 width=58) (actual time=35427.935..35427.942 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2396822.26..2397728.21 rows=25 width=58) (actual time=35403.163..35427.913 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2396822.26..2397003.39 rows=72451 width=38) (actual time=35397.021..35400.383 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=413630.21..2390973.76 rows=72451 width=38) (actual time=21362.890..35359.461 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=408914.21..2376615.82 rows=1836557 width=50) (actual time=21322.762..34903.868 rows=1815327 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..1724392.20 rows=59985020 width=20) (actual time=0.395..6675.883 rows=59986052 loops=1)
                                 ->  Hash  (cost=403172.49..403172.49 rows=459337 width=38) (actual time=21321.096..21321.100 rows=453399 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 35976kB
                                       ->  Hash Join  (cost=94604.32..403172.49 rows=459337 width=38) (actual time=714.238..21098.803 rows=453399 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=31397.44..326759.68 rows=2296683 width=8) (actual time=279.841..19832.017 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..30823.27 rows=2296683 width=0) (actual time=214.991..214.991 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Hash  (cost=59456.56..59456.56 rows=300026 width=38) (actual time=433.217..433.220 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                                   ->  Hash Join  (cost=2.51..59456.56 rows=300026 width=38) (actual time=1.180..365.684 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50828.30 rows=1500130 width=8) (actual time=0.481..200.249 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.682..0.684 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.670..0.676 rows=5 loops=1)
                                                                     Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.345..0.347 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.308..0.309 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.300..0.302 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=38.434..38.434 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.299..23.331 rows=100000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 9.940 ms
 Execution Time: 35429.786 ms
(44 rows)

===== 6.sql jit=off =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1500197.68..1500197.69 rows=1 width=32) (actual time=4094.059..4094.060 rows=1 loops=1)
   ->  Aggregate  (cost=1500197.68..1500197.69 rows=1 width=32) (actual time=4094.058..4094.058 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=297875.19..1494287.79 rows=1181976 width=12) (actual time=1231.493..3719.718 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..297579.70 rows=1181976 width=0) (actual time=1044.503..1044.503 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.853 ms
 Execution Time: 4096.271 ms
(10 rows)

===== 7.sql jit=off =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2511826.07..2511826.18 rows=1 width=116) (actual time=81631.494..81631.502 rows=1 loops=1)
   ->  GroupAggregate  (cost=2511826.07..2513018.62 rows=10044 width=116) (actual time=81631.493..81631.500 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2511826.07..2511974.91 rows=59537 width=96) (actual time=81623.082..81624.012 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1020392.23..2507104.34 rows=59537 width=96) (actual time=8142.602..81550.896 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=469253.05..1948162.46 rows=1430627 width=46) (actual time=2980.080..75827.997 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=465628.65..1862219.56 rows=18136594 width=24) (actual time=2950.288..71854.070 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..461094.51 rows=18136594 width=0) (actual time=2587.618..2587.618 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=29.750..29.752 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.492..28.249 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.278..18.596 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.203..0.203 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.195..0.197 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536136.48..536136.48 rows=1200216 width=30) (actual time=5153.655..5153.658 rows=1191175 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                           ->  Hash Join  (cost=56935.22..536136.48 rows=1200216 width=30) (actual time=365.425..4871.337 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..410939.01 rows=15002701 width=8) (actual time=0.033..1841.577 rows=15000000 loops=1)
                                 ->  Hash  (cost=55435.10..55435.10 rows=120010 width=30) (actual time=365.087..365.088 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55435.10 rows=120010 width=30) (actual time=0.518..338.625 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50828.30 rows=1500130 width=8) (actual time=0.480..198.412 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.023..0.024 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.016..0.019 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 9.335 ms
 Execution Time: 81636.212 ms
(45 rows)

===== 8.sql jit=off =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1951709.36..1951709.60 rows=1 width=64) (actual time=44318.024..44318.033 rows=1 loops=1)
   ->  GroupAggregate  (cost=1951709.36..1952281.60 rows=2406 width=64) (actual time=44318.023..44318.031 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=1951709.36..1951767.60 rows=23294 width=70) (actual time=44312.368..44312.835 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=499051.95..1950019.65 rows=23294 width=70) (actual time=19963.669..44283.561 rows=23842 loops=1)
                     ->  Hash Join  (cost=499051.80..1949337.81 rows=23294 width=20) (actual time=19963.642..44222.328 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=494585.80..1944809.80 rows=23624 width=20) (actual time=19929.010..44169.044 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1448548.92 rows=383808 width=20) (actual time=0.092..24018.451 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65961.68 rows=13305 width=4) (actual time=0.063..431.736 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..103.62 rows=29 width=24) (actual time=0.070..1.799 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=483042.22..483042.22 rows=923451 width=8) (actual time=19923.606..19923.611 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=126322.18..483042.22 rows=923451 width=8) (actual time=840.296..19635.047 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=63115.30..393286.12 rows=4617255 width=12) (actual time=459.907..17925.310 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..61960.99 rows=4617255 width=0) (actual time=396.324..396.324 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59456.56..59456.56 rows=300026 width=4) (actual time=379.239..379.242 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59456.56 rows=300026 width=4) (actual time=0.087..325.010 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50828.30 rows=1500130 width=8) (actual time=0.027..164.744 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.048..0.050 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.041..0.048 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.009..0.010 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.018..0.019 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=34.355..34.355 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.012..20.583 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.004..0.004 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 7.921 ms
 Execution Time: 44320.326 ms
(52 rows)

===== 9.sql jit=off =====
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1312778.54..1312778.58 rows=1 width=90) (actual time=439868.923..439868.930 rows=1 loops=1)
   ->  GroupAggregate  (cost=1312778.54..1312780.08 rows=44 width=90) (actual time=439868.922..439868.928 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=1312778.54..1312778.65 rows=44 width=81) (actual time=439856.854..439859.991 rows=11401 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Sort Method: external merge  Disk: 211200kB
               ->  Nested Loop  (cost=66467.89..1312777.34 rows=44 width=81) (actual time=449.406..434075.527 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 39009119
                     ->  Nested Loop  (cost=66467.89..1312760.11 rows=44 width=31) (actual time=449.372..421992.936 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=66467.46..1312500.40 rows=44 width=31) (actual time=449.053..332175.578 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=66467.17..1312250.37 rows=44 width=35) (actual time=449.034..317222.635 rows=3248192 loops=1)
                                       ->  Hash Join  (cost=66466.73..341855.24 rows=161622 width=18) (actual time=448.691..3805.146 rows=433248 loops=1)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..254387.96 rows=8000196 width=14) (actual time=0.295..1637.820 rows=8000000 loops=1)
                                             ->  Hash  (cost=65961.68..65961.68 rows=40404 width=4) (actual time=448.209..448.210 rows=108312 loops=1)
                                                   Buckets: 131072 (originally 65536)  Batches: 1 (originally 1)  Memory Usage: 4832kB
                                                   ->  Seq Scan on part  (cost=0.00..65961.68 rows=40404 width=4) (actual time=0.234..427.528 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..5.99 rows=1 width=29) (actual time=0.100..0.718 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..5.68 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..5.90 rows=1 width=8) (actual time=0.027..0.027 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.015..0.019 rows=25 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 24.319 ms
 Execution Time: 439888.980 ms
(31 rows)

