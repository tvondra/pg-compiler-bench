===== 10.sql jit=on =====
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2407943.03..2407943.08 rows=20 width=201) (actual time=25038.790..25038.797 rows=20 loops=1)
   ->  Sort  (cost=2407943.03..2409362.18 rows=567661 width=201) (actual time=24542.944..24542.949 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2252113.57..2392837.77 rows=567661 width=201) (actual time=19509.162..24243.385 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=2252113.57..2378646.25 rows=567661 width=181) (actual time=19509.132..22515.429 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 33kB  Peak Memory: 33kB
                     ->  Nested Loop  (cost=2252113.38..2353101.50 rows=567661 width=181) (actual time=19508.647..21695.221 rows=1145402 loops=1)
                           ->  Merge Join  (cost=2252113.24..2339170.21 rows=567661 width=159) (actual time=19508.611..20876.899 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..74798.04 rows=1500061 width=147) (actual time=0.022..667.238 rows=1499997 loops=1)
                                 ->  Sort  (cost=2252111.39..2253530.55 rows=567661 width=16) (actual time=19508.549..19678.497 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: quicksort  Memory: 113386kB
                                       ->  Hash Join  (cost=284595.41..2197858.13 rows=567661 width=16) (actual time=2211.101..18661.541 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1874409.10 rows=14801377 width=16) (actual time=0.032..13387.866 rows=14808183 loops=1)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 45177869
                                             ->  Hash  (cost=277405.02..277405.02 rows=575231 width=8) (actual time=2208.527..2208.528 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=7864.55..277405.02 rows=575231 width=8) (actual time=279.043..1959.662 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233137
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7720.75 rows=575231 width=0) (actual time=135.648..135.649 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..2.16 rows=1 width=30) (actual time=0.004..0.004 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.120 ms
 JIT:
   Functions: 38
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.263 ms, Inlining 65.518 ms, Optimization 275.818 ms, Emission 154.116 ms, Total 499.716 ms
 Execution Time: 25097.777 ms
(41 rows)

===== 11.sql jit=on =====
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=94746.38..94746.38 rows=1 width=36) (actual time=2702.703..2702.708 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44306.79..44306.80 rows=1 width=32) (actual time=986.375..986.378 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..41906.99 rows=319972 width=10) (actual time=1.700..728.204 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=1.684..14.199 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.018 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=1.667..12.978 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.009..1.009 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.08 rows=80 width=14) (actual time=0.009..0.155 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50439.58..50706.22 rows=106657 width=36) (actual time=2702.701..2702.703 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=45106.71..49906.29 rows=106657 width=36) (actual time=2702.635..2702.637 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 5  Memory Usage: 135217kB  Disk Usage: 752kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..41906.99 rows=319972 width=14) (actual time=1.792..868.310 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=1.754..15.827 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.029..0.034 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=1.717..14.512 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.047..1.047 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=18) (actual time=0.010..0.185 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.442 ms
 Execution Time: 2707.216 ms
(38 rows)

===== 12.sql jit=on =====
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3031424.23..3032274.02 rows=1 width=27) (actual time=28357.863..28357.867 rows=1 loops=1)
   ->  GroupAggregate  (cost=3031424.23..3037372.76 rows=7 width=27) (actual time=28005.163..28005.166 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3031424.23..3032167.79 rows=297423 width=27) (actual time=27936.172..27946.548 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2478020.57..3004385.27 rows=297423 width=27) (actual time=21252.184..27783.665 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410899.70 rows=14998770 width=20) (actual time=0.047..2923.413 rows=15000000 loops=1)
                     ->  Hash  (cost=2474302.78..2474302.78 rows=297423 width=15) (actual time=21250.930..21250.932 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474302.78 rows=297423 width=15) (actual time=0.407..21058.012 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.550 ms
 JIT:
   Functions: 19
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.562 ms, Inlining 56.346 ms, Optimization 192.165 ms, Emission 103.881 ms, Total 354.955 ms
 Execution Time: 28411.713 ms
(21 rows)

===== 13.sql jit=on =====
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1523641.19..1523641.20 rows=1 width=16) (actual time=24360.588..24360.592 rows=1 loops=1)
   ->  Sort  (cost=1523641.19..1523641.69 rows=200 width=16) (actual time=24147.814..24147.817 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1523638.19..1523640.19 rows=200 width=16) (actual time=24147.729..24147.744 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1371326.01..1501137.28 rows=1500061 width=12) (actual time=22858.689..23781.648 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 5  Memory Usage: 131121kB  Disk Usage: 27424kB
                     ->  Hash Right Join  (cost=57716.10..544689.22 rows=14695765 width=8) (actual time=696.601..15805.844 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448396.62 rows=14695765 width=8) (actual time=0.068..8198.131 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38965.34..38965.34 rows=1500061 width=4) (actual time=692.150..692.151 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38965.34 rows=1500061 width=4) (actual time=0.031..246.257 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.245 ms
 JIT:
   Functions: 25
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 3.047 ms, Inlining 57.277 ms, Optimization 129.659 ms, Emission 63.767 ms, Total 253.750 ms
 Execution Time: 24405.179 ms
(26 rows)

===== 14.sql jit=on =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1257309.77..1257309.79 rows=1 width=32) (actual time=6159.998..6160.001 rows=1 loops=1)
   ->  Aggregate  (cost=1257309.77..1257309.79 rows=1 width=32) (actual time=5916.525..5916.527 rows=1 loops=1)
         ->  Hash Join  (cost=120704.19..1242948.55 rows=820641 width=33) (actual time=1734.526..5076.746 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=21068.14..1119469.31 rows=820641 width=16) (actual time=580.022..2975.748 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20862.97 rows=820641 width=0) (actual time=296.840..296.841 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60962.47..60962.47 rows=2000047 width=25) (actual time=1149.997..1149.998 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 74141kB
                     ->  Seq Scan on part  (cost=0.00..60962.47 rows=2000047 width=25) (actual time=0.052..441.593 rows=2000000 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.835 ms
 JIT:
   Functions: 15
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.899 ms, Inlining 57.589 ms, Optimization 118.994 ms, Emission 66.636 ms, Total 245.117 ms
 Execution Time: 6191.157 ms
(19 rows)

===== 15.sql jit=on =====
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1242843.44..1244085.93 rows=99399 width=36) (actual time=8487.441..8565.579 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=56197.94..1220953.32 rows=2189012 width=16) (actual time=1152.991..5026.240 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..55650.68 rows=2189012 width=0) (actual time=691.615..691.615 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.039 ms
 JIT:
   Functions: 9
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.365 ms, Inlining 53.605 ms, Optimization 96.100 ms, Emission 51.236 ms, Total 202.306 ms
 Execution Time: 8598.372 ms
(15 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2489690.37..2489700.60 rows=1 width=103) (actual time=16630.545..16630.549 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1245328.41..1245328.42 rows=1 width=32) (actual time=8119.200..8119.201 rows=1 loops=1)
           ->  HashAggregate  (cost=1242843.44..1244085.93 rows=99399 width=36) (actual time=8030.848..8109.589 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=56197.94..1220953.32 rows=2189012 width=16) (actual time=1146.291..4800.965 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..55650.68 rows=2189012 width=0) (actual time=686.517..686.518 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1244361.95..1249445.99 rows=497 width=103) (actual time=16227.958..16227.960 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4826.88 rows=100000 width=71) (actual time=0.363..22.494 rows=69998 loops=1)
         ->  Sort  (cost=1244361.65..1244362.90 rows=497 width=36) (actual time=16199.147..16199.149 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1242843.44..1244339.39 rows=497 width=36) (actual time=16141.939..16199.133 rows=1 loops=1)
                     ->  HashAggregate  (cost=1242843.44..1244334.42 rows=497 width=36) (actual time=16141.936..16199.129 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=56197.94..1220953.32 rows=2189012 width=16) (actual time=1163.554..4782.684 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..55650.68 rows=2189012 width=0) (actual time=703.088..703.088 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.828 ms
 JIT:
   Functions: 30
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 3.783 ms, Inlining 14.514 ms, Optimization 251.515 ms, Emission 136.171 ms, Total 405.983 ms
 Execution Time: 16643.658 ms
(35 rows)

DROP VIEW
===== 16.sql jit=on =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=401798.72..401798.72 rows=1 width=44) (actual time=10926.147..10926.152 rows=1 loops=1)
   ->  Sort  (cost=401798.72..402180.33 rows=152644 width=44) (actual time=10906.983..10906.987 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=392213.44..401035.50 rows=152644 width=44) (actual time=10139.641..10893.122 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=392213.44..393672.57 rows=583649 width=40) (actual time=10139.564..10263.997 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 122929kB
                     ->  Hash Join  (cost=98080.35..336315.22 rows=583649 width=40) (actual time=1110.178..5630.186 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3468.96..231204.73 rows=3999650 width=8) (actual time=47.429..2919.276 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=1010 width=4) (actual time=3.954..46.685 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90963.18..90963.18 rows=291857 width=40) (actual time=1061.561..1061.561 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90963.18 rows=291857 width=40) (actual time=0.058..911.262 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.624 ms
 JIT:
   Functions: 32
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 3.716 ms, Inlining 0.000 ms, Optimization 0.973 ms, Emission 21.652 ms, Total 26.340 ms
 Execution Time: 10958.806 ms
(31 rows)

===== 17-flattened.sql jit=on =====
                                                           QUERY PLAN                                                           
--------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5567504.57..6179759.79 rows=1761437 width=36) (actual time=74298.016..110491.807 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
   ->  Seq Scan on lineitem  (cost=0.00..1724435.68 rows=59989368 width=9) (actual time=0.337..12884.281 rows=59986052 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.280 ms
 JIT:
   Functions: 11
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.038 ms, Inlining 70.422 ms, Optimization 99.384 ms, Emission 52.399 ms, Total 224.243 ms
 Execution Time: 110789.312 ms
(11 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=243464.62..243464.63 rows=1 width=32) (actual time=715.367..715.369 rows=1 loops=1)
   ->  Aggregate  (cost=243464.62..243464.63 rows=1 width=32) (actual time=697.623..697.625 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..243416.97 rows=19056 width=8) (actual time=1.508..695.827 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..85405.93 rows=1906 width=20) (actual time=1.482..601.690 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70962.71 rows=1906 width=4) (actual time=1.450..579.602 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.57 rows=1 width=16) (actual time=0.010..0.010 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..82.76 rows=11 width=17) (actual time=0.019..0.046 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.012 ms
 JIT:
   Functions: 20
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.417 ms, Inlining 0.000 ms, Optimization 3.851 ms, Emission 13.650 ms, Total 19.918 ms
 Execution Time: 717.892 ms
(21 rows)

DROP TABLE
===== 17.sql jit=on =====
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6411313.26..6411313.28 rows=1 width=32) (actual time=111105.152..111105.155 rows=1 loops=1)
   ->  Aggregate  (cost=6411313.26..6411313.28 rows=1 width=32) (actual time=110799.032..110799.035 rows=1 loops=1)
         ->  Nested Loop  (cost=5638491.54..6411271.30 rows=16783 width=8) (actual time=74086.005..110797.276 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5638491.10..6272984.48 rows=1679 width=40) (actual time=74085.964..110703.094 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5567504.57..6179759.79 rows=1761437 width=36) (actual time=73656.904..109927.271 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724435.68 rows=59989368 width=9) (actual time=0.330..12699.002 rows=59986052 loops=1)
                     ->  Hash  (cost=70962.71..70962.71 rows=1906 width=4) (actual time=425.791..425.792 rows=1996 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 87kB
                           ->  Seq Scan on part  (cost=0.00..70962.71 rows=1906 width=4) (actual time=0.551..424.431 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..82.23 rows=11 width=17) (actual time=0.021..0.046 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.874 ms
 JIT:
   Functions: 33
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.206 ms, Inlining 74.480 ms, Optimization 206.926 ms, Emission 112.185 ms, Total 397.797 ms
 Execution Time: 111322.429 ms
(26 rows)

===== 18.sql jit=on =====
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9939861.30..9939861.55 rows=100 width=71) (actual time=83592.570..83592.590 rows=99 loops=1)
   ->  Sort  (cost=9939861.30..9989847.68 rows=19994552 width=71) (actual time=83291.517..83291.528 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8574285.27..9175683.90 rows=19994552 width=71) (actual time=83288.662..83291.300 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 64  Batches: 1  Memory Usage: 12369kB
               ->  Hash Join  (cost=69655.69..6618568.15 rows=19994552 width=44) (actual time=2660.166..83287.122 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=77.32..6496503.93 rows=19994552 width=25) (actual time=1778.244..82404.540 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729787.03 rows=4999114 width=24) (actual time=1318.527..60580.229 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650420.99 rows=14998770 width=20) (actual time=0.359..4815.323 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929389.05 rows=4999114 width=4) (actual time=1174.721..54434.065 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404482.08 rows=59989368 width=9) (actual time=1.036..22864.061 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404482.08 rows=59989368 width=9) (actual time=0.028..16623.210 rows=59916431 loops=1)
                     ->  Hash  (cost=50827.61..50827.61 rows=1500061 width=23) (actual time=877.490..877.491 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50827.61 rows=1500061 width=23) (actual time=0.515..354.384 rows=1500000 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.681 ms
 JIT:
   Functions: 30
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 3.210 ms, Inlining 55.924 ms, Optimization 156.678 ms, Emission 88.167 ms, Total 303.980 ms
 Execution Time: 83653.425 ms
(30 rows)

===== 19.sql jit=on =====


 Limit  (cost=758299.67..758299.68 rows=1 width=32) (actual time=1804.408..1804.410 rows=1 loops=1)
   ->  Aggregate  (cost=758299.67..758299.68 rows=1 width=32) (actual time=1486.076..1486.077 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..758291.46 rows=1094 width=12) (actual time=3.825..1484.021 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125964.00 rows=4716 width=30) (actual time=0.397..697.720 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..134.07 rows=1 width=21) (actual time=0.147..0.163 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.420 ms
 JIT:
   Functions: 12
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.375 ms, Inlining 56.812 ms, Optimization 160.951 ms, Emission 100.266 ms, Total 320.404 ms
 Execution Time: 1831.340 ms
(17 rows)

===== 1.sql jit=on =====
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3951310.80..3951310.80 rows=1 width=236) (actual time=164287.603..164287.605 rows=1 loops=1)
   ->  Sort  (cost=3951310.80..3951310.81 rows=6 width=236) (actual time=163989.872..163989.873 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3951310.60..3951310.77 rows=6 width=236) (actual time=163989.216..163989.238 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874409.10 rows=59340043 width=25) (actual time=0.347..16848.712 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.122 ms
 JIT:
   Functions: 10
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.750 ms, Inlining 58.404 ms, Optimization 151.459 ms, Emission 87.575 ms, Total 299.188 ms
 Execution Time: 164342.547 ms
(17 rows)

===== 20-flattened.sql jit=on =====
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2090931.54..2251253.68 rows=4821021 width=40) (actual time=120324.005..134336.055 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
   ->  Bitmap Heap Scan on lineitem  (cost=231356.53..1491077.01 rows=9011899 width=13) (actual time=3334.435..103664.932 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..229103.55 rows=9011899 width=0) (actual time=2558.086..2558.087 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 3.964 ms
 JIT:
   Functions: 13
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.979 ms, Inlining 68.869 ms, Optimization 146.862 ms, Emission 79.485 ms, Total 298.194 ms
 Execution Time: 134688.718 ms
(15 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=58906.22..58906.22 rows=1 width=51) (actual time=6677.742..6677.745 rows=1 loops=1)
   ->  Sort  (cost=58906.22..58906.22 rows=1 width=51) (actual time=6677.740..6677.742 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..58906.21 rows=1 width=51) (actual time=11.594..6671.672 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=55) (actual time=3.312..21.358 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.299..0.306 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=59) (actual time=3.004..19.073 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.996..1.996 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..14.12 rows=1 width=8) (actual time=1.623..1.623 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..13.62 rows=1 width=16) (actual time=1.404..1.613 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=12) (actual time=0.021..1.045 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.013..0.013 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 12.200 ms
 Execution Time: 6679.680 ms
(33 rows)

DROP TABLE
===== 20.sql jit=on =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2413678.97..2413678.97 rows=1 width=51) (actual time=155962.752..155962.758 rows=1 loops=1)
   ->  Sort  (cost=2413678.97..2413678.97 rows=1 width=51) (actual time=155541.895..155541.900 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2157147.09..2413678.96 rows=1 width=51) (actual time=119643.407..155537.569 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183310388
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=55) (actual time=0.039..33.014 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.024..0.029 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=59) (actual time=0.009..24.245 rows=100000 loops=1)
               ->  Materialize  (cost=2157147.09..2409031.65 rows=3 width=8) (actual time=27.542..35.348 rows=44765 loops=4095)
                     ->  Nested Loop  (cost=2157147.09..2409031.64 rows=3 width=8) (actual time=112784.014..132986.375 rows=59002 loops=1)
                           ->  Hash Join  (cost=2157146.65..2378334.21 rows=48696 width=44) (actual time=112783.375..128716.853 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2090931.54..2251253.68 rows=4821021 width=40) (actual time=112274.271..126996.740 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=231356.53..1491077.01 rows=9011899 width=13) (actual time=3394.815..96081.853 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..229103.55 rows=9011899 width=0) (actual time=2617.702..2617.703 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65962.59..65962.59 rows=20202 width=4) (actual time=508.962..508.963 rows=21718 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1020kB
                                       ->  Seq Scan on part  (cost=0.00..65962.59 rows=20202 width=4) (actual time=0.379..498.006 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.071..0.071 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 9.732 ms
 JIT:
   Functions: 42
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 5.608 ms, Inlining 86.846 ms, Optimization 274.458 ms, Emission 147.227 ms, Total 514.139 ms
 Execution Time: 156056.076 ms
(42 rows)

===== 21.sql jit=on =====
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4271947.28..4271947.28 rows=1 width=34) (actual time=73874.103..73874.125 rows=100 loops=1)
   ->  Sort  (cost=4271947.28..4271947.28 rows=1 width=34) (actual time=73332.432..73332.445 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4271947.25..4271947.27 rows=1 width=34) (actual time=73317.236..73330.307 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4271947.25..4271947.25 rows=1 width=26) (actual time=73317.200..73321.823 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204932.37..4271947.24 rows=1 width=26) (actual time=26153.483..73116.642 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204931.80..4271939.70 rows=1 width=38) (actual time=26140.496..66446.389 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204931.37..4271932.38 rows=1 width=34) (actual time=26138.110..53185.443 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959848.96 rows=799858 width=34) (actual time=23.880..19570.125 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874409.10 rows=19996456 width=8) (actual time=0.340..13314.721 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=23.481..23.483 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=3.428..21.835 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.317..0.323 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=3.099..20.833 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=2.050..2.051 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874409.10..1874409.10 rows=19996456 width=8) (actual time=26098.940..26098.940 rows=37929348 loops=1)
                                             Buckets: 4194304  Batches: 16  Memory Usage: 125295kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874409.10 rows=19996456 width=8) (actual time=0.033..15077.914 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.097..0.097 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.099..0.099 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 14.859 ms
 JIT:
   Functions: 47
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.943 ms, Inlining 59.905 ms, Optimization 295.192 ms, Emission 186.182 ms, Total 546.222 ms
 Execution Time: 74088.705 ms
(51 rows)

===== 22.sql jit=on =====
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163261.94..163261.97 rows=1 width=72) (actual time=4185.942..4185.945 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75323.06..75323.07 rows=1 width=32) (actual time=1813.711..1813.712 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75203.60 rows=47781 width=6) (actual time=0.022..1731.612 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87938.88..88139.41 rows=7292 width=72) (actual time=4169.825..4169.826 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87938.88..87957.11 rows=7292 width=38) (actual time=4166.477..4167.083 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87471.02 rows=7292 width=38) (actual time=1813.818..4125.051 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75203.60 rows=17501 width=26) (actual time=1813.793..3171.766 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.28 rows=17 width=4) (actual time=0.004..0.004 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.502 ms
 JIT:
   Functions: 17
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.291 ms, Inlining 0.000 ms, Optimization 0.653 ms, Emission 15.198 ms, Total 18.142 ms
 Execution Time: 4212.237 ms
(25 rows)

===== 2-flattened.sql jit=on =====
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=207695.51..212173.79 rows=447828 width=36) (actual time=5412.567..6232.176 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 5  Memory Usage: 139313kB  Disk Usage: 15632kB
   ->  Nested Loop  (cost=42.10..199696.21 rows=1599860 width=10) (actual time=17.007..3940.491 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=16.981..89.169 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=15.305..15.339 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.047..0.062 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.610..0.610 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=15.237..15.240 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=1.598..13.707 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.919..0.919 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.010..0.173 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.417 ms
 JIT:
   Functions: 27
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 3.518 ms, Inlining 0.000 ms, Optimization 1.044 ms, Emission 18.616 ms, Total 23.179 ms
 Execution Time: 6310.287 ms
(27 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=524000.81..524000.82 rows=1 width=192) (actual time=6372.752..6372.773 rows=100 loops=1)
   ->  Sort  (cost=524000.81..524000.82 rows=1 width=192) (actual time=5874.412..5874.425 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Hash Join  (cost=265345.66..524000.80 rows=1 width=192) (actual time=4848.714..5868.992 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70962.71 rows=8785 width=30) (actual time=0.040..599.653 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=202287.76..202287.76 rows=1599860 width=172) (actual time=4847.606..4847.610 rows=1604080 loops=1)
                     Buckets: 1048576  Batches: 4  Memory Usage: 90233kB
                     ->  Nested Loop  (cost=2.00..202287.76 rows=1599860 width=172) (actual time=0.117..3374.513 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.091..81.961 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.037..0.040 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.049..72.502 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.009..26.896 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.024..0.026 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.005..0.011 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.009..0.148 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.007..0.007 rows=1 loops=12783)
                       Index Cond: (ps_partkey = part.p_partkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.471 ms
 JIT:
   Functions: 41
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.303 ms, Inlining 53.546 ms, Optimization 285.890 ms, Emission 158.507 ms, Total 502.245 ms
 Execution Time: 6377.507 ms
(36 rows)

DROP TABLE
===== 2.sql jit=on =====
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1760138.81..1760138.82 rows=1 width=192) (actual time=8778.645..8778.668 rows=100 loops=1)
   ->  Sort  (cost=1760138.81..1760138.82 rows=1 width=192) (actual time=8091.860..8091.874 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=503871.60..1760138.80 rows=1 width=192) (actual time=5663.357..8085.972 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..102914.37 rows=8785 width=30) (actual time=0.052..916.971 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=503859.45..511858.75 rows=1599860 width=172) (actual time=5663.066..6561.081 rows=1603828 loops=1)
                     ->  Sort  (cost=503859.45..507859.10 rows=1599860 width=172) (actual time=5663.061..6175.270 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293456kB
                           ->  Nested Loop  (cost=2.00..202287.76 rows=1599860 width=172) (actual time=0.080..3542.178 rows=1604080 loops=1)
                                 ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.059..81.402 rows=20051 loops=1)
                                       Join Filter: (nation.n_regionkey = region.r_regionkey)
                                       Rows Removed by Join Filter: 79949
                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.017..0.020 rows=1 loops=1)
                                             Filter: (r_name = 'AMERICA'::bpchar)
                                             Rows Removed by Filter: 4
                                       ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.039..71.947 rows=100000 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.004..23.660 rows=100000 loops=1)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.023..0.024 rows=25 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.005..0.010 rows=25 loops=1)
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.009..0.157 rows=80 loops=20051)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=162.40..162.41 rows=1 width=32) (actual time=0.050..0.050 rows=1 loops=6398)
                       ->  Nested Loop  (cost=0.86..162.39 rows=4 width=6) (actual time=0.029..0.047 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..161.10 rows=18 width=10) (actual time=0.018..0.043 rows=4 loops=6398)
                                   ->  Nested Loop  (cost=0.72..158.33 rows=18 width=10) (actual time=0.015..0.032 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.75 rows=18 width=10) (actual time=0.009..0.010 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 4.617 ms
 JIT:
   Functions: 57
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.092 ms, Inlining 59.395 ms, Optimization 400.908 ms, Emission 225.950 ms, Total 692.345 ms
 Execution Time: 8832.258 ms
(53 rows)

===== 3.sql jit=on =====
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2948478.99..2948479.01 rows=10 width=44) (actual time=43498.578..43498.591 rows=10 loops=1)
   ->  Sort  (cost=2948478.99..2956217.32 rows=3095333 width=44) (actual time=43062.366..43062.377 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2806624.86..2881589.95 rows=3095333 width=44) (actual time=42911.808..43013.681 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 8  Batches: 1  Memory Usage: 61457kB
               ->  Hash Join  (cost=526750.30..2553194.47 rows=3095333 width=24) (actual time=23822.768..42369.054 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874409.10 rows=32288462 width=16) (actual time=0.276..12692.827 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=508777.09..508777.09 rows=1437857 width=12) (actual time=23817.705..23817.714 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=138836.31..508777.09 rows=1437857 width=12) (actual time=1751.897..22947.403 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=80518.40..431536.78 rows=7208511 width=16) (actual time=1256.411..19607.543 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..78716.27 rows=7208511 width=0) (actual time=1091.754..1091.755 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54577.76..54577.76 rows=299212 width=4) (actual time=494.288..494.289 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54577.76 rows=299212 width=4) (actual time=0.379..388.038 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 7.321 ms
 JIT:
   Functions: 31
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 3.629 ms, Inlining 59.344 ms, Optimization 243.001 ms, Emission 133.517 ms, Total 439.492 ms
 Execution Time: 43573.405 ms
(33 rows)

===== 4.sql jit=on =====
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2585643.19..2585643.19 rows=1 width=24) (actual time=51018.535..51018.538 rows=1 loops=1)
   ->  Sort  (cost=2585643.19..2585643.20 rows=5 width=24) (actual time=50790.785..50790.788 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2585643.11..2585643.16 rows=5 width=24) (actual time=50790.156..50790.161 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2210102.46..2582854.49 rows=557725 width=16) (actual time=25372.758..50543.301 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7625.66..276904.33 rows=557778 width=20) (actual time=276.335..18837.760 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7486.22 rows=557778 width=0) (actual time=133.415..133.416 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874409.10..1874409.10 rows=19996456 width=4) (actual time=25086.289..25086.290 rows=37929348 loops=1)
                           Buckets: 4194304  Batches: 16  Memory Usage: 116042kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874409.10 rows=19996456 width=4) (actual time=0.439..14632.208 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 5.662 ms
 JIT:
   Functions: 19
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.143 ms, Inlining 52.825 ms, Optimization 114.263 ms, Emission 60.420 ms, Total 229.652 ms
 Execution Time: 51077.613 ms
(26 rows)

===== 5.sql jit=on =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2397549.97..2397549.97 rows=1 width=58) (actual time=43790.147..43790.156 rows=1 loops=1)
   ->  Sort  (cost=2397549.97..2397550.03 rows=25 width=58) (actual time=43179.991..43179.999 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2396633.67..2397549.84 rows=25 width=58) (actual time=43126.833..43179.929 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2396633.67..2396816.84 rows=73269 width=38) (actual time=43113.749..43119.310 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=413381.78..2390713.20 rows=73269 width=38) (actual time=21034.412..43041.158 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=408665.78..2376380.01 rows=1831843 width=50) (actual time=20966.731..42337.494 rows=1815327 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..1724435.68 rows=59989368 width=20) (actual time=0.233..10349.121 rows=59986052 loops=1)
                                 ->  Hash  (cost=402940.73..402940.73 rows=458004 width=38) (actual time=20965.140..20965.145 rows=453399 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 35976kB
                                       ->  Hash Join  (cost=94510.78..402940.73 rows=458004 width=38) (actual time=1247.762..20591.873 rows=453399 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=31305.16..326567.49 rows=2290022 width=8) (actual time=539.511..18827.265 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..30732.66 rows=2290022 width=0) (actual time=378.164..378.164 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Hash  (cost=59455.47..59455.47 rows=300012 width=38) (actual time=707.056..707.060 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                                   ->  Hash Join  (cost=2.51..59455.47 rows=300012 width=38) (actual time=1.480..575.155 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50827.61 rows=1500061 width=8) (actual time=0.451..302.613 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=1.012..1.015 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.998..1.007 rows=5 loops=1)
                                                                     Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.704..0.707 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.264..0.265 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.244..0.249 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=65.320..65.321 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.304..30.763 rows=100000 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 13.768 ms
 JIT:
   Functions: 56
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 5.698 ms, Inlining 58.565 ms, Optimization 357.636 ms, Emission 193.484 ms, Total 615.383 ms
 Execution Time: 43850.462 ms
(48 rows)

===== 6.sql jit=on =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1498815.96..1498815.97 rows=1 width=32) (actual time=7779.242..7779.244 rows=1 loops=1)
   ->  Aggregate  (cost=1498815.96..1498815.97 rows=1 width=32) (actual time=7612.179..7612.180 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=298037.58..1492959.69 rows=1171254 width=12) (actual time=3406.889..6814.539 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..297744.76 rows=1171254 width=0) (actual time=2955.568..2955.569 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.114 ms
 JIT:
   Functions: 6
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.025 ms, Inlining 53.962 ms, Optimization 72.343 ms, Emission 40.557 ms, Total 167.888 ms
 Execution Time: 7807.410 ms
(14 rows)

===== 7.sql jit=on =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2499539.98..2499540.10 rows=1 width=116) (actual time=93857.833..93857.849 rows=1 loops=1)
   ->  GroupAggregate  (cost=2499539.98..2500731.18 rows=10032 width=116) (actual time=93170.468..93170.482 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2499539.98..2499688.65 rows=59470 width=96) (actual time=93151.322..93152.720 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1013273.96..2494824.05 rows=59470 width=96) (actual time=13403.195..93035.126 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=1009649.56..2483405.76 rows=1429010 width=46) (actual time=13356.482..92291.720 rows=1448126 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=458572.41..1851053.69 rows=17862619 width=24) (actual time=5822.649..79616.981 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..454106.76 rows=17862619 width=0) (actual time=4989.753..4989.753 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=536078.37..536078.37 rows=1199902 width=30) (actual time=7529.319..7529.330 rows=1191175 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                                 ->  Hash Join  (cost=56934.25..536078.37 rows=1199902 width=30) (actual time=575.229..7008.536 rows=1191175 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..410899.70 rows=14998770 width=8) (actual time=0.041..2711.349 rows=15000000 loops=1)
                                       ->  Hash  (cost=55434.19..55434.19 rows=120005 width=30) (actual time=574.859..574.868 rows=119622 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                             ->  Hash Join  (cost=1.40..55434.19 rows=120005 width=30) (actual time=0.402..526.219 rows=119622 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50827.61 rows=1500061 width=8) (actual time=0.346..290.651 rows=1500000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.043..0.051 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.030..0.034 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=44.909..44.910 rows=7981 loops=1)
                           Buckets: 8192  Batches: 1  Memory Usage: 548kB
                           ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.780..41.867 rows=7981 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.439..25.710 rows=100000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.329..0.329 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.316..0.320 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.859 ms
 JIT:
   Functions: 60
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.389 ms, Inlining 55.831 ms, Optimization 410.490 ms, Emission 220.527 ms, Total 693.237 ms
 Execution Time: 93927.251 ms
(49 rows)

===== 8.sql jit=on =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2141543.53..2141543.78 rows=1 width=64) (actual time=42615.515..42615.523 rows=1 loops=1)
   ->  GroupAggregate  (cost=2141543.53..2142140.56 rows=2406 width=64) (actual time=41972.472..41972.480 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=2141543.53..2141604.52 rows=24396 width=70) (actual time=41959.901..41960.738 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=497876.12..2139765.75 rows=24396 width=70) (actual time=11547.657..41901.369 rows=23842 loops=1)
                     ->  Hash Join  (cost=497875.97..2139054.21 rows=24396 width=20) (actual time=11547.627..41791.666 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=493409.97..2134524.18 rows=24396 width=20) (actual time=11488.968..41705.310 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1639374.39 rows=399010 width=20) (actual time=0.562..29852.595 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65962.59 rows=13303 width=4) (actual time=0.319..611.954 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..117.93 rows=34 width=24) (actual time=0.107..2.229 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=481946.28..481946.28 rows=917060 width=8) (actual time=11482.116..11482.121 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=125889.36..481946.28 rows=917060 width=8) (actual time=1577.825..11067.010 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=62683.74..392375.21 rows=4585298 width=12) (actual time=861.657..8797.851 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..61537.42 rows=4585298 width=0) (actual time=700.547..700.547 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59455.47..59455.47 rows=300012 width=4) (actual time=715.006..715.010 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59455.47 rows=300012 width=4) (actual time=0.118..610.356 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50827.61 rows=1500061 width=8) (actual time=0.034..339.808 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.072..0.074 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.059..0.069 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.011..0.013 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.036..0.037 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.023..0.025 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=58.361..58.361 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.032..28.415 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.007..0.007 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 13.783 ms
 JIT:
   Functions: 67
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.785 ms, Inlining 67.645 ms, Optimization 371.548 ms, Emission 203.317 ms, Total 649.294 ms
 Execution Time: 42680.686 ms
(56 rows)

===== 9.sql jit=on =====
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2492986.30..2492986.34 rows=1 width=90) (actual time=93606.029..93606.036 rows=1 loops=1)
   ->  GroupAggregate  (cost=2492986.30..2492993.06 rows=193 width=90) (actual time=93116.237..93116.243 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=2492986.30..2492986.79 rows=193 width=81) (actual time=93089.024..93097.875 rows=11401 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Sort Method: external merge  Disk: 211208kB
               ->  Nested Loop  (cost=481159.55..2492978.98 rows=193 width=81) (actual time=5725.260..84526.920 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 39009119
                     ->  Nested Loop  (cost=481159.55..2492907.58 rows=193 width=31) (actual time=5725.219..75440.154 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=481159.12..2491768.36 rows=193 width=31) (actual time=5725.196..54781.556 rows=3248192 loops=1)
                                 ->  Hash Join  (cost=481158.83..2490671.64 rows=193 width=35) (actual time=5725.164..37104.768 rows=3248192 loops=1)
                                       Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                       ->  Hash Join  (cost=67730.30..1949638.40 rows=4241659 width=33) (actual time=759.192..25780.858 rows=3248192 loops=1)
                                             Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1724435.68 rows=59989368 width=29) (actual time=0.030..11141.174 rows=59986052 loops=1)
                                             ->  Hash  (cost=65962.59..65962.59 rows=141417 width=4) (actual time=758.569..758.570 rows=108312 loops=1)
                                                   Buckets: 262144  Batches: 1  Memory Usage: 5856kB
                                                   ->  Seq Scan on part  (cost=0.00..65962.59 rows=141417 width=4) (actual time=0.477..713.837 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                       ->  Hash  (cost=254379.01..254379.01 rows=7999301 width=14) (actual time=4956.929..4956.929 rows=8000000 loops=1)
                                             Buckets: 4194304  Batches: 4  Memory Usage: 126558kB
                                             ->  Seq Scan on partsupp  (cost=0.00..254379.01 rows=7999301 width=14) (actual time=0.505..1884.421 rows=8000000 loops=1)
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..5.68 rows=1 width=8) (actual time=0.005..0.005 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..5.90 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.014..0.019 rows=25 loops=1)
 Settings: max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 25.169 ms
 JIT:
   Functions: 45
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.854 ms, Inlining 67.428 ms, Optimization 270.415 ms, Emission 151.540 ms, Total 494.237 ms
 Execution Time: 93684.777 ms
(37 rows)

===== 10.sql jit=off =====
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2407943.03..2407943.08 rows=20 width=201) (actual time=34219.202..34219.209 rows=20 loops=1)
   ->  Sort  (cost=2407943.03..2409362.18 rows=567661 width=201) (actual time=34219.200..34219.205 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2252113.57..2392837.77 rows=567661 width=201) (actual time=28096.460..33917.162 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=2252113.57..2378646.25 rows=567661 width=181) (actual time=28096.411..31800.494 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 33kB  Peak Memory: 33kB
                     ->  Nested Loop  (cost=2252113.38..2353101.50 rows=567661 width=181) (actual time=28095.280..30959.271 rows=1145402 loops=1)
                           ->  Merge Join  (cost=2252113.24..2339170.21 rows=567661 width=159) (actual time=28095.240..29850.438 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..74798.04 rows=1500061 width=147) (actual time=0.016..690.531 rows=1499997 loops=1)
                                 ->  Sort  (cost=2252111.39..2253530.55 rows=567661 width=16) (actual time=28095.199..28272.403 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: quicksort  Memory: 113386kB
                                       ->  Hash Join  (cost=284595.41..2197858.13 rows=567661 width=16) (actual time=2179.063..27232.245 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1874409.10 rows=14801377 width=16) (actual time=0.021..21452.001 rows=14808183 loops=1)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 45177869
                                             ->  Hash  (cost=277405.02..277405.02 rows=575231 width=8) (actual time=2176.070..2176.071 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=7864.55..277405.02 rows=575231 width=8) (actual time=279.498..1921.042 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233137
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7720.75 rows=575231 width=0) (actual time=135.936..135.936 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..2.16 rows=1 width=30) (actual time=0.005..0.005 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.791 ms
 Execution Time: 34226.963 ms
(37 rows)

===== 11.sql jit=off =====
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=94746.38..94746.38 rows=1 width=36) (actual time=2718.419..2718.425 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44306.79..44306.80 rows=1 width=32) (actual time=987.605..987.608 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..41906.99 rows=319972 width=10) (actual time=1.701..729.159 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=1.683..14.318 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.019 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=1.667..13.091 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.015..1.015 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.08 rows=80 width=14) (actual time=0.010..0.156 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50439.58..50706.22 rows=106657 width=36) (actual time=2718.417..2718.419 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=45106.71..49906.29 rows=106657 width=36) (actual time=2718.347..2718.349 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 5  Memory Usage: 135217kB  Disk Usage: 752kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..41906.99 rows=319972 width=14) (actual time=1.782..882.870 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=1.748..16.182 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.028..0.034 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=1.712..14.854 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=1.045..1.046 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=18) (actual time=0.011..0.189 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.479 ms
 Execution Time: 2722.929 ms
(38 rows)

===== 12.sql jit=off =====
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3031424.23..3032274.02 rows=1 width=27) (actual time=39612.924..39612.928 rows=1 loops=1)
   ->  GroupAggregate  (cost=3031424.23..3037372.76 rows=7 width=27) (actual time=39612.923..39612.926 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3031424.23..3032167.79 rows=297423 width=27) (actual time=39495.478..39506.236 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2478020.57..3004385.27 rows=297423 width=27) (actual time=32886.000..39348.974 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410899.70 rows=14998770 width=20) (actual time=0.031..2329.099 rows=15000000 loops=1)
                     ->  Hash  (cost=2474302.78..2474302.78 rows=297423 width=15) (actual time=32884.783..32884.785 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474302.78 rows=297423 width=15) (actual time=0.761..32688.346 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.542 ms
 Execution Time: 39614.876 ms
(17 rows)

===== 13.sql jit=off =====
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1523641.19..1523641.20 rows=1 width=16) (actual time=32042.677..32042.681 rows=1 loops=1)
   ->  Sort  (cost=1523641.19..1523641.69 rows=200 width=16) (actual time=32042.675..32042.678 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1523638.19..1523640.19 rows=200 width=16) (actual time=32042.617..32042.633 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1371326.01..1501137.28 rows=1500061 width=12) (actual time=30467.597..31517.698 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 5  Memory Usage: 131121kB  Disk Usage: 27424kB
                     ->  Hash Right Join  (cost=57716.10..544689.22 rows=14695765 width=8) (actual time=690.975..20980.655 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448396.62 rows=14695765 width=8) (actual time=0.056..10404.285 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38965.34..38965.34 rows=1500061 width=4) (actual time=686.419..686.420 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38965.34 rows=1500061 width=4) (actual time=0.037..246.528 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.290 ms
 Execution Time: 32061.648 ms
(22 rows)

===== 14.sql jit=off =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1257309.77..1257309.79 rows=1 width=32) (actual time=6619.433..6619.437 rows=1 loops=1)
   ->  Aggregate  (cost=1257309.77..1257309.79 rows=1 width=32) (actual time=6619.431..6619.433 rows=1 loops=1)
         ->  Hash Join  (cost=120704.19..1242948.55 rows=820641 width=33) (actual time=1922.296..5608.941 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=21068.14..1119469.31 rows=820641 width=16) (actual time=584.809..3182.691 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20862.97 rows=820641 width=0) (actual time=300.297..300.297 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60962.47..60962.47 rows=2000047 width=25) (actual time=1332.909..1332.910 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 74141kB
                     ->  Seq Scan on part  (cost=0.00..60962.47 rows=2000047 width=25) (actual time=0.041..625.502 rows=2000000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.826 ms
 Execution Time: 6622.281 ms
(15 rows)

===== 15.sql jit=off =====
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1242843.44..1244085.93 rows=99399 width=36) (actual time=9005.750..9093.173 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=56197.94..1220953.32 rows=2189012 width=16) (actual time=1157.119..5073.479 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..55650.68 rows=2189012 width=0) (actual time=696.305..696.305 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.049 ms
 Execution Time: 9100.691 ms
(11 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2489690.37..2489700.60 rows=1 width=103) (actual time=17673.778..17673.783 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1245328.41..1245328.42 rows=1 width=32) (actual time=8838.683..8838.685 rows=1 loops=1)
           ->  HashAggregate  (cost=1242843.44..1244085.93 rows=99399 width=36) (actual time=8738.367..8823.182 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=56197.94..1220953.32 rows=2189012 width=16) (actual time=1137.941..4846.968 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..55650.68 rows=2189012 width=0) (actual time=678.249..678.249 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1244361.95..1249445.99 rows=497 width=103) (actual time=17673.776..17673.778 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4826.88 rows=100000 width=71) (actual time=0.333..22.819 rows=69998 loops=1)
         ->  Sort  (cost=1244361.65..1244362.90 rows=497 width=36) (actual time=17642.222..17642.223 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1242843.44..1244339.39 rows=497 width=36) (actual time=17580.421..17642.211 rows=1 loops=1)
                     ->  HashAggregate  (cost=1242843.44..1244334.42 rows=497 width=36) (actual time=17580.419..17642.208 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=56197.94..1220953.32 rows=2189012 width=16) (actual time=1122.830..4826.431 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..55650.68 rows=2189012 width=0) (actual time=663.593..663.593 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.840 ms
 Execution Time: 17681.197 ms
(31 rows)

DROP VIEW
===== 16.sql jit=off =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=401798.72..401798.72 rows=1 width=44) (actual time=11837.051..11837.055 rows=1 loops=1)
   ->  Sort  (cost=401798.72..402180.33 rows=152644 width=44) (actual time=11837.048..11837.052 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=392213.44..401035.50 rows=152644 width=44) (actual time=10886.449..11822.406 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=392213.44..393672.57 rows=583649 width=40) (actual time=10886.376..11011.022 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 122929kB
                     ->  Hash Join  (cost=98080.35..336315.22 rows=583649 width=40) (actual time=1372.158..6359.107 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3468.96..231204.73 rows=3999650 width=8) (actual time=49.746..3109.203 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=1010 width=4) (actual time=0.204..49.646 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90963.18..90963.18 rows=291857 width=40) (actual time=1321.242..1321.243 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90963.18 rows=291857 width=40) (actual time=0.057..1173.874 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.609 ms
 Execution Time: 11843.432 ms
(27 rows)

===== 17-flattened.sql jit=off =====
                                                           QUERY PLAN                                                           
--------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5567504.57..6179759.79 rows=1761437 width=36) (actual time=76404.099..122656.808 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
   ->  Seq Scan on lineitem  (cost=0.00..1724435.68 rows=59989368 width=9) (actual time=0.264..12486.414 rows=59986052 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 0.776 ms
 Execution Time: 122844.341 ms
(7 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=243464.62..243464.63 rows=1 width=32) (actual time=826.651..826.653 rows=1 loops=1)
   ->  Aggregate  (cost=243464.62..243464.63 rows=1 width=32) (actual time=826.649..826.651 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..243416.97 rows=19056 width=8) (actual time=1.200..824.504 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..85405.93 rows=1906 width=21) (actual time=1.178..724.776 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70962.71 rows=1906 width=4) (actual time=1.160..702.389 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.57 rows=1 width=17) (actual time=0.010..0.010 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..82.76 rows=11 width=17) (actual time=0.020..0.048 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.844 ms
 Execution Time: 826.707 ms
(17 rows)

DROP TABLE
===== 17.sql jit=off =====
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6411313.26..6411313.28 rows=1 width=32) (actual time=124487.377..124487.381 rows=1 loops=1)
   ->  Aggregate  (cost=6411313.26..6411313.28 rows=1 width=32) (actual time=124487.374..124487.377 rows=1 loops=1)
         ->  Nested Loop  (cost=5638491.54..6411271.30 rows=16783 width=8) (actual time=77936.724..124485.212 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5638491.10..6272984.48 rows=1679 width=40) (actual time=77936.670..124382.486 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5567504.57..6179759.79 rows=1761437 width=36) (actual time=77224.625..123305.790 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 8  Batches: 9  Memory Usage: 135249kB  Disk Usage: 1846896kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724435.68 rows=59989368 width=9) (actual time=0.304..12843.331 rows=59986052 loops=1)
                     ->  Hash  (cost=70962.71..70962.71 rows=1906 width=4) (actual time=708.628..708.629 rows=1996 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 87kB
                           ->  Seq Scan on part  (cost=0.00..70962.71 rows=1906 width=4) (actual time=0.520..706.575 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..82.23 rows=11 width=17) (actual time=0.022..0.049 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.922 ms
 Execution Time: 124585.126 ms
(22 rows)

===== 18.sql jit=off =====
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9939861.30..9939861.55 rows=100 width=71) (actual time=94686.169..94686.189 rows=99 loops=1)
   ->  Sort  (cost=9939861.30..9989847.68 rows=19994552 width=71) (actual time=94686.167..94686.178 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8574285.27..9175683.90 rows=19994552 width=71) (actual time=94683.174..94685.932 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 64  Batches: 1  Memory Usage: 12369kB
               ->  Hash Join  (cost=69655.69..6618568.15 rows=19994552 width=44) (actual time=3051.289..94681.464 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=77.32..6496503.93 rows=19994552 width=25) (actual time=2049.342..93678.648 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729787.03 rows=4999114 width=24) (actual time=1538.223..69575.038 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650420.99 rows=14998770 width=20) (actual time=0.347..4828.496 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929389.05 rows=4999114 width=4) (actual time=1378.145..62807.881 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404482.08 rows=59989368 width=9) (actual time=0.774..23497.162 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404482.08 rows=59989368 width=9) (actual time=0.041..16575.747 rows=59916431 loops=1)
                     ->  Hash  (cost=50827.61..50827.61 rows=1500061 width=23) (actual time=997.549..997.550 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50827.61 rows=1500061 width=23) (actual time=0.487..449.324 rows=1500000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 10.765 ms
 Execution Time: 94691.343 ms
(26 rows)

===== 19.sql jit=off =====


 Limit  (cost=758299.67..758299.68 rows=1 width=32) (actual time=2014.414..2014.415 rows=1 loops=1)
   ->  Aggregate  (cost=758299.67..758299.68 rows=1 width=32) (actual time=2014.411..2014.412 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..758291.46 rows=1094 width=12) (actual time=5.116..2011.980 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125964.00 rows=4716 width=30) (actual time=0.576..1187.408 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..134.07 rows=1 width=21) (actual time=0.155..0.171 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.441 ms
 Execution Time: 2014.526 ms
(13 rows)

===== 1.sql jit=off =====
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3951310.80..3951310.80 rows=1 width=236) (actual time=214294.941..214294.943 rows=1 loops=1)
   ->  Sort  (cost=3951310.80..3951310.81 rows=6 width=236) (actual time=214294.939..214294.940 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3951310.60..3951310.77 rows=6 width=236) (actual time=214294.211..214294.258 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874409.10 rows=59340043 width=25) (actual time=0.040..27353.819 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.403 ms
 Execution Time: 214295.089 ms
(13 rows)

===== 20-flattened.sql jit=off =====
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2090931.54..2251253.68 rows=4821021 width=40) (actual time=110592.412..126416.085 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
   ->  Bitmap Heap Scan on lineitem  (cost=231356.53..1491077.01 rows=9011899 width=13) (actual time=3375.844..94394.861 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..229103.55 rows=9011899 width=0) (actual time=2597.494..2597.494 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 3.660 ms
 Execution Time: 126665.849 ms
(11 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=58906.22..58906.22 rows=1 width=51) (actual time=8723.525..8723.528 rows=1 loops=1)
   ->  Sort  (cost=58906.22..58906.22 rows=1 width=51) (actual time=8723.523..8723.525 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..58906.21 rows=1 width=51) (actual time=12.405..8716.884 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=55) (actual time=3.372..22.595 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.323..0.331 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=59) (actual time=3.040..20.229 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=2.003..2.004 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..14.12 rows=1 width=8) (actual time=2.122..2.122 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..13.62 rows=1 width=16) (actual time=1.832..2.112 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=12) (actual time=0.021..1.502 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.014..0.014 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 13.349 ms
 Execution Time: 8725.542 ms
(33 rows)

DROP TABLE
===== 20.sql jit=off =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2413678.97..2413678.97 rows=1 width=51) (actual time=174763.526..174763.532 rows=1 loops=1)
   ->  Sort  (cost=2413678.97..2413678.97 rows=1 width=51) (actual time=174763.523..174763.528 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2157147.09..2413678.96 rows=1 width=51) (actual time=126387.957..174759.428 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183310388
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=55) (actual time=0.043..43.222 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.024..0.030 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=59) (actual time=0.013..25.361 rows=100000 loops=1)
               ->  Materialize  (cost=2157147.09..2409031.65 rows=3 width=8) (actual time=29.116..37.289 rows=44765 loops=4095)
                     ->  Nested Loop  (cost=2157147.09..2409031.64 rows=3 width=8) (actual time=119230.707..141108.228 rows=59002 loops=1)
                           ->  Hash Join  (cost=2157146.65..2378334.21 rows=48696 width=44) (actual time=119229.892..137029.564 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2090931.54..2251253.68 rows=4821021 width=40) (actual time=118609.750..135094.879 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 16  Batches: 81  Memory Usage: 135313kB  Disk Usage: 342848kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=231356.53..1491077.01 rows=9011899 width=13) (actual time=3345.760..101917.482 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..229103.55 rows=9011899 width=0) (actual time=2568.290..2568.290 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65962.59..65962.59 rows=20202 width=4) (actual time=619.989..619.991 rows=21718 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1020kB
                                       ->  Seq Scan on part  (cost=0.00..65962.59 rows=20202 width=4) (actual time=0.233..608.983 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.067..0.067 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 7.010 ms
 Execution Time: 174794.093 ms
(38 rows)

===== 21.sql jit=off =====
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4271947.28..4271947.28 rows=1 width=34) (actual time=94434.524..94434.545 rows=100 loops=1)
   ->  Sort  (cost=4271947.28..4271947.28 rows=1 width=34) (actual time=94434.522..94434.534 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4271947.25..4271947.27 rows=1 width=34) (actual time=94416.676..94432.347 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4271947.25..4271947.25 rows=1 width=26) (actual time=94416.658..94421.498 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204932.37..4271947.24 rows=1 width=26) (actual time=38187.739..94217.781 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204931.80..4271939.70 rows=1 width=38) (actual time=38168.071..88618.699 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204931.37..4271932.38 rows=1 width=34) (actual time=38165.188..77313.411 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959848.96 rows=799858 width=34) (actual time=24.256..31203.153 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874409.10 rows=19996456 width=8) (actual time=0.245..24051.641 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=23.925..23.927 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=3.346..22.181 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.226..0.236 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=3.108..20.879 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=2.134..2.135 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874409.10..1874409.10 rows=19996456 width=8) (actual time=38126.085..38126.086 rows=37929348 loops=1)
                                             Buckets: 4194304  Batches: 16  Memory Usage: 125295kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874409.10 rows=19996456 width=8) (actual time=0.022..26248.114 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.083..0.083 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.082..0.083 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 14.634 ms
 Execution Time: 94435.271 ms
(47 rows)

===== 22.sql jit=off =====
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163261.94..163261.97 rows=1 width=72) (actual time=4586.734..4586.737 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75323.06..75323.07 rows=1 width=32) (actual time=2036.013..2036.014 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75203.60 rows=47781 width=6) (actual time=0.018..1936.596 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87938.88..88139.41 rows=7292 width=72) (actual time=4586.732..4586.733 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87938.88..87957.11 rows=7292 width=38) (actual time=4582.449..4583.034 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87471.02 rows=7292 width=38) (actual time=2036.127..4540.766 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75203.60 rows=17501 width=26) (actual time=2036.101..3573.997 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.28 rows=17 width=4) (actual time=0.004..0.004 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.493 ms
 Execution Time: 4587.032 ms
(21 rows)

===== 2-flattened.sql jit=off =====
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=207695.51..212173.79 rows=447828 width=36) (actual time=5542.212..6403.955 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 5  Memory Usage: 139313kB  Disk Usage: 15632kB
   ->  Nested Loop  (cost=42.10..199696.21 rows=1599860 width=10) (actual time=1.808..4005.521 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=1.782..74.147 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=0.081..0.116 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.043..0.055 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=1.602..13.578 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.929..0.929 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.010..0.173 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.020 ms
 Execution Time: 6455.306 ms
(23 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=524000.81..524000.82 rows=1 width=192) (actual time=6463.669..6463.690 rows=100 loops=1)
   ->  Sort  (cost=524000.81..524000.82 rows=1 width=192) (actual time=6463.666..6463.679 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Hash Join  (cost=265345.66..524000.80 rows=1 width=192) (actual time=5220.546..6458.293 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70962.71 rows=8785 width=30) (actual time=0.030..821.038 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=202287.76..202287.76 rows=1599860 width=172) (actual time=5219.452..5219.455 rows=1604080 loops=1)
                     Buckets: 1048576  Batches: 4  Memory Usage: 90233kB
                     ->  Nested Loop  (cost=2.00..202287.76 rows=1599860 width=172) (actual time=0.105..3689.961 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.080..125.023 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.028..0.031 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.048..107.911 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.008..26.483 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.025..0.026 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.005..0.012 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.009..0.149 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.007..0.007 rows=1 loops=12783)
                       Index Cond: (ps_partkey = part.p_partkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 2.386 ms
 Execution Time: 6464.057 ms
(32 rows)

DROP TABLE
===== 2.sql jit=off =====
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1760138.81..1760138.82 rows=1 width=192) (actual time=8734.041..8734.062 rows=100 loops=1)
   ->  Sort  (cost=1760138.81..1760138.82 rows=1 width=192) (actual time=8734.038..8734.051 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=503871.60..1760138.80 rows=1 width=192) (actual time=5884.018..8728.040 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..102914.37 rows=8785 width=30) (actual time=0.051..1169.087 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=503859.45..511858.75 rows=1599860 width=172) (actual time=5883.754..6781.374 rows=1603828 loops=1)
                     ->  Sort  (cost=503859.45..507859.10 rows=1599860 width=172) (actual time=5883.748..6394.364 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293456kB
                           ->  Nested Loop  (cost=2.00..202287.76 rows=1599860 width=172) (actual time=0.087..3844.393 rows=1604080 loops=1)
                                 ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.067..125.189 rows=20051 loops=1)
                                       Join Filter: (nation.n_regionkey = region.r_regionkey)
                                       Rows Removed by Join Filter: 79949
                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.014..0.017 rows=1 loops=1)
                                             Filter: (r_name = 'AMERICA'::bpchar)
                                             Rows Removed by Filter: 4
                                       ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.050..108.197 rows=100000 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.003..23.723 rows=100000 loops=1)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.033..0.034 rows=25 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.012..0.019 rows=25 loops=1)
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.009..0.158 rows=80 loops=20051)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=162.40..162.41 rows=1 width=32) (actual time=0.053..0.053 rows=1 loops=6398)
                       ->  Nested Loop  (cost=0.86..162.39 rows=4 width=6) (actual time=0.030..0.049 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..161.10 rows=18 width=10) (actual time=0.018..0.045 rows=4 loops=6398)
                                   ->  Nested Loop  (cost=0.72..158.33 rows=18 width=10) (actual time=0.015..0.033 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.75 rows=18 width=10) (actual time=0.009..0.010 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 4.562 ms
 Execution Time: 8774.025 ms
(49 rows)

===== 3.sql jit=off =====
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2948478.99..2948479.01 rows=10 width=44) (actual time=56578.376..56578.383 rows=10 loops=1)
   ->  Sort  (cost=2948478.99..2956217.32 rows=3095333 width=44) (actual time=56578.374..56578.379 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2806624.86..2881589.95 rows=3095333 width=44) (actual time=56424.683..56529.461 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 8  Batches: 1  Memory Usage: 61457kB
               ->  Hash Join  (cost=526750.30..2553194.47 rows=3095333 width=24) (actual time=27910.840..55827.060 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874409.10 rows=32288462 width=16) (actual time=0.338..21613.194 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=508777.09..508777.09 rows=1437857 width=12) (actual time=27905.799..27905.802 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=138836.31..508777.09 rows=1437857 width=12) (actual time=1929.847..26981.333 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=80518.40..431536.78 rows=7208511 width=16) (actual time=1254.210..22418.819 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..78716.27 rows=7208511 width=0) (actual time=1089.643..1089.643 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54577.76..54577.76 rows=299212 width=4) (actual time=674.480..674.481 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54577.76 rows=299212 width=4) (actual time=0.209..569.080 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 7.753 ms
 Execution Time: 56585.165 ms
(29 rows)

===== 4.sql jit=off =====
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2585643.19..2585643.19 rows=1 width=24) (actual time=64893.532..64893.535 rows=1 loops=1)
   ->  Sort  (cost=2585643.19..2585643.20 rows=5 width=24) (actual time=64893.530..64893.532 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2585643.11..2585643.16 rows=5 width=24) (actual time=64892.921..64892.926 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2210102.46..2582854.49 rows=557725 width=16) (actual time=36494.957..64576.489 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7625.66..276904.33 rows=557778 width=20) (actual time=277.170..21909.141 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7486.22 rows=557778 width=0) (actual time=133.343..133.343 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874409.10..1874409.10 rows=19996456 width=4) (actual time=36207.534..36207.535 rows=37929348 loops=1)
                           Buckets: 4194304  Batches: 16  Memory Usage: 116042kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874409.10 rows=19996456 width=4) (actual time=0.479..25708.598 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 6.939 ms
 Execution Time: 64896.519 ms
(22 rows)

===== 5.sql jit=off =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2397549.97..2397549.97 rows=1 width=58) (actual time=49121.723..49121.732 rows=1 loops=1)
   ->  Sort  (cost=2397549.97..2397550.03 rows=25 width=58) (actual time=49121.721..49121.729 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2396633.67..2397549.84 rows=25 width=58) (actual time=49055.515..49121.687 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2396633.67..2396816.84 rows=73269 width=38) (actual time=49039.149..49045.237 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=413381.78..2390713.20 rows=73269 width=38) (actual time=24190.303..48966.686 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=408665.78..2376380.01 rows=1831843 width=50) (actual time=24112.455..48217.357 rows=1815327 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..1724435.68 rows=59989368 width=20) (actual time=0.452..10305.012 rows=59986052 loops=1)
                                 ->  Hash  (cost=402940.73..402940.73 rows=458004 width=38) (actual time=24110.706..24110.711 rows=453399 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 35976kB
                                       ->  Hash Join  (cost=94510.78..402940.73 rows=458004 width=38) (actual time=1415.676..23717.962 rows=453399 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=31305.16..326567.49 rows=2290022 width=8) (actual time=538.435..21417.974 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..30732.66 rows=2290022 width=0) (actual time=377.236..377.237 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Hash  (cost=59455.47..59455.47 rows=300012 width=38) (actual time=876.058..876.061 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                                   ->  Hash Join  (cost=2.51..59455.47 rows=300012 width=38) (actual time=0.899..740.584 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50827.61 rows=1500061 width=8) (actual time=0.354..305.530 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.521..0.523 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.502..0.513 rows=5 loops=1)
                                                                     Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.302..0.305 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.181..0.182 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.171..0.174 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=74.972..74.972 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.276..38.618 rows=100000 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 15.740 ms
 Execution Time: 49123.688 ms
(44 rows)

===== 6.sql jit=off =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1498815.96..1498815.97 rows=1 width=32) (actual time=7899.553..7899.555 rows=1 loops=1)
   ->  Aggregate  (cost=1498815.96..1498815.97 rows=1 width=32) (actual time=7899.551..7899.552 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=298037.58..1492959.69 rows=1171254 width=12) (actual time=3402.017..6859.332 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..297744.76 rows=1171254 width=0) (actual time=2949.417..2949.417 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 1.115 ms
 Execution Time: 7901.959 ms
(10 rows)

===== 7.sql jit=off =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2499539.98..2499540.10 rows=1 width=116) (actual time=90200.838..90200.847 rows=1 loops=1)
   ->  GroupAggregate  (cost=2499539.98..2500731.18 rows=10032 width=116) (actual time=90200.836..90200.844 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2499539.98..2499688.65 rows=59470 width=96) (actual time=90177.018..90178.450 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1013273.96..2494824.05 rows=59470 width=96) (actual time=14511.471..90062.573 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=1009649.56..2483405.76 rows=1429010 width=46) (actual time=14456.562..89257.565 rows=1448126 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=458572.41..1851053.69 rows=17862619 width=24) (actual time=5767.708..73844.690 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..454106.76 rows=17862619 width=0) (actual time=4934.770..4934.771 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=536078.37..536078.37 rows=1199902 width=30) (actual time=8684.289..8684.292 rows=1191175 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                                 ->  Hash Join  (cost=56934.25..536078.37 rows=1199902 width=30) (actual time=708.449..8149.771 rows=1191175 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..410899.70 rows=14998770 width=8) (actual time=0.041..2762.645 rows=15000000 loops=1)
                                       ->  Hash  (cost=55434.19..55434.19 rows=120005 width=30) (actual time=708.101..708.103 rows=119622 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                             ->  Hash Join  (cost=1.40..55434.19 rows=120005 width=30) (actual time=0.351..658.390 rows=119622 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50827.61 rows=1500061 width=8) (actual time=0.294..300.228 rows=1500000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.037..0.038 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.023..0.029 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=53.619..53.620 rows=7981 loops=1)
                           Buckets: 8192  Batches: 1  Memory Usage: 548kB
                           ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.457..50.501 rows=7981 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.268..26.285 rows=100000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.177..0.177 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.165..0.169 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 14.722 ms
 Execution Time: 90205.964 ms
(45 rows)

===== 8.sql jit=off =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2141543.53..2141543.78 rows=1 width=64) (actual time=42897.524..42897.533 rows=1 loops=1)
   ->  GroupAggregate  (cost=2141543.53..2142140.56 rows=2406 width=64) (actual time=42897.521..42897.529 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=2141543.53..2141604.52 rows=24396 width=70) (actual time=42881.091..42881.952 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=497876.12..2139765.75 rows=24396 width=70) (actual time=12724.224..42825.490 rows=23842 loops=1)
                     ->  Hash Join  (cost=497875.97..2139054.21 rows=24396 width=20) (actual time=12724.193..42704.600 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=493409.97..2134524.18 rows=24396 width=20) (actual time=12656.625..42602.410 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1639374.39 rows=399010 width=20) (actual time=0.435..29577.829 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65962.59 rows=13303 width=4) (actual time=0.391..820.082 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..117.93 rows=34 width=24) (actual time=0.102..2.182 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=481946.28..481946.28 rows=917060 width=8) (actual time=12650.048..12650.053 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=125889.36..481946.28 rows=917060 width=8) (actual time=1838.051..12225.374 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=62683.74..392375.21 rows=4585298 width=12) (actual time=861.339..9238.397 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..61537.42 rows=4585298 width=0) (actual time=700.198..700.198 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59455.47..59455.47 rows=300012 width=4) (actual time=975.569..975.573 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59455.47 rows=300012 width=4) (actual time=0.439..872.238 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50827.61 rows=1500061 width=8) (actual time=0.343..455.772 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.076..0.078 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.057..0.069 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.013..0.016 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.029..0.031 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.017..0.019 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=67.285..67.285 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.015..36.036 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.008..0.008 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 12.071 ms
 Execution Time: 42899.950 ms
(52 rows)

===== 9.sql jit=off =====
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2492986.30..2492986.34 rows=1 width=90) (actual time=104985.067..104985.074 rows=1 loops=1)
   ->  GroupAggregate  (cost=2492986.30..2492993.06 rows=193 width=90) (actual time=104985.065..104985.071 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=2492986.30..2492986.79 rows=193 width=81) (actual time=104952.939..104961.929 rows=11401 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Sort Method: external merge  Disk: 211208kB
               ->  Nested Loop  (cost=481159.55..2492978.98 rows=193 width=81) (actual time=6769.150..96329.446 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 39009119
                     ->  Nested Loop  (cost=481159.55..2492907.58 rows=193 width=31) (actual time=6769.105..83411.025 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=481159.12..2491768.36 rows=193 width=31) (actual time=6769.084..61846.586 rows=3248192 loops=1)
                                 ->  Hash Join  (cost=481158.83..2490671.64 rows=193 width=35) (actual time=6769.051..43257.018 rows=3248192 loops=1)
                                       Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                       ->  Hash Join  (cost=67730.30..1949638.40 rows=4241659 width=33) (actual time=904.683..29956.345 rows=3248192 loops=1)
                                             Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1724435.68 rows=59989368 width=29) (actual time=0.289..11227.818 rows=59986052 loops=1)
                                             ->  Hash  (cost=65962.59..65962.59 rows=141417 width=4) (actual time=903.821..903.822 rows=108312 loops=1)
                                                   Buckets: 262144  Batches: 1  Memory Usage: 5856kB
                                                   ->  Seq Scan on part  (cost=0.00..65962.59 rows=141417 width=4) (actual time=0.302..858.353 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                       ->  Hash  (cost=254379.01..254379.01 rows=7999301 width=14) (actual time=5855.638..5855.639 rows=8000000 loops=1)
                                             Buckets: 4194304  Batches: 4  Memory Usage: 126558kB
                                             ->  Seq Scan on partsupp  (cost=0.00..254379.01 rows=7999301 width=14) (actual time=0.438..2575.462 rows=8000000 loops=1)
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..5.68 rows=1 width=8) (actual time=0.005..0.005 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..5.90 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.013..0.019 rows=25 loops=1)
 Settings: jit = 'off', max_parallel_workers_per_gather = '0', work_mem = '128MB'
 Planning Time: 28.645 ms
 Execution Time: 105008.434 ms
(33 rows)

