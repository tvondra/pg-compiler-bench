checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
checking which template to use... linux
checking whether NLS is wanted... no
checking for default port number... 5432
checking for block size... 8kB
checking for segment size... 1GB
checking for WAL block size... 8kB
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether clang accepts -g... yes
checking for clang option to accept ISO C89... none needed
checking for clang option to accept ISO C99... none needed
checking for g++... g++
checking whether we are using the GNU C++ compiler... yes
checking whether g++ accepts -g... yes
checking for gawk... gawk
checking for llvm-config... /usr/lib/llvm/12/bin/llvm-config
checking for clang... /usr/lib/llvm/12/bin/clang
checking whether clang supports -Wdeclaration-after-statement, for CFLAGS... yes
checking whether clang supports -Werror=vla, for CFLAGS... yes
checking whether clang supports -Werror=unguarded-availability-new, for CFLAGS... yes
checking whether g++ supports -Werror=unguarded-availability-new, for CXXFLAGS... no
checking whether clang supports -Wendif-labels, for CFLAGS... yes
checking whether g++ supports -Wendif-labels, for CXXFLAGS... yes
checking whether clang supports -Wmissing-format-attribute, for CFLAGS... yes
checking whether g++ supports -Wmissing-format-attribute, for CXXFLAGS... yes
checking whether clang supports -Wimplicit-fallthrough=3, for CFLAGS... no
checking whether g++ supports -Wimplicit-fallthrough=3, for CXXFLAGS... yes
checking whether clang supports -Wcast-function-type, for CFLAGS... no
checking whether g++ supports -Wcast-function-type, for CXXFLAGS... yes
checking whether clang supports -Wformat-security, for CFLAGS... yes
checking whether g++ supports -Wformat-security, for CXXFLAGS... yes
checking whether clang supports -fno-strict-aliasing, for CFLAGS... yes
checking whether g++ supports -fno-strict-aliasing, for CXXFLAGS... yes
checking whether clang supports -fwrapv, for CFLAGS... yes
checking whether g++ supports -fwrapv, for CXXFLAGS... yes
checking whether clang supports -fexcess-precision=standard, for CFLAGS... no
checking whether g++ supports -fexcess-precision=standard, for CXXFLAGS... no
checking whether clang supports -funroll-loops, for CFLAGS_UNROLL_LOOPS... yes
checking whether clang supports -ftree-vectorize, for CFLAGS_VECTORIZE... yes
checking whether clang supports -Wunused-command-line-argument, for NOT_THE_CFLAGS... yes
checking whether clang supports -Wformat-truncation, for NOT_THE_CFLAGS... no
checking whether clang supports -Wstringop-truncation, for NOT_THE_CFLAGS... no
checking whether /usr/lib/llvm/12/bin/clang supports -fno-strict-aliasing, for BITCODE_CFLAGS... yes
checking whether /usr/lib/llvm/12/bin/clang -xc++ supports -fno-strict-aliasing, for BITCODE_CXXFLAGS... yes
checking whether /usr/lib/llvm/12/bin/clang supports -fwrapv, for BITCODE_CFLAGS... yes
checking whether /usr/lib/llvm/12/bin/clang -xc++ supports -fwrapv, for BITCODE_CXXFLAGS... yes
checking whether /usr/lib/llvm/12/bin/clang supports -fexcess-precision=standard, for BITCODE_CFLAGS... no
checking whether /usr/lib/llvm/12/bin/clang -xc++ supports -fexcess-precision=standard, for BITCODE_CXXFLAGS... no
checking whether the C compiler still works... yes
configure: error: do not put -ffast-math in CFLAGS
