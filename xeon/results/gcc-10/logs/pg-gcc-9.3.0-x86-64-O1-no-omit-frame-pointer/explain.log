                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2331675.06..2331675.11 rows=20 width=201) (actual time=14689.279..14689.289 rows=20 loops=1)
   ->  Sort  (cost=2331675.06..2333112.09 rows=574815 width=201) (actual time=14689.277..14689.284 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 34kB
         ->  HashAggregate  (cost=2309194.25..2316379.44 rows=574815 width=201) (actual time=14310.270..14559.765 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 258065kB
               ->  Hash Join  (cost=2205204.06..2302009.06 rows=574815 width=181) (actual time=12335.118..13418.831 rows=1145402 loops=1)
                     Hash Cond: (customer.c_custkey = orders.o_custkey)
                     ->  Hash Join  (cost=1.56..55433.51 rows=1499996 width=169) (actual time=0.061..538.581 rows=1500000 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Seq Scan on customer  (cost=0.00..50826.96 rows=1499996 width=147) (actual time=0.016..112.821 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.028..0.029 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.015..0.020 rows=25 loops=1)
                     ->  Hash  (cost=2198017.31..2198017.31 rows=574815 width=16) (actual time=12330.872..12330.875 rows=1145402 loops=1)
                           Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 71717kB
                           ->  Hash Join  (cost=285059.72..2198017.31 rows=574815 width=16) (actual time=674.790..12052.184 rows=1145402 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..1874373.50 rows=14698697 width=16) (actual time=0.081..9334.078 rows=14808183 loops=1)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 45177869
                                 ->  Hash  (cost=277728.83..277728.83 rows=586471 width=8) (actual time=670.503..670.504 rows=573160 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                       ->  Bitmap Heap Scan on orders  (cost=8019.76..277728.83 rows=586471 width=8) (actual time=127.071..557.219 rows=573160 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=233137
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7873.15 rows=586471 width=0) (actual time=72.496..72.496 rows=573160 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.948 ms
 Execution Time: 14698.452 ms
(32 rows)

                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=94747.09..94747.09 rows=1 width=36) (actual time=1100.351..1100.358 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44306.88..44306.89 rows=1 width=32) (actual time=345.688..345.691 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..41906.89 rows=319999 width=10) (actual time=0.712..247.154 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.704..3.786 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.013 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.691..3.331 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.448..0.448 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.08 rows=80 width=14) (actual time=0.002..0.052 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50440.19..50706.86 rows=106666 width=36) (actual time=1100.350..1100.352 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=45106.88..49906.86 rows=106666 width=36) (actual time=1100.308..1100.311 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 135185kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..41906.89 rows=319999 width=14) (actual time=0.902..341.066 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.881..5.475 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.025..0.029 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.852..4.890 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.518..0.518 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=18) (actual time=0.004..0.073 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.341 ms
 Execution Time: 1112.055 ms
(38 rows)

                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3030913.37..3031753.41 rows=1 width=27) (actual time=18007.534..18007.538 rows=1 loops=1)
   ->  GroupAggregate  (cost=3030913.37..3036793.68 rows=7 width=27) (actual time=18007.533..18007.535 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3030913.37..3031648.40 rows=294012 width=27) (actual time=17959.844..17967.518 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2477913.85..3004208.97 rows=294012 width=27) (actual time=14059.057..17889.291 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410879.43 rows=14996743 width=20) (actual time=0.015..967.031 rows=15000000 loops=1)
                     ->  Hash  (cost=2474238.70..2474238.70 rows=294012 width=15) (actual time=14056.908..14056.909 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474238.70 rows=294012 width=15) (actual time=0.155..13969.685 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.131 ms
 Execution Time: 18009.575 ms
(17 rows)

                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=656783.73..656783.73 rows=1 width=16) (actual time=16800.379..16800.383 rows=1 loops=1)
   ->  Sort  (cost=656783.73..656784.23 rows=200 width=16) (actual time=16800.377..16800.380 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=656780.73..656782.73 rows=200 width=16) (actual time=16800.332..16800.342 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=619280.83..634280.79 rows=1499996 width=12) (actual time=16307.010..16600.917 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 172049kB
                     ->  Hash Right Join  (cost=57714.32..545054.53 rows=14845261 width=8) (actual time=421.239..11480.895 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448371.29 rows=14845261 width=8) (actual time=0.027..5455.373 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38964.37..38964.37 rows=1499996 width=4) (actual time=412.899..412.900 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38964.37 rows=1499996 width=4) (actual time=0.035..155.267 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.953 ms
 Execution Time: 16833.013 ms
(22 rows)

                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1201965.34..1201965.35 rows=1 width=32) (actual time=2506.491..2506.495 rows=1 loops=1)
   ->  Aggregate  (cost=1201965.34..1201965.35 rows=1 width=32) (actual time=2506.490..2506.493 rows=1 loops=1)
         ->  Hash Join  (cost=105931.27..1188356.86 rows=777627 width=33) (actual time=1136.457..2124.389 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=19967.24..1100351.56 rows=777627 width=16) (actual time=275.554..883.805 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..19772.83 rows=777627 width=0) (actual time=166.074..166.075 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60962.90..60962.90 rows=2000090 width=25) (actual time=853.295..853.296 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 1  Memory Usage: 131903kB
                     ->  Seq Scan on part  (cost=0.00..60962.90 rows=2000090 width=25) (actual time=0.023..392.555 rows=2000000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.066 ms
 Execution Time: 2509.252 ms
(15 rows)

                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1243889.79..1245148.58 rows=100703 width=36) (actual time=3350.250..3398.111 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=55811.22..1222150.61 rows=2173918 width=16) (actual time=522.540..1683.499 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..55267.75 rows=2173918 width=0) (actual time=349.243..349.244 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.634 ms
 Execution Time: 3404.940 ms
(11 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2491835.67..2491845.76 rows=1 width=103) (actual time=6317.001..6317.006 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1246407.37..1246407.38 rows=1 width=32) (actual time=3155.865..3155.867 rows=1 loops=1)
           ->  HashAggregate  (cost=1243889.79..1245148.58 rows=100703 width=36) (actual time=3100.437..3148.574 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=55811.22..1222150.61 rows=2173918 width=16) (actual time=471.970..1451.356 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..55267.75 rows=2173918 width=0) (actual time=300.900..300.900 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1245428.29..1250513.42 rows=504 width=103) (actual time=6317.000..6317.001 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4827.86 rows=100000 width=71) (actual time=0.013..12.668 rows=69998 loops=1)
         ->  Sort  (cost=1245428.00..1245429.26 rows=504 width=36) (actual time=6299.925..6299.926 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1243889.79..1245405.38 rows=504 width=36) (actual time=6264.998..6299.918 rows=1 loops=1)
                     ->  HashAggregate  (cost=1243889.79..1245400.34 rows=504 width=36) (actual time=6264.997..6299.915 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=55811.22..1222150.61 rows=2173918 width=16) (actual time=468.705..1445.137 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..55267.75 rows=2173918 width=0) (actual time=297.709..297.709 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.480 ms
 Execution Time: 6323.990 ms
(31 rows)

DROP VIEW
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=404230.79..404230.79 rows=1 width=44) (actual time=6406.369..6406.375 rows=1 loops=1)
   ->  Sort  (cost=404230.79..404617.58 rows=154716 width=44) (actual time=6406.368..6406.373 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=394369.30..403457.21 rows=154716 width=44) (actual time=5951.402..6401.043 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=394369.30..395877.45 rows=603260 width=40) (actual time=5951.352..6060.211 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 141834kB
                     ->  Hash Join  (cost=98201.26..336449.04 rows=603260 width=40) (actual time=676.078..3121.382 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3466.46..231214.23 rows=3999994 width=8) (actual time=27.382..1627.257 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=10 width=4) (actual time=0.134..27.323 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90964.25..90964.25 rows=301644 width=40) (actual time=646.671..646.672 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90964.25 rows=301644 width=40) (actual time=0.018..568.873 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.187 ms
 Execution Time: 6411.669 ms
(27 rows)

                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5567293.64..6182894.67 rows=1986345 width=36) (actual time=35653.451..57863.513 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 4  Batches: 5  Memory Usage: 262193kB  Disk Usage: 1517688kB
   ->  Seq Scan on lineitem  (cost=0.00..1724407.20 rows=59986520 width=9) (actual time=0.035..5334.471 rows=59986052 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.563 ms
 Execution Time: 58085.216 ms
(7 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234070.81..234070.82 rows=1 width=32) (actual time=372.252..372.254 rows=1 loops=1)
   ->  Aggregate  (cost=234070.81..234070.82 rows=1 width=32) (actual time=372.250..372.251 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..234020.52 rows=20114 width=8) (actual time=0.140..371.512 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..86122.81 rows=2012 width=20) (actual time=0.126..310.330 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70963.35 rows=2012 width=4) (actual time=0.112..295.020 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.52 rows=1 width=16) (actual time=0.007..0.007 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..73.38 rows=10 width=17) (actual time=0.012..0.030 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.690 ms
 Execution Time: 372.288 ms
(17 rows)

DROP TABLE
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6424865.13..6424865.14 rows=1 width=32) (actual time=58766.833..58766.836 rows=1 loops=1)
   ->  Aggregate  (cost=6424865.13..6424865.14 rows=1 width=32) (actual time=58766.830..58766.833 rows=1 loops=1)
         ->  Nested Loop  (cost=5638282.58..6424815.19 rows=19976 width=8) (actual time=36182.930..58766.021 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5638282.14..6278960.79 rows=1998 width=40) (actual time=36180.855..58697.970 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5567293.64..6182894.67 rows=1986345 width=36) (actual time=35845.582..58186.535 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 4  Batches: 5  Memory Usage: 262193kB  Disk Usage: 1517688kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724407.20 rows=59986520 width=9) (actual time=0.020..5269.934 rows=59986052 loops=1)
                     ->  Hash  (cost=70963.35..70963.35 rows=2012 width=4) (actual time=335.188..335.189 rows=1996 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 87kB
                           ->  Seq Scan on part  (cost=0.00..70963.35 rows=2012 width=4) (actual time=0.207..334.673 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..72.88 rows=10 width=17) (actual time=0.014..0.033 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.635 ms
 Execution Time: 58911.209 ms
(22 rows)

                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9939875.53..9939875.78 rows=100 width=71) (actual time=47415.563..47415.578 rows=99 loops=1)
   ->  Sort  (cost=9939875.53..9989863.92 rows=19995357 width=71) (actual time=47415.561..47415.569 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8574244.52..9175667.37 rows=19995357 width=71) (actual time=47412.300..47415.422 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 24657kB
               ->  Hash Join  (cost=69963.43..6618448.66 rows=19995357 width=44) (actual time=1745.155..47411.484 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=386.52..6496383.79 rows=19995357 width=25) (actual time=1054.909..46720.847 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729678.58 rows=4998877 width=24) (actual time=749.582..32905.258 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650390.58 rows=14996743 width=20) (actual time=0.032..3320.647 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929321.42 rows=4998877 width=4) (actual time=653.698..28650.903 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404439.37 rows=59986520 width=9) (actual time=0.073..13693.180 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404439.37 rows=59986520 width=9) (actual time=0.023..10077.140 rows=59916431 loops=1)
                     ->  Hash  (cost=50826.96..50826.96 rows=1499996 width=23) (actual time=682.696..682.697 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50826.96 rows=1499996 width=23) (actual time=0.023..340.761 rows=1500000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.227 ms
 Execution Time: 47430.737 ms
(26 rows)



 Limit  (cost=703437.66..703437.67 rows=1 width=32) (actual time=1025.428..1025.430 rows=1 loops=1)
   ->  Aggregate  (cost=703437.66..703437.67 rows=1 width=32) (actual time=1025.427..1025.428 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..703429.17 rows=1132 width=12) (actual time=4.771..1024.754 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125965.83 rows=4831 width=30) (actual time=0.392..614.778 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..119.52 rows=1 width=21) (actual time=0.077..0.085 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.470 ms
 Execution Time: 1025.520 ms
(13 rows)

                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3948120.30..3948120.30 rows=1 width=236) (actual time=84448.044..84448.046 rows=1 loops=1)
   ->  Sort  (cost=3948120.30..3948120.31 rows=6 width=236) (actual time=84448.043..84448.044 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3948120.10..3948120.27 rows=6 width=236) (actual time=84447.977..84447.987 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874373.50 rows=59249903 width=25) (actual time=0.040..11481.322 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.821 ms
 Execution Time: 84448.140 ms
(13 rows)

                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2097883.16..2259059.19 rows=4835773 width=40) (actual time=13659.597..21386.186 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 8  Batches: 41  Memory Usage: 262225kB  Disk Usage: 318560kB
   ->  Bitmap Heap Scan on lineitem  (cost=233024.52..1493716.71 rows=9076679 width=13) (actual time=1695.061..8867.995 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..230755.36 rows=9076679 width=0) (actual time=1385.416..1385.417 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.882 ms
 Execution Time: 21593.179 ms
(11 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=59228.71..59228.71 rows=1 width=51) (actual time=1334.549..1334.552 rows=1 loops=1)
   ->  Sort  (cost=59228.71..59228.71 rows=1 width=51) (actual time=1334.547..1334.549 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..59228.70 rows=1 width=51) (actual time=0.778..1332.834 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=55) (actual time=0.558..11.939 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.017 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=59) (actual time=0.543..10.984 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.298..0.298 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..14.20 rows=1 width=8) (actual time=0.322..0.322 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..13.70 rows=1 width=16) (actual time=0.277..0.316 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=12) (actual time=0.006..0.128 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.009..0.009 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.577 ms
 Execution Time: 1336.453 ms
(33 rows)

DROP TABLE
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2421741.56..2421741.56 rows=1 width=51) (actual time=40554.920..40554.926 rows=1 loops=1)
   ->  Sort  (cost=2421741.56..2421741.56 rows=1 width=51) (actual time=40554.918..40554.923 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2164099.25..2421741.55 rows=1 width=51) (actual time=15886.376..40553.137 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182645835
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=55) (actual time=0.061..23.399 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.027..0.031 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=59) (actual time=0.010..14.996 rows=100000 loops=1)
               ->  Materialize  (cost=2164099.25..2417094.24 rows=3 width=8) (actual time=3.336..7.309 rows=44603 loops=4095)
                     ->  Nested Loop  (cost=2164099.25..2417094.23 rows=3 width=8) (actual time=13658.967..22265.212 rows=59002 loops=1)
                           ->  Hash Join  (cost=2164098.82..2386326.51 rows=48846 width=44) (actual time=13658.933..21974.193 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2097883.16..2259059.19 rows=4835773 width=40) (actual time=13296.548..21060.013 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 41  Memory Usage: 262225kB  Disk Usage: 318560kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=233024.52..1493716.71 rows=9076679 width=13) (actual time=1655.405..8539.121 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..230755.36 rows=9076679 width=0) (actual time=1353.381..1353.381 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65963.12..65963.12 rows=20203 width=4) (actual time=362.215..362.217 rows=21718 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1020kB
                                       ->  Seq Scan on part  (cost=0.00..65963.12 rows=20203 width=4) (actual time=0.032..357.651 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.004..0.004 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.666 ms
 Execution Time: 40602.869 ms
(38 rows)

                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4271574.95..4271574.95 rows=1 width=34) (actual time=36838.522..36838.538 rows=100 loops=1)
   ->  Sort  (cost=4271574.95..4271574.95 rows=1 width=34) (actual time=36838.521..36838.531 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4271574.92..4271574.94 rows=1 width=34) (actual time=36828.962..36837.247 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4271574.92..4271574.92 rows=1 width=26) (actual time=36828.949..36832.575 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204880.90..4271574.91 rows=1 width=26) (actual time=17163.760..36677.766 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204880.34..4271567.37 rows=1 width=38) (actual time=17163.744..36417.098 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204879.90..4271560.05 rows=1 width=34) (actual time=17160.533..35959.097 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959753.59 rows=794237 width=34) (actual time=7.992..14344.077 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874373.50 rows=19995507 width=8) (actual time=0.073..10706.729 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=7.851..7.852 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=0.911..7.082 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.016..0.019 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=0.892..6.549 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.585..0.585 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874373.50..1874373.50 rows=19995507 width=8) (actual time=17119.469..17119.470 rows=37929348 loops=1)
                                             Buckets: 8388608  Batches: 8  Memory Usage: 250561kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874373.50 rows=19995507 width=8) (actual time=0.013..11478.243 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.003..0.004 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.957 ms
 Execution Time: 36843.386 ms
(47 rows)

                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163094.77..163094.80 rows=1 width=72) (actual time=1892.683..1892.685 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75320.89..75320.90 rows=1 width=32) (actual time=899.145..899.146 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75201.90 rows=47597 width=6) (actual time=0.007..859.152 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87773.87..87983.39 rows=7619 width=72) (actual time=1892.681..1892.682 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87773.87..87792.92 rows=7619 width=38) (actual time=1890.684..1891.128 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87282.62 rows=7619 width=38) (actual time=899.211..1874.068 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75201.90 rows=17500 width=26) (actual time=899.182..1542.851 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.30 rows=18 width=4) (actual time=0.001..0.001 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.162 ms
 Execution Time: 1893.034 ms
(21 rows)

                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=207695.66..212347.85 rows=465219 width=36) (actual time=2251.174..2677.652 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 1  Memory Usage: 180241kB
   ->  Nested Loop  (cost=42.10..199695.68 rows=1599997 width=10) (actual time=0.896..1527.643 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=0.880..23.251 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=0.053..0.084 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.024..0.036 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.019..0.020 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=0.639..4.093 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.394..0.394 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.065 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.213 ms
 Execution Time: 2721.809 ms
(23 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=475696.59..475696.60 rows=1 width=192) (actual time=2678.280..2678.297 rows=100 loops=1)
   ->  Sort  (cost=475696.59..475696.60 rows=1 width=192) (actual time=2678.278..2678.289 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Hash Join  (cost=265350.18..475696.58 rows=1 width=192) (actual time=1992.267..2675.917 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70963.35 rows=7903 width=30) (actual time=0.015..448.320 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=202287.23..202287.23 rows=1599997 width=172) (actual time=1989.588..1989.592 rows=1604080 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 180174kB
                     ->  Nested Loop  (cost=2.00..202287.23 rows=1599997 width=172) (actual time=0.044..1267.495 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.033..57.490 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.024..49.977 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.003..9.517 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.014..0.015 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.003..0.008 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.049 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.004..0.004 rows=1 loops=12783)
                       Index Cond: (ps_partkey = part.p_partkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.256 ms
 Execution Time: 2681.039 ms
(32 rows)

DROP TABLE
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1591943.93..1591943.93 rows=1 width=192) (actual time=4173.719..4173.736 rows=100 loops=1)
   ->  Sort  (cost=1591943.93..1591943.93 rows=1 width=192) (actual time=4173.718..4173.728 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=503884.95..1591943.92 rows=1 width=192) (actual time=2796.848..4171.126 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..102915.23 rows=7903 width=30) (actual time=0.025..617.258 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=503884.52..511884.51 rows=1599997 width=172) (actual time=2796.692..3238.113 rows=1603828 loops=1)
                     ->  Sort  (cost=503884.52..507884.51 rows=1599997 width=172) (actual time=2796.686..3056.317 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293448kB
                           ->  Nested Loop  (cost=2.00..202287.23 rows=1599997 width=172) (actual time=0.074..1358.701 rows=1604080 loops=1)
                                 ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.057..57.213 rows=20051 loops=1)
                                       Join Filter: (nation.n_regionkey = region.r_regionkey)
                                       Rows Removed by Join Filter: 79949
                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.016 rows=1 loops=1)
                                             Filter: (r_name = 'AMERICA'::bpchar)
                                             Rows Removed by Filter: 4
                                       ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.043..49.567 rows=100000 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.005..9.207 rows=100000 loops=1)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.024..0.025 rows=25 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.012..0.017 rows=25 loops=1)
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.053 rows=80 loops=20051)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=153.90..153.91 rows=1 width=32) (actual time=0.021..0.021 rows=1 loops=6398)
                       ->  Nested Loop  (cost=0.86..153.90 rows=3 width=6) (actual time=0.012..0.020 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..152.62 rows=17 width=10) (actual time=0.007..0.018 rows=4 loops=6398)
                                   ->  Nested Loop  (cost=0.72..150.00 rows=17 width=10) (actual time=0.006..0.014 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.73 rows=17 width=10) (actual time=0.003..0.004 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=25592)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.771 ms
 Execution Time: 4213.774 ms
(49 rows)

                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2945928.27..2945928.29 rows=10 width=44) (actual time=18005.885..18005.892 rows=10 loops=1)
   ->  Sort  (cost=2945928.27..2953594.70 rows=3066571 width=44) (actual time=18005.882..18005.887 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2805392.26..2879660.77 rows=3066571 width=44) (actual time=17921.608..17983.413 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 73745kB
               ->  Hash Join  (cost=526546.66..2554316.75 rows=3066571 width=24) (actual time=4285.302..17678.266 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874373.50 rows=32728235 width=16) (actual time=0.071..9916.051 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=508982.10..508982.10 rows=1405165 width=12) (actual time=4276.778..4276.781 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=138874.29..508982.10 rows=1405165 width=12) (actual time=882.905..3942.710 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=80647.98..431804.40 rows=7219554 width=16) (actual time=487.075..2028.496 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..78843.09 rows=7219554 width=0) (actual time=425.148..425.148 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54576.95..54576.95 rows=291949 width=4) (actual time=393.748..393.749 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54576.95 rows=291949 width=4) (actual time=0.020..334.934 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.595 ms
 Execution Time: 18021.780 ms
(29 rows)

                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2586196.77..2586196.78 rows=1 width=24) (actual time=21303.139..21303.143 rows=1 loops=1)
   ->  Sort  (cost=2586196.77..2586196.79 rows=5 width=24) (actual time=21303.137..21303.141 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2586196.70..2586196.75 rows=5 width=24) (actual time=21303.101..21303.105 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2210157.36..2583369.60 rows=565419 width=16) (actual time=17134.998..21201.168 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7732.02..277125.37 rows=565423 width=20) (actual time=143.775..549.923 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7590.67 rows=565423 width=0) (actual time=83.684..83.684 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874373.50..1874373.50 rows=19995507 width=4) (actual time=16961.436..16961.437 rows=37929348 loops=1)
                           Buckets: 8388608  Batches: 8  Memory Usage: 232058kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874373.50 rows=19995507 width=4) (actual time=0.085..11496.401 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.226 ms
 Execution Time: 21307.633 ms
(22 rows)

                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2398341.06..2398341.06 rows=1 width=58) (actual time=15936.962..15936.970 rows=1 loops=1)
   ->  Sort  (cost=2398341.06..2398341.12 rows=25 width=58) (actual time=15936.960..15936.968 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2397424.25..2398340.94 rows=25 width=58) (actual time=15908.636..15936.940 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2397424.25..2397607.52 rows=73310 width=38) (actual time=15901.635..15905.417 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=414001.26..2391500.17 rows=73310 width=38) (actual time=2157.775..15872.314 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=409285.26..2377095.85 rows=1845392 width=50) (actual time=2111.483..15405.424 rows=1815327 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..1724407.20 rows=59986520 width=20) (actual time=0.064..5258.530 rows=59986052 loops=1)
                                 ->  Hash  (cost=403518.36..403518.36 rows=461352 width=38) (actual time=2109.151..2109.156 rows=453399 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 35976kB
                                       ->  Hash Join  (cost=94741.14..403518.36 rows=461352 width=38) (actual time=708.492..1992.931 rows=453399 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=31536.70..327050.07 rows=2306758 width=8) (actual time=239.785..998.404 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..30960.02 rows=2306758 width=0) (actual time=177.883..177.883 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Hash  (cost=59454.44..59454.44 rows=299999 width=38) (actual time=466.753..466.757 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                                   ->  Hash Join  (cost=2.51..59454.44 rows=299999 width=38) (actual time=0.078..396.863 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50826.96 rows=1499996 width=8) (actual time=0.010..122.956 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.053..0.055 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.043..0.051 rows=5 loops=1)
                                                                     Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.009 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.020..0.021 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=45.063..45.063 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.010..26.369 rows=100000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 4.746 ms
 Execution Time: 15938.609 ms
(44 rows)

                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1500356.47..1500356.48 rows=1 width=32) (actual time=2800.749..2800.751 rows=1 loops=1)
   ->  Aggregate  (cost=1500356.47..1500356.48 rows=1 width=32) (actual time=2800.748..2800.749 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=297546.70..1494429.23 rows=1185447 width=12) (actual time=1324.558..2404.246 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..297250.34 rows=1185447 width=0) (actual time=1149.478..1149.478 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.703 ms
 Execution Time: 2803.384 ms
(10 rows)

                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2508403.83..2508403.95 rows=1 width=116) (actual time=18744.789..18744.797 rows=1 loops=1)
   ->  GroupAggregate  (cost=2508403.83..2509599.54 rows=10056 width=116) (actual time=18744.787..18744.794 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2508403.83..2508553.10 rows=59707 width=96) (actual time=18735.626..18736.402 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1018325.91..2503667.39 rows=59707 width=96) (actual time=8452.963..18698.584 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=467281.17..1944797.62 rows=1434723 width=46) (actual time=2939.725..12776.345 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=463656.77..1859100.54 rows=18060118 width=24) (actual time=2903.137..10266.939 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..459141.74 rows=18060118 width=0) (actual time=2578.999..2579.000 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=36.534..36.536 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.055..34.871 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.016..24.137 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.026..0.027 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.019..0.021 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536048.00..536048.00 rows=1199739 width=30) (actual time=5505.435..5505.438 rows=1191175 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                           ->  Hash Join  (cost=56933.35..536048.00 rows=1199739 width=30) (actual time=456.434..5195.820 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..410879.43 rows=14996743 width=8) (actual time=0.019..2215.824 rows=15000000 loops=1)
                                 ->  Hash  (cost=55433.35..55433.35 rows=120000 width=30) (actual time=455.931..455.933 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55433.35 rows=120000 width=30) (actual time=0.043..428.819 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50826.96 rows=1499996 width=8) (actual time=0.010..285.653 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.020..0.020 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.012..0.015 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 3.923 ms
 Execution Time: 18748.888 ms
(45 rows)

                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1986200.04..1986200.29 rows=1 width=64) (actual time=4259.763..4259.771 rows=1 loops=1)
   ->  GroupAggregate  (cost=1986200.04..1986787.44 rows=2406 width=64) (actual time=4259.761..4259.769 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=1986200.04..1986259.96 rows=23968 width=70) (actual time=4252.558..4253.327 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=496303.00..1984456.51 rows=23968 width=70) (actual time=3107.176..4243.138 rows=23842 loops=1)
                     ->  Hash Join  (cost=496302.85..1983756.51 rows=23968 width=20) (actual time=3107.150..4228.106 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=491836.85..1979227.15 rows=24137 width=20) (actual time=3065.744..4176.968 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1485655.32 rows=398413 width=20) (actual time=0.093..1010.180 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65963.12 rows=13284 width=4) (actual time=0.054..346.713 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..106.57 rows=30 width=24) (actual time=0.004..0.046 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=480479.72..480479.72 rows=908535 width=8) (actual time=3061.277..3061.282 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=125307.26..480479.72 rows=908535 width=8) (actual time=787.711..2867.357 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=62102.83..391154.93 rows=4542673 width=12) (actual time=330.252..1463.827 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..60967.17 rows=4542673 width=0) (actual time=269.357..269.357 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59454.44..59454.44 rows=299999 width=4) (actual time=455.408..455.412 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59454.44 rows=299999 width=4) (actual time=0.065..398.535 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50826.96 rows=1499996 width=8) (actual time=0.007..121.302 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.043..0.046 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.033..0.041 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.008 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=40.865..40.866 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.005..23.643 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 5.508 ms
 Execution Time: 4262.279 ms
(52 rows)

                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1798527.22..1798527.25 rows=1 width=90) (actual time=40106.729..40106.736 rows=1 loops=1)
   ->  GroupAggregate  (cost=1798527.22..1798529.77 rows=73 width=90) (actual time=40106.728..40106.733 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=1798527.22..1798527.40 rows=73 width=81) (actual time=40093.961..40097.828 rows=11401 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Sort Method: external merge  Disk: 211200kB
               ->  Nested Loop  (cost=66721.90..1798524.96 rows=73 width=81) (actual time=653.847..36136.378 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 39009119
                     ->  Nested Loop  (cost=66721.90..1798497.12 rows=73 width=31) (actual time=653.820..30639.362 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=66721.47..1798066.23 rows=73 width=31) (actual time=653.785..18292.821 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=66721.18..1797651.41 rows=73 width=35) (actual time=653.770..13122.825 rows=3248192 loops=1)
                                       ->  Hash Join  (cost=66720.74..342106.62 rows=242425 width=18) (actual time=653.736..2954.288 rows=433248 loops=1)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..254385.87 rows=7999987 width=14) (actual time=0.028..1200.838 rows=8000000 loops=1)
                                             ->  Hash  (cost=65963.12..65963.12 rows=60609 width=4) (actual time=653.426..653.427 rows=108312 loops=1)
                                                   Buckets: 131072 (originally 65536)  Batches: 1 (originally 1)  Memory Usage: 4832kB
                                                   ->  Seq Scan on part  (cost=0.00..65963.12 rows=60609 width=4) (actual time=0.028..629.544 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..5.99 rows=1 width=29) (actual time=0.005..0.022 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..5.68 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..5.90 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.013 rows=25 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 8.492 ms
 Execution Time: 40137.847 ms
(31 rows)

