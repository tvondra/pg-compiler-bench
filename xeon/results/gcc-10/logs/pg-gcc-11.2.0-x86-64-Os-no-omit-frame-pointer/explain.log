                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2332666.47..2332666.52 rows=20 width=202) (actual time=16744.768..16744.777 rows=20 loops=1)
   ->  Sort  (cost=2332666.47..2334084.99 rows=567409 width=202) (actual time=16744.766..16744.773 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 34kB
         ->  HashAggregate  (cost=2310475.31..2317567.92 rows=567409 width=202) (actual time=16344.929..16602.344 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 258065kB
               ->  Hash Join  (cost=2204771.85..2303382.69 rows=567409 width=182) (actual time=14177.290..15313.954 rows=1145402 loops=1)
                     Hash Cond: (customer.c_custkey = orders.o_custkey)
                     ->  Hash Join  (cost=1.56..55435.20 rows=1500125 width=170) (actual time=0.068..586.267 rows=1500000 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Seq Scan on customer  (cost=0.00..50828.25 rows=1500125 width=148) (actual time=0.020..118.598 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.031..0.032 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.019..0.023 rows=25 loops=1)
                     ->  Hash  (cost=2197677.67..2197677.67 rows=567409 width=16) (actual time=14173.040..14173.043 rows=1145402 loops=1)
                           Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 71717kB
                           ->  Hash Join  (cost=284672.15..2197677.67 rows=567409 width=16) (actual time=709.716..13860.608 rows=1145402 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..1874294.30 rows=14747128 width=16) (actual time=0.061..11098.654 rows=14808183 loops=1)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 45177869
                                 ->  Hash  (cost=277459.00..277459.00 rows=577052 width=8) (actual time=705.335..705.336 rows=573160 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                       ->  Bitmap Heap Scan on orders  (cost=7891.22..277459.00 rows=577052 width=8) (actual time=141.248..579.537 rows=573160 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=233137
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7746.96 rows=577052 width=0) (actual time=82.986..82.986 rows=573160 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.946 ms
 Execution Time: 16753.912 ms
(32 rows)

                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=94750.51..94750.51 rows=1 width=36) (actual time=1167.721..1167.726 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44307.73..44307.74 rows=1 width=32) (actual time=374.071..374.074 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..41907.06 rows=320089 width=10) (actual time=0.859..253.928 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.851..3.926 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.012 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.840..3.430 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.588..0.588 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.053 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50442.76..50709.50 rows=106696 width=36) (actual time=1167.719..1167.722 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=45107.95..49909.28 rows=106696 width=36) (actual time=1167.677..1167.679 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 135185kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..41907.06 rows=320089 width=14) (actual time=1.055..340.720 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=1.029..5.614 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.028..0.032 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.998..4.939 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.740..0.740 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=18) (actual time=0.004..0.073 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.375 ms
 Execution Time: 1179.185 ms
(38 rows)

                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3029804.45..3030621.16 rows=1 width=27) (actual time=20757.319..20757.322 rows=1 loops=1)
   ->  GroupAggregate  (cost=3029804.45..3035521.38 rows=7 width=27) (actual time=20757.318..20757.320 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3029804.45..3030519.06 rows=285843 width=27) (actual time=20702.998..20710.491 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2477669.18..3003900.13 rows=285843 width=27) (actual time=16711.159..20629.286 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410889.44 rows=14997744 width=20) (actual time=0.016..1071.095 rows=15000000 loops=1)
                     ->  Hash  (cost=2474096.14..2474096.14 rows=285843 width=15) (actual time=16709.009..16709.009 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474096.14 rows=285843 width=15) (actual time=0.188..16619.225 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.108 ms
 Execution Time: 20759.246 ms
(17 rows)

                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=657954.26..657954.26 rows=1 width=16) (actual time=18108.440..18108.443 rows=1 loops=1)
   ->  Sort  (cost=657954.26..657954.76 rows=200 width=16) (actual time=18108.438..18108.441 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=657951.26..657953.26 rows=200 width=16) (actual time=18108.392..18108.402 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=620448.14..635449.39 rows=1500125 width=12) (actual time=17557.648..17895.607 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 172049kB
                     ->  Hash Right Join  (cost=57717.86..545466.92 rows=14996244 width=8) (actual time=454.121..12389.340 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448383.80 rows=14996244 width=8) (actual time=0.023..6169.732 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38966.30..38966.30 rows=1500125 width=4) (actual time=445.903..445.903 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38966.30 rows=1500125 width=4) (actual time=0.030..170.402 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.908 ms
 Execution Time: 18140.748 ms
(22 rows)

                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1192607.88..1192607.90 rows=1 width=32) (actual time=2545.593..2545.595 rows=1 loops=1)
   ->  Aggregate  (cost=1192607.88..1192607.90 rows=1 width=32) (actual time=2545.591..2545.593 rows=1 loops=1)
         ->  Hash Join  (cost=105469.68..1179701.93 rows=737483 width=33) (actual time=1122.502..2117.238 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=19506.84..1091745.05 rows=759637 width=16) (actual time=293.572..897.701 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..19316.93 rows=759637 width=0) (actual time=180.125..180.125 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60962.37..60962.37 rows=2000037 width=25) (actual time=821.390..821.391 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 1  Memory Usage: 131903kB
                     ->  Seq Scan on part  (cost=0.00..60962.37 rows=2000037 width=25) (actual time=0.023..343.344 rows=2000000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.021 ms
 Execution Time: 2548.311 ms
(15 rows)

                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1238984.56..1240269.98 rows=102834 width=36) (actual time=3680.458..3730.670 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=57984.41..1216401.30 rows=2258326 width=16) (actual time=577.723..1764.817 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..57419.83 rows=2258326 width=0) (actual time=395.694..395.694 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.620 ms
 Execution Time: 3737.505 ms
(11 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2482111.06..2482120.95 rows=1 width=104) (actual time=6924.991..6924.995 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1241555.41..1241555.42 rows=1 width=32) (actual time=3459.649..3459.650 rows=1 loops=1)
           ->  HashAggregate  (cost=1238984.56..1240269.98 rows=102834 width=36) (actual time=3400.943..3452.504 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=57984.41..1216401.30 rows=2258326 width=16) (actual time=512.789..1517.629 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..57419.83 rows=2258326 width=0) (actual time=333.054..333.054 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1240555.64..1245640.54 rows=514 width=104) (actual time=6924.990..6924.992 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4827.48 rows=100000 width=72) (actual time=0.014..12.817 rows=69998 loops=1)
         ->  Sort  (cost=1240555.35..1240556.64 rows=514 width=36) (actual time=6907.668..6907.670 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1238984.56..1240532.21 rows=514 width=36) (actual time=6871.390..6907.663 rows=1 loops=1)
                     ->  HashAggregate  (cost=1238984.56..1240527.07 rows=514 width=36) (actual time=6871.389..6907.661 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=57984.41..1216401.30 rows=2258326 width=16) (actual time=510.860..1513.571 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..57419.83 rows=2258326 width=0) (actual time=330.023..330.023 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.448 ms
 Execution Time: 6931.783 ms
(31 rows)

DROP VIEW
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=403988.61..403988.61 rows=1 width=44) (actual time=6934.656..6934.660 rows=1 loops=1)
   ->  Sort  (cost=403988.61..404374.76 rows=154462 width=44) (actual time=6934.655..6934.658 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=394159.44..403216.30 rows=154462 width=44) (actual time=6435.412..6929.009 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=394159.44..395661.89 rows=600979 width=40) (actual time=6435.363..6532.742 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 141834kB
                     ->  Hash Join  (cost=98184.52..336474.61 rows=600979 width=40) (actual time=704.529..3326.511 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3466.46..231253.59 rows=4001118 width=8) (actual time=29.200..1782.760 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=10 width=4) (actual time=0.140..29.138 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90962.93..90962.93 rows=300411 width=40) (actual time=673.274..673.275 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90962.93 rows=300411 width=40) (actual time=0.018..589.920 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.149 ms
 Execution Time: 6939.784 ms
(27 rows)

                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5566824.38..6183470.15 rows=2060119 width=36) (actual time=41946.359..66970.255 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 4  Batches: 5  Memory Usage: 262193kB  Disk Usage: 1517688kB
   ->  Seq Scan on lineitem  (cost=0.00..1724343.84 rows=59980184 width=9) (actual time=0.027..5748.856 rows=59986052 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.556 ms
 Execution Time: 67175.441 ms
(7 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=222105.74..222105.76 rows=1 width=32) (actual time=415.707..415.709 rows=1 loops=1)
   ->  Aggregate  (cost=222105.74..222105.76 rows=1 width=32) (actual time=415.706..415.707 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..222059.18 rows=18624 width=8) (actual time=0.146..414.914 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..85495.70 rows=1919 width=20) (actual time=0.131..350.806 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70962.55 rows=1919 width=4) (actual time=0.118..334.871 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.56 rows=1 width=16) (actual time=0.007..0.007 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..71.04 rows=10 width=17) (actual time=0.012..0.031 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.686 ms
 Execution Time: 415.740 ms
(17 rows)

DROP TABLE
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6420214.59..6420214.61 rows=1 width=32) (actual time=66658.419..66658.422 rows=1 loops=1)
   ->  Aggregate  (cost=6420214.59..6420214.61 rows=1 width=32) (actual time=66658.417..66658.420 rows=1 loops=1)
         ->  Nested Loop  (cost=5637811.36..6420166.63 rows=19183 width=8) (actual time=41416.021..66657.524 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5637810.92..6280465.70 rows=1977 width=40) (actual time=41413.495..66586.442 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5566824.38..6183470.15 rows=2060119 width=36) (actual time=41031.954..66028.640 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 4  Batches: 5  Memory Usage: 262193kB  Disk Usage: 1517688kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724343.84 rows=59980184 width=9) (actual time=0.017..5712.568 rows=59986052 loops=1)
                     ->  Hash  (cost=70962.55..70962.55 rows=1919 width=4) (actual time=381.438..381.438 rows=1996 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 87kB
                           ->  Seq Scan on part  (cost=0.00..70962.55 rows=1919 width=4) (actual time=0.259..380.867 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..70.54 rows=10 width=17) (actual time=0.015..0.035 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.382 ms
 Execution Time: 66800.692 ms
(22 rows)

                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9937711.62..9937711.87 rows=100 width=71) (actual time=50627.391..50627.405 rows=99 loops=1)
   ->  Sort  (cost=9937711.62..9987686.12 rows=19989799 width=71) (actual time=50627.389..50627.397 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8572460.21..9173715.88 rows=19989799 width=71) (actual time=50624.205..50627.259 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 24657kB
               ->  Hash Join  (cost=69837.44..6617207.99 rows=19989799 width=44) (actual time=1865.082..50623.520 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=257.63..6495154.81 rows=19989799 width=25) (actual time=1121.347..49879.434 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729533.74 rows=4998349 width=24) (actual time=812.462..35844.840 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650405.59 rows=14997744 width=20) (actual time=0.039..3342.683 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929170.94 rows=4998349 width=4) (actual time=715.456..31537.977 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404344.32 rows=59980184 width=9) (actual time=0.060..13903.424 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404344.32 rows=59980184 width=9) (actual time=0.024..10150.283 rows=59916431 loops=1)
                     ->  Hash  (cost=50828.25..50828.25 rows=1500125 width=23) (actual time=736.126..736.127 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50828.25 rows=1500125 width=23) (actual time=0.023..368.570 rows=1500000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.169 ms
 Execution Time: 50642.728 ms
(26 rows)



 Limit  (cost=698627.72..698627.73 rows=1 width=32) (actual time=1111.909..1111.911 rows=1 loops=1)
   ->  Aggregate  (cost=698627.72..698627.73 rows=1 width=32) (actual time=1111.908..1111.909 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..698619.23 rows=1132 width=12) (actual time=4.927..1111.224 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125963.57 rows=4947 width=30) (actual time=0.432..687.819 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..115.75 rows=1 width=21) (actual time=0.079..0.088 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.397 ms
 Execution Time: 1112.054 ms
(13 rows)

                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3949274.74..3949274.75 rows=1 width=236) (actual time=99242.843..99242.845 rows=1 loops=1)
   ->  Sort  (cost=3949274.74..3949274.76 rows=6 width=236) (actual time=99242.842..99242.843 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3949274.55..3949274.71 rows=6 width=236) (actual time=99242.799..99242.811 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874294.30 rows=59285150 width=25) (actual time=0.045..12472.352 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.856 ms
 Execution Time: 99242.933 ms
(13 rows)

                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2102238.72..2263943.73 rows=4844691 width=40) (actual time=14748.905..23451.817 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 8  Batches: 41  Memory Usage: 262225kB  Disk Usage: 318560kB
   ->  Bitmap Heap Scan on lineitem  (cost=234079.33..1495378.55 rows=9117148 width=13) (actual time=1810.105..9077.134 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231800.04 rows=9117148 width=0) (actual time=1481.522..1481.523 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.886 ms
 Execution Time: 23657.251 ms
(11 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=58925.67..58925.68 rows=1 width=52) (actual time=1386.037..1386.039 rows=1 loops=1)
   ->  Sort  (cost=58925.67..58925.68 rows=1 width=52) (actual time=1386.035..1386.037 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..58925.66 rows=1 width=52) (actual time=0.917..1384.363 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=56) (actual time=0.691..12.034 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.017 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=60) (actual time=0.675..11.045 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.420..0.420 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..14.12 rows=1 width=8) (actual time=0.335..0.335 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..13.63 rows=1 width=16) (actual time=0.288..0.328 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=12) (actual time=0.007..0.129 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.009..0.009 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.545 ms
 Execution Time: 1387.950 ms
(33 rows)

DROP TABLE
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2426779.44..2426779.45 rows=1 width=52) (actual time=43419.254..43419.259 rows=1 loops=1)
   ->  Sort  (cost=2426779.44..2426779.45 rows=1 width=52) (actual time=43419.252..43419.257 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2168454.14..2426779.43 rows=1 width=52) (actual time=17213.136..43417.537 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182645835
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=56) (actual time=0.064..25.457 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.042..0.047 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=60) (actual time=0.015..16.085 rows=100000 loops=1)
               ->  Materialize  (cost=2168454.14..2422132.13 rows=3 width=8) (actual time=3.596..7.824 rows=44603 loops=4095)
                     ->  Nested Loop  (cost=2168454.14..2422132.11 rows=3 width=8) (actual time=14723.499..24353.407 rows=59002 loops=1)
                           ->  Hash Join  (cost=2168453.70..2391322.96 rows=48935 width=44) (actual time=14723.467..24041.360 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2102238.72..2263943.73 rows=4844691 width=40) (actual time=14320.137..23081.443 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 41  Memory Usage: 262225kB  Disk Usage: 318560kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=234079.33..1495378.55 rows=9117148 width=13) (actual time=1697.622..8679.409 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231800.04 rows=9117148 width=0) (actual time=1375.605..1375.605 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65962.46..65962.46 rows=20202 width=4) (actual time=403.153..403.154 rows=21718 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1020kB
                                       ->  Seq Scan on part  (cost=0.00..65962.46 rows=20202 width=4) (actual time=0.049..397.616 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.005..0.005 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.579 ms
 Execution Time: 43465.019 ms
(38 rows)

                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4270549.97..4270549.97 rows=1 width=34) (actual time=42470.598..42470.614 rows=100 loops=1)
   ->  Sort  (cost=4270549.97..4270549.97 rows=1 width=34) (actual time=42470.596..42470.607 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4270549.94..4270549.96 rows=1 width=34) (actual time=42459.926..42469.241 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4270549.94..4270549.94 rows=1 width=26) (actual time=42459.916..42463.756 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204767.30..4270549.93 rows=1 width=26) (actual time=20651.022..42303.722 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204766.74..4270542.39 rows=1 width=38) (actual time=20651.006..42034.787 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204766.30..4270535.08 rows=1 width=34) (actual time=20647.661..41544.105 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959501.06 rows=777696 width=34) (actual time=8.241..15583.577 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874294.30 rows=19993395 width=8) (actual time=0.095..11884.019 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=8.083..8.085 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=1.010..7.180 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.019..0.023 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=0.988..6.676 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.690..0.691 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874294.30..1874294.30 rows=19993395 width=8) (actual time=20605.991..20605.991 rows=37929348 loops=1)
                                             Buckets: 8388608  Batches: 8  Memory Usage: 250561kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874294.30 rows=19993395 width=8) (actual time=0.012..13645.101 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.004..0.004 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.928 ms
 Execution Time: 42475.462 ms
(47 rows)

                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162969.22..162969.25 rows=1 width=72) (actual time=2096.825..2096.827 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75324.73..75324.74 rows=1 width=32) (actual time=998.352..998.353 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75205.28 rows=47777 width=6) (actual time=0.007..954.079 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87644.48..87863.46 rows=7963 width=72) (actual time=2096.824..2096.825 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87644.48..87664.39 rows=7963 width=38) (actual time=2094.671..2095.126 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87128.52 rows=7963 width=38) (actual time=998.412..2075.722 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75205.28 rows=17501 width=26) (actual time=998.385..1716.630 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.30 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.181 ms
 Execution Time: 2097.147 ms
(21 rows)

                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=207698.78..212189.25 rows=449047 width=36) (actual time=2305.411..2764.840 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 1  Memory Usage: 180241kB
   ->  Nested Loop  (cost=42.10..199696.54 rows=1600447 width=10) (actual time=1.063..1533.901 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=1.048..24.054 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=0.052..0.080 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.021..0.032 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.022..0.023 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=0.782..4.229 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.511..0.511 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.004..0.065 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.222 ms
 Execution Time: 2810.048 ms
(23 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=488913.02..488913.02 rows=1 width=193) (actual time=2796.514..2796.530 rows=100 loops=1)
   ->  Sort  (cost=488913.02..488913.02 rows=1 width=193) (actual time=2796.513..2796.523 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Hash Join  (cost=265368.80..488913.01 rows=1 width=193) (actual time=2094.605..2793.988 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70962.55 rows=6709 width=30) (actual time=0.015..442.052 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=202288.09..202288.09 rows=1600447 width=173) (actual time=2091.934..2091.937 rows=1604080 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 180174kB
                     ->  Nested Loop  (cost=2.00..202288.09 rows=1600447 width=173) (actual time=0.044..1274.755 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=167) (actual time=0.033..56.996 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=171) (actual time=0.024..48.746 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=145) (actual time=0.003..9.196 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.014..0.015 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.003..0.008 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.048 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.004..0.004 rows=1 loops=12783)
                       Index Cond: (ps_partkey = part.p_partkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.250 ms
 Execution Time: 2799.154 ms
(32 rows)

DROP TABLE
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1490948.71..1490948.71 rows=1 width=193) (actual time=4299.565..4299.582 rows=100 loops=1)
   ->  Sort  (cost=1490948.71..1490948.71 rows=1 width=193) (actual time=4299.564..4299.575 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=503973.93..1490948.70 rows=1 width=193) (actual time=2863.600..4296.811 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..102914.17 rows=6709 width=30) (actual time=0.029..610.037 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=503973.50..511975.74 rows=1600447 width=173) (actual time=2863.458..3347.009 rows=1603828 loops=1)
                     ->  Sort  (cost=503973.50..507974.62 rows=1600447 width=173) (actual time=2863.453..3141.711 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293448kB
                           ->  Nested Loop  (cost=2.00..202288.09 rows=1600447 width=173) (actual time=0.091..1298.136 rows=1604080 loops=1)
                                 ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=167) (actual time=0.072..54.113 rows=20051 loops=1)
                                       Join Filter: (nation.n_regionkey = region.r_regionkey)
                                       Rows Removed by Join Filter: 79949
                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.015..0.017 rows=1 loops=1)
                                             Filter: (r_name = 'AMERICA'::bpchar)
                                             Rows Removed by Filter: 4
                                       ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=171) (actual time=0.055..46.302 rows=100000 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=145) (actual time=0.012..9.326 rows=100000 loops=1)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.028..0.029 rows=25 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.015..0.020 rows=25 loops=1)
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.050 rows=80 loops=20051)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=162.40..162.41 rows=1 width=32) (actual time=0.022..0.022 rows=1 loops=6398)
                       ->  Nested Loop  (cost=0.86..162.39 rows=4 width=6) (actual time=0.012..0.020 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..161.10 rows=18 width=10) (actual time=0.007..0.018 rows=4 loops=6398)
                                   ->  Nested Loop  (cost=0.72..158.33 rows=18 width=10) (actual time=0.006..0.014 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.75 rows=18 width=10) (actual time=0.003..0.004 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=25592)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.735 ms
 Execution Time: 4336.854 ms
(49 rows)

                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2965562.50..2965562.53 rows=10 width=44) (actual time=19160.614..19160.620 rows=10 loops=1)
   ->  Sort  (cost=2965562.50..2973529.02 rows=3186606 width=44) (actual time=19160.612..19160.617 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2819525.48..2896701.09 rows=3186606 width=44) (actual time=19069.169..19134.123 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 73745kB
               ->  Hash Join  (cost=529988.01..2558622.11 rows=3186606 width=24) (actual time=4380.572..18808.409 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874294.30 rows=32659666 width=16) (actual time=0.076..10927.878 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=511696.37..511696.37 rows=1463331 width=12) (actual time=4372.108..4372.111 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=140083.03..511696.37 rows=1463331 width=12) (actual time=934.504..4003.972 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=81755.41..434156.07 rows=7319093 width=16) (actual time=505.385..2053.043 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..79925.63 rows=7319093 width=0) (actual time=440.472..440.472 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54578.56..54578.56 rows=299925 width=4) (actual time=427.040..427.041 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54578.56 rows=299925 width=4) (actual time=0.017..364.686 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.572 ms
 Execution Time: 19175.870 ms
(29 rows)

                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2584935.66..2584935.67 rows=1 width=24) (actual time=24205.512..24205.515 rows=1 loops=1)
   ->  Sort  (cost=2584935.66..2584935.68 rows=5 width=24) (actual time=24205.511..24205.513 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2584935.59..2584935.64 rows=5 width=24) (actual time=24205.473..24205.476 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2209848.72..2582180.69 rows=550979 width=16) (actual time=19236.179..24092.408 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7536.98..276715.15 rows=551078 width=20) (actual time=157.027..573.892 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7399.22 rows=551078 width=0) (actual time=96.058..96.058 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874294.30..1874294.30 rows=19993395 width=4) (actual time=19049.245..19049.245 rows=37929348 loops=1)
                           Buckets: 8388608  Batches: 8  Memory Usage: 232058kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874294.30 rows=19993395 width=4) (actual time=0.062..12701.139 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.193 ms
 Execution Time: 24209.810 ms
(22 rows)

                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2398833.69..2398833.69 rows=1 width=58) (actual time=16973.496..16973.503 rows=1 loops=1)
   ->  Sort  (cost=2398833.69..2398833.75 rows=25 width=58) (actual time=16973.494..16973.501 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2397930.75..2398833.56 rows=25 width=58) (actual time=16940.222..16973.470 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2397930.75..2398111.25 rows=72200 width=38) (actual time=16932.017..16935.590 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=414525.01..2392104.31 rows=72200 width=38) (actual time=2307.549..16901.522 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=409809.01..2377642.32 rows=1856377 width=50) (actual time=2258.179..16424.150 rows=1815327 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..1724343.84 rows=59980184 width=20) (actual time=0.066..5840.189 rows=59986052 loops=1)
                                 ->  Hash  (cost=404006.79..404006.79 rows=464178 width=38) (actual time=2255.910..2255.915 rows=453399 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 35976kB
                                       ->  Hash Join  (cost=94936.34..404006.79 rows=464178 width=38) (actual time=745.762..2128.131 rows=453399 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=31729.55..327454.88 rows=2320889 width=8) (actual time=248.079..1097.326 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31149.33 rows=2320889 width=0) (actual time=183.149..183.149 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Hash  (cost=59456.48..59456.48 rows=300025 width=38) (actual time=495.753..495.756 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                                   ->  Hash Join  (cost=2.51..59456.48 rows=300025 width=38) (actual time=0.074..417.831 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50828.25 rows=1500125 width=8) (actual time=0.007..134.275 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.053..0.055 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.043..0.051 rows=5 loops=1)
                                                                     Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.008..0.009 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.019..0.020 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=48.156..48.157 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.013..26.978 rows=100000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 4.672 ms
 Execution Time: 16974.970 ms
(44 rows)

                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1506226.23..1506226.24 rows=1 width=32) (actual time=3080.608..3080.610 rows=1 loops=1)
   ->  Aggregate  (cost=1506226.23..1506226.24 rows=1 width=32) (actual time=3080.607..3080.608 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=302761.51..1500275.31 rows=1190183 width=12) (actual time=1526.407..2626.689 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..302463.97 rows=1190183 width=0) (actual time=1340.522..1340.522 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.674 ms
 Execution Time: 3082.536 ms
(10 rows)

                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2514900.85..2514900.97 rows=1 width=116) (actual time=19225.948..19225.955 rows=1 loops=1)
   ->  GroupAggregate  (cost=2514900.85..2516083.28 rows=10036 width=116) (actual time=19225.946..19225.953 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2514900.85..2515048.27 rows=58965 width=96) (actual time=19215.441..19216.193 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1022297.61..2510228.59 rows=58965 width=96) (actual time=8744.912..19174.017 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=471235.52..1951438.79 rows=1416880 width=46) (actual time=2958.974..12970.709 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=467611.12..1865347.10 rows=18212932 width=24) (actual time=2920.004..10363.393 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..463057.89 rows=18212932 width=0) (actual time=2581.805..2581.805 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=38.917..38.919 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.078..36.979 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.016..25.507 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.028..0.029 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.020..0.023 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536064.34..536064.34 rows=1199820 width=30) (actual time=5778.185..5778.188 rows=1191175 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                           ->  Hash Join  (cost=56935.16..536064.34 rows=1199820 width=30) (actual time=478.555..5427.730 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..410889.44 rows=14997744 width=8) (actual time=0.016..2330.111 rows=15000000 loops=1)
                                 ->  Hash  (cost=55435.03..55435.03 rows=120010 width=30) (actual time=478.064..478.066 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55435.03 rows=120010 width=30) (actual time=0.043..448.906 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50828.25 rows=1500125 width=8) (actual time=0.009..298.846 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.020..0.020 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.012..0.015 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 4.082 ms
 Execution Time: 19229.570 ms
(45 rows)

                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1948595.80..1948596.03 rows=1 width=64) (actual time=4189.029..4189.038 rows=1 loops=1)
   ->  GroupAggregate  (cost=1948595.80..1949149.36 rows=2406 width=64) (actual time=4189.028..4189.036 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=1948595.80..1948651.96 rows=22464 width=70) (actual time=4181.125..4181.703 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=493331.87..1946972.17 rows=22464 width=70) (actual time=3133.259..4170.413 rows=23842 loops=1)
                     ->  Hash Join  (cost=493331.72..1946312.70 rows=22464 width=20) (actual time=3133.238..4153.249 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=488865.72..1941786.06 rows=23101 width=20) (actual time=3088.279..4098.630 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1451233.95 rows=388218 width=20) (actual time=0.103..907.073 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65962.46 rows=13334 width=4) (actual time=0.069..302.172 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..103.60 rows=29 width=24) (actual time=0.004..0.042 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=477709.90..477709.90 rows=892430 width=8) (actual time=3083.869..3083.874 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=124208.27..477709.90 rows=892430 width=8) (actual time=817.845..2866.247 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=61001.48..388845.75 rows=4462151 width=12) (actual time=339.322..1417.667 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..59885.94 rows=4462151 width=0) (actual time=276.387..276.387 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59456.48..59456.48 rows=300025 width=4) (actual time=476.429..476.432 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59456.48 rows=300025 width=4) (actual time=0.076..415.527 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50828.25 rows=1500125 width=8) (actual time=0.007..132.223 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.052..0.055 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.040..0.049 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.009 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=44.385..44.386 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.012..24.891 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 5.569 ms
 Execution Time: 4190.804 ms
(52 rows)

                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2284721.95..2284721.98 rows=1 width=90) (actual time=42278.639..42278.645 rows=1 loops=1)
   ->  GroupAggregate  (cost=2284721.95..2284725.06 rows=89 width=90) (actual time=42278.638..42278.643 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=2284721.95..2284722.17 rows=89 width=81) (actual time=42263.621..42268.043 rows=11401 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Sort Method: external merge  Disk: 211200kB
               ->  Nested Loop  (cost=66973.75..2284719.06 rows=89 width=81) (actual time=692.473..37714.122 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 39009119
                     ->  Nested Loop  (cost=66973.75..2284685.54 rows=89 width=31) (actual time=692.451..31852.888 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=66973.32..2284160.20 rows=89 width=31) (actual time=692.416..18903.750 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=66973.03..2283654.46 rows=89 width=35) (actual time=692.397..13325.425 rows=3248192 loops=1)
                                       ->  Hash Join  (cost=66972.59..342386.86 rows=323324 width=18) (actual time=692.366..3061.094 rows=433248 loops=1)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..254408.36 rows=8002236 width=14) (actual time=0.015..1267.424 rows=8000000 loops=1)
                                             ->  Hash  (cost=65962.46..65962.46 rows=80810 width=4) (actual time=691.732..691.733 rows=108312 loops=1)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4832kB
                                                   ->  Seq Scan on part  (cost=0.00..65962.46 rows=80810 width=4) (actual time=0.023..666.621 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..5.99 rows=1 width=29) (actual time=0.005..0.022 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..5.68 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..5.90 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.005..0.010 rows=25 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 8.664 ms
 Execution Time: 42309.324 ms
(31 rows)

