===== 10.sql jit=on =====
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2381932.17..2381932.22 rows=20 width=202) (actual time=14279.165..14279.174 rows=20 loops=1)
   ->  Sort  (cost=2381932.17..2383347.01 rows=565936 width=202) (actual time=13809.901..13809.908 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 34kB
         ->  HashAggregate  (cost=2359798.61..2366872.81 rows=565936 width=202) (actual time=13361.806..13700.794 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 5  Memory Usage: 262193kB  Disk Usage: 3376kB
               ->  Nested Loop  (cost=386247.05..2352724.41 rows=565936 width=182) (actual time=1541.546..12475.130 rows=1145402 loops=1)
                     ->  Hash Join  (cost=386246.90..2338835.29 rows=565936 width=160) (actual time=1541.508..12138.551 rows=1145402 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=284442.90..2197790.70 rows=565936 width=16) (actual time=672.394..10621.136 rows=1145402 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..1874356.75 rows=14853731 width=16) (actual time=0.080..7985.618 rows=14808183 loops=1)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 45177869
                                 ->  Hash  (cost=277299.04..277299.04 rows=571509 width=8) (actual time=668.476..668.478 rows=573160 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                       ->  Bitmap Heap Scan on orders  (cost=7814.40..277299.04 rows=571509 width=8) (actual time=119.063..564.940 rows=573160 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=233137
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7671.53 rows=571509 width=0) (actual time=63.043..63.043 rows=573160 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=50827.00..50827.00 rows=1500000 width=148) (actual time=861.198..861.198 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 150358kB
                                 ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=148) (actual time=0.041..369.180 rows=1500000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                           Cache Key: customer.c_nationkey
                           Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..2.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.285 ms
 JIT:
   Functions: 42
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 5.573 ms, Inlining 92.324 ms, Optimization 303.583 ms, Emission 165.847 ms, Total 567.327 ms
 Execution Time: 14334.221 ms
(37 rows)

===== 11.sql jit=on =====
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=94747.72..94747.72 rows=1 width=36) (actual time=1123.303..1123.309 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44307.19..44307.20 rows=1 width=32) (actual time=379.845..379.848 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..41907.18 rows=320000 width=10) (actual time=0.725..302.909 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.715..4.196 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.015 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.701..3.766 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.458..0.458 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.067 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50440.52..50707.19 rows=106667 width=36) (actual time=1123.301..1123.304 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=45107.18..49907.18 rows=106667 width=36) (actual time=1123.264..1123.266 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 135185kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..41907.18 rows=320000 width=14) (actual time=0.904..383.201 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.868..6.103 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.036..0.040 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.828..5.516 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.544..0.544 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=18) (actual time=0.004..0.086 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.722 ms
 Execution Time: 1136.492 ms
(38 rows)

===== 12.sql jit=on =====
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3030362.39..3031188.73 rows=1 width=27) (actual time=15849.633..15849.637 rows=1 loops=1)
   ->  GroupAggregate  (cost=3030362.39..3036146.78 rows=7 width=27) (actual time=15476.412..15476.415 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3030362.39..3031085.43 rows=289216 width=27) (actual time=15441.046..15447.479 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2477823.75..3004127.91 rows=289216 width=27) (actual time=11239.819..15376.240 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410912.00 rows=15000000 width=20) (actual time=0.022..928.857 rows=15000000 loops=1)
                     ->  Hash  (cost=2474208.55..2474208.55 rows=289216 width=15) (actual time=11237.812..11237.813 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474208.55 rows=289216 width=15) (actual time=0.164..11163.357 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.433 ms
 JIT:
   Functions: 19
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.737 ms, Inlining 60.411 ms, Optimization 201.261 ms, Emission 111.231 ms, Total 375.640 ms
 Execution Time: 15888.853 ms
(21 rows)

===== 13.sql jit=on =====
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=656745.18..656745.18 rows=1 width=16) (actual time=16395.812..16395.816 rows=1 loops=1)
   ->  Sort  (cost=656745.18..656745.68 rows=200 width=16) (actual time=16161.629..16161.633 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=656742.18..656744.18 rows=200 width=16) (actual time=16161.573..16161.582 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=619242.18..634242.18 rows=1500000 width=12) (actual time=15759.040..16028.834 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 172049kB
                     ->  Hash Right Join  (cost=57714.43..545067.99 rows=14834838 width=8) (actual time=368.221..11274.222 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448412.00 rows=14834838 width=8) (actual time=0.034..6011.710 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38964.43..38964.43 rows=1500000 width=4) (actual time=360.658..360.660 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38964.43 rows=1500000 width=4) (actual time=0.023..136.065 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.494 ms
 JIT:
   Functions: 22
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.508 ms, Inlining 61.005 ms, Optimization 116.291 ms, Emission 56.646 ms, Total 236.450 ms
 Execution Time: 16468.416 ms
(26 rows)

===== 14.sql jit=on =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1198750.46..1198750.47 rows=1 width=32) (actual time=2746.027..2746.031 rows=1 loops=1)
   ->  Aggregate  (cost=1198750.46..1198750.47 rows=1 width=32) (actual time=2434.974..2434.977 rows=1 loops=1)
         ->  Hash Join  (cost=105762.29..1185256.29 rows=771095 width=33) (actual time=1155.429..2144.261 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=19800.29..1097270.16 rows=771095 width=16) (actual time=266.174..938.892 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..19607.51 rows=771095 width=0) (actual time=151.105..151.106 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60962.00..60962.00 rows=2000000 width=25) (actual time=881.622..881.623 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 1  Memory Usage: 131903kB
                     ->  Seq Scan on part  (cost=0.00..60962.00 rows=2000000 width=25) (actual time=0.029..481.239 rows=2000000 loops=1)
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.335 ms
 JIT:
   Functions: 16
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.176 ms, Inlining 74.718 ms, Optimization 151.467 ms, Emission 84.589 ms, Total 312.950 ms
 Execution Time: 2789.822 ms
(19 rows)

===== 15.sql jit=on =====
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1239453.02..1240704.52 rows=100120 width=36) (actual time=3447.001..3489.879 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=58219.92..1216776.58 rows=2267644 width=16) (actual time=543.596..1840.747 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..57653.01 rows=2267644 width=0) (actual time=356.262..356.262 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.800 ms
 JIT:
   Functions: 9
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.514 ms, Inlining 62.858 ms, Optimization 100.518 ms, Emission 55.171 ms, Total 220.061 ms
 Execution Time: 3534.502 ms
(15 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2482938.61..2482948.76 rows=1 width=103) (actual time=6374.080..6374.085 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1241956.02..1241956.03 rows=1 width=32) (actual time=2967.210..2967.212 rows=1 loops=1)
           ->  HashAggregate  (cost=1239453.02..1240704.52 rows=100120 width=36) (actual time=2917.909..2961.874 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=58219.92..1216776.58 rows=2267644 width=16) (actual time=468.793..1560.365 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..57653.01 rows=2267644 width=0) (actual time=288.123..288.123 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1240982.59..1246066.26 rows=501 width=103) (actual time=5935.397..5935.399 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4826.45 rows=100000 width=71) (actual time=0.016..13.490 rows=69998 loops=1)
         ->  Sort  (cost=1240982.29..1240983.55 rows=501 width=36) (actual time=5918.640..5918.642 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1239453.02..1240959.83 rows=501 width=36) (actual time=5888.082..5918.632 rows=1 loops=1)
                     ->  HashAggregate  (cost=1239453.02..1240954.82 rows=501 width=36) (actual time=5888.080..5918.629 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=58219.92..1216776.58 rows=2267644 width=16) (actual time=457.790..1547.482 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..57653.01 rows=2267644 width=0) (actual time=277.946..277.947 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.534 ms
 JIT:
   Functions: 30
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 3.867 ms, Inlining 19.767 ms, Optimization 269.007 ms, Emission 149.510 ms, Total 442.150 ms
 Execution Time: 6387.373 ms
(35 rows)

DROP VIEW
===== 16.sql jit=on =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=403202.14..403202.14 rows=1 width=44) (actual time=6295.893..6295.897 rows=1 loops=1)
   ->  Sort  (cost=403202.14..403586.76 rows=153848 width=44) (actual time=6275.092..6275.096 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=393457.57..402432.90 rows=153848 width=44) (actual time=5854.834..6270.597 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=393457.57..394944.94 rows=594948 width=40) (actual time=5854.768..5962.496 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 141834kB
                     ->  Hash Join  (cost=98146.88..336394.90 rows=594948 width=40) (actual time=774.649..3033.892 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3466.46..231214.46 rows=4000000 width=8) (actual time=36.297..1464.150 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=10 width=4) (actual time=4.248..35.609 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90962.00..90962.00 rows=297474 width=40) (actual time=736.367..736.368 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90962.00 rows=297474 width=40) (actual time=0.018..666.915 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.567 ms
 JIT:
   Functions: 32
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 3.705 ms, Inlining 0.000 ms, Optimization 1.075 ms, Emission 23.489 ms, Total 28.268 ms
 Execution Time: 6340.553 ms
(31 rows)

===== 17-flattened.sql jit=on =====
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5567194.39..6182412.22 rows=1961670 width=36) (actual time=35363.063..55065.068 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 4  Batches: 5  Memory Usage: 262193kB  Disk Usage: 1517688kB
   ->  Seq Scan on lineitem  (cost=0.00..1724393.80 rows=59985180 width=9) (actual time=0.039..5309.456 rows=59986052 loops=1)
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.692 ms
 JIT:
   Functions: 11
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.193 ms, Inlining 92.374 ms, Optimization 103.564 ms, Emission 56.049 ms, Total 254.180 ms
 Execution Time: 55301.892 ms
(11 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=236396.95..236396.96 rows=1 width=32) (actual time=448.933..448.936 rows=1 loops=1)
   ->  Aggregate  (cost=236396.95..236396.96 rows=1 width=32) (actual time=433.961..433.962 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..236347.38 rows=19825 width=8) (actual time=0.174..433.310 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..85928.26 rows=1983 width=20) (actual time=0.154..360.476 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70962.00 rows=1983 width=4) (actual time=0.134..345.308 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.54 rows=1 width=16) (actual time=0.007..0.007 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..75.73 rows=10 width=17) (actual time=0.014..0.036 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.864 ms
 JIT:
   Functions: 20
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.781 ms, Inlining 0.000 ms, Optimization 0.724 ms, Emission 13.990 ms, Total 17.495 ms
 Execution Time: 451.807 ms
(21 rows)

DROP TABLE
===== 17.sql jit=on =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6424737.41..6424737.42 rows=1 width=32) (actual time=55991.353..55991.357 rows=1 loops=1)
   ->  Aggregate  (cost=6424737.41..6424737.42 rows=1 width=32) (actual time=55655.873..55655.876 rows=1 loops=1)
         ->  Nested Loop  (cost=5638181.62..6424688.80 rows=19445 width=8) (actual time=35738.174..55655.121 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5638181.18..6278165.10 rows=1945 width=40) (actual time=35736.287..55573.157 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5567194.39..6182412.22 rows=1961670 width=36) (actual time=35367.465..55027.396 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 4  Batches: 5  Memory Usage: 262193kB  Disk Usage: 1517688kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724393.80 rows=59985180 width=9) (actual time=0.022..5337.412 rows=59986052 loops=1)
                     ->  Hash  (cost=70962.00..70962.00 rows=1983 width=4) (actual time=368.746..368.746 rows=1996 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 87kB
                           ->  Seq Scan on part  (cost=0.00..70962.00 rows=1983 width=4) (actual time=0.225..368.359 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..75.21 rows=10 width=17) (actual time=0.017..0.040 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.544 ms
 JIT:
   Functions: 33
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.530 ms, Inlining 96.065 ms, Optimization 217.754 ms, Emission 121.419 ms, Total 439.769 ms
 Execution Time: 56178.921 ms
(26 rows)

===== 18.sql jit=on =====
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9939087.66..9939087.91 rows=100 width=71) (actual time=42087.664..42087.677 rows=99 loops=1)
   ->  Sort  (cost=9939087.66..9989062.96 rows=19990121 width=71) (actual time=41747.676..41747.684 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8573814.25..9175079.61 rows=19990121 width=71) (actual time=41744.650..41747.567 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 24657kB
               ->  Hash Join  (cost=69596.53..6618530.54 rows=19990121 width=44) (actual time=1620.584..41743.990 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=19.53..6496479.33 rows=19990121 width=25) (actual time=950.820..41073.954 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729701.24 rows=4998765 width=24) (actual time=653.985..28513.510 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650439.44 rows=15000000 width=20) (actual time=0.035..3261.807 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929289.59 rows=4998765 width=4) (actual time=560.028..24539.738 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404419.27 rows=59985180 width=9) (actual time=0.064..13589.005 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404419.27 rows=59985180 width=9) (actual time=0.018..9696.699 rows=59916431 loops=1)
                     ->  Hash  (cost=50827.00..50827.00 rows=1500000 width=23) (actual time=662.173..662.174 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=23) (actual time=0.033..362.643 rows=1500000 loops=1)
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.635 ms
 JIT:
   Functions: 30
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 3.581 ms, Inlining 70.146 ms, Optimization 174.820 ms, Emission 94.715 ms, Total 343.263 ms
 Execution Time: 42143.476 ms
(30 rows)

===== 19.sql jit=on =====
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            

 Limit  (cost=715536.97..715536.98 rows=1 width=32) (actual time=1108.660..1108.662 rows=1 loops=1)
   ->  Aggregate  (cost=715536.97..715536.98 rows=1 width=32) (actual time=757.339..757.340 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..715528.49 rows=1131 width=12) (actual time=3.761..756.822 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125962.00 rows=4785 width=30) (actual time=0.231..367.633 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..123.20 rows=1 width=21) (actual time=0.073..0.081 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.681 ms
 JIT:
   Functions: 12
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.563 ms, Inlining 75.500 ms, Optimization 167.885 ms, Emission 107.610 ms, Total 353.559 ms
 Execution Time: 1146.277 ms
(17 rows)

===== 1.sql jit=on =====
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3949738.47..3949738.47 rows=1 width=236) (actual time=64652.895..64652.897 rows=1 loops=1)
   ->  Sort  (cost=3949738.47..3949738.49 rows=6 width=236) (actual time=64318.731..64318.732 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3949738.28..3949738.44 rows=6 width=236) (actual time=64318.659..64318.668 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874356.75 rows=59296615 width=25) (actual time=0.069..9959.006 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.947 ms
 JIT:
   Functions: 10
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.935 ms, Inlining 76.830 ms, Optimization 161.437 ms, Emission 95.582 ms, Total 335.785 ms
 Execution Time: 64689.991 ms
(17 rows)

===== 20-flattened.sql jit=on =====
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2101543.67..2263167.94 rows=4843471 width=40) (actual time=14639.776..21604.450 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 8  Batches: 41  Memory Usage: 262225kB  Disk Usage: 318560kB
   ->  Bitmap Heap Scan on lineitem  (cost=233905.79..1495109.10 rows=9110754 width=13) (actual time=1653.637..9666.861 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231628.11 rows=9110754 width=0) (actual time=1331.102..1331.102 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.078 ms
 JIT:
   Functions: 13
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.697 ms, Inlining 82.056 ms, Optimization 153.898 ms, Emission 92.834 ms, Total 331.485 ms
 Execution Time: 21851.896 ms
(15 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=87471.02..87471.03 rows=1 width=51) (actual time=1464.119..1464.123 rows=1 loops=1)
   ->  Sort  (cost=87471.02..87471.03 rows=1 width=51) (actual time=1464.118..1464.121 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..87471.01 rows=1 width=51) (actual time=0.907..1462.447 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=55) (actual time=0.607..13.948 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.023..0.028 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=59) (actual time=0.579..13.042 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.326..0.326 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..21.26 rows=1 width=8) (actual time=0.353..0.353 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..20.76 rows=1 width=16) (actual time=0.304..0.347 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=12) (actual time=0.007..0.159 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.008..0.008 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.872 ms
 Execution Time: 1479.058 ms
(33 rows)

DROP TABLE
===== 20.sql jit=on =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2428660.40..2428660.41 rows=1 width=51) (actual time=36185.587..36185.593 rows=1 loops=1)
   ->  Sort  (cost=2428660.40..2428660.41 rows=1 width=51) (actual time=35730.024..35730.029 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2167781.37..2428660.39 rows=1 width=51) (actual time=16693.970..35728.290 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182645835
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=55) (actual time=0.042..23.120 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.027..0.032 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=59) (actual time=0.009..16.905 rows=100000 loops=1)
               ->  Materialize  (cost=2167781.37..2424133.08 rows=1 width=8) (actual time=3.575..6.971 rows=44603 loops=4095)
                     ->  Nested Loop  (cost=2167781.37..2424133.08 rows=1 width=8) (actual time=14641.114..22426.042 rows=59002 loops=1)
                           ->  Hash Join  (cost=2167780.94..2390554.06 rows=53331 width=44) (actual time=14641.078..22065.979 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2101543.67..2263167.94 rows=4843471 width=40) (actual time=14315.259..21209.017 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 41  Memory Usage: 262225kB  Disk Usage: 318560kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=233905.79..1495109.10 rows=9110754 width=13) (actual time=1630.106..9566.764 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231628.11 rows=9110754 width=0) (actual time=1305.021..1305.021 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65962.00..65962.00 rows=22022 width=4) (actual time=325.671..325.672 rows=21718 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1020kB
                                       ->  Seq Scan on part  (cost=0.00..65962.00 rows=22022 width=4) (actual time=0.038..322.018 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.006..0.006 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.964 ms
 JIT:
   Functions: 42
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 5.597 ms, Inlining 102.413 ms, Optimization 295.057 ms, Emission 159.755 ms, Total 562.823 ms
 Execution Time: 36269.519 ms
(42 rows)

===== 21.sql jit=on =====
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4271757.67..4271757.67 rows=1 width=34) (actual time=33363.887..33363.903 rows=100 loops=1)
   ->  Sort  (cost=4271757.67..4271757.67 rows=1 width=34) (actual time=32852.922..32852.932 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4271757.64..4271757.66 rows=1 width=34) (actual time=32844.588..32851.701 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4271757.64..4271757.64 rows=1 width=26) (actual time=32844.556..32847.427 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204856.57..4271757.63 rows=1 width=26) (actual time=15028.673..32693.655 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204856.00..4271750.09 rows=1 width=38) (actual time=15028.658..32410.257 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204855.57..4271742.78 rows=1 width=34) (actual time=15027.298..31882.311 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959781.23 rows=798844 width=34) (actual time=6.314..13093.454 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874356.75 rows=19995060 width=8) (actual time=0.064..9589.091 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=6.218..6.220 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=0.637..5.748 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.017..0.020 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=0.613..5.452 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.358..0.359 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874356.75..1874356.75 rows=19995060 width=8) (actual time=14990.600..14990.600 rows=37929348 loops=1)
                                             Buckets: 8388608  Batches: 8  Memory Usage: 250561kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874356.75 rows=19995060 width=8) (actual time=0.019..9874.270 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.004..0.004 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 3.245 ms
 JIT:
   Functions: 47
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 5.264 ms, Inlining 71.041 ms, Optimization 284.479 ms, Emission 155.020 ms, Total 515.805 ms
 Execution Time: 33419.632 ms
(51 rows)

===== 22.sql jit=on =====
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163211.42..163211.45 rows=1 width=72) (actual time=1832.449..1832.452 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75321.32..75321.33 rows=1 width=32) (actual time=869.235..869.237 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75202.00 rows=47728 width=6) (actual time=0.009..837.508 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87890.09..88093.81 rows=7408 width=72) (actual time=1814.872..1814.873 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87890.09..87908.61 rows=7408 width=38) (actual time=1813.128..1813.532 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87413.94 rows=7408 width=38) (actual time=869.295..1796.312 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75202.00 rows=17500 width=26) (actual time=869.272..1486.530 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.28 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.553 ms
 JIT:
   Functions: 17
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.405 ms, Inlining 0.000 ms, Optimization 0.823 ms, Emission 16.486 ms, Total 19.714 ms
 Execution Time: 1869.269 ms
(25 rows)

===== 2-flattened.sql jit=on =====
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=207697.17..223697.17 rows=1600000 width=36) (actual time=2550.484..2866.836 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 1  Memory Usage: 180241kB
   ->  Nested Loop  (cost=42.10..199697.17 rows=1600000 width=10) (actual time=18.929..1906.332 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=18.905..44.096 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=18.169..18.200 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.042..0.055 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.725..0.725 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=18.111..18.114 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=0.657..4.645 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.405..0.405 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.004..0.083 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.605 ms
 JIT:
   Functions: 24
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.820 ms, Inlining 0.000 ms, Optimization 0.905 ms, Emission 16.899 ms, Total 20.625 ms
 Execution Time: 2971.262 ms
(27 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=402016.96..402016.97 rows=1 width=192) (actual time=645.381..645.394 rows=100 loops=1)
   ->  Sort  (cost=402016.96..402016.97 rows=1 width=192) (actual time=623.812..623.818 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=0.72..402016.95 rows=1 width=192) (actual time=0.100..621.106 rows=4737 loops=1)
               Join Filter: (nation.n_regionkey = region.r_regionkey)
               ->  Nested Loop  (cost=0.72..402015.88 rows=1 width=196) (actual time=0.096..616.035 rows=4737 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 43913
                     ->  Nested Loop  (cost=0.72..402014.31 rows=1 width=170) (actual time=0.086..606.234 rows=4737 loops=1)
                           ->  Nested Loop  (cost=0.43..402014.00 rows=1 width=34) (actual time=0.072..586.560 rows=4737 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..70962.00 rows=8033 width=30) (actual time=0.018..480.028 rows=8046 loops=1)
                                       Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                                       Rows Removed by Filter: 1991954
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..41.20 rows=1 width=14) (actual time=0.011..0.013 rows=1 loops=8046)
                                       Index Cond: (ps_partkey = part.p_partkey)
                                       Filter: ((SubPlan 1) = ps_supplycost)
                                       Rows Removed by Filter: 3
                                       SubPlan 1
                                         ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.002..0.002 rows=1 loops=32184)
                                               Index Cond: (ps_partkey = part.p_partkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.31 rows=1 width=144) (actual time=0.004..0.004 rows=1 loops=4737)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.001 rows=10 loops=4737)
               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=4737)
                     Filter: (r_name = 'AMERICA'::bpchar)
                     Rows Removed by Filter: 1
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.354 ms
 JIT:
   Functions: 31
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 3.270 ms, Inlining 0.000 ms, Optimization 0.816 ms, Emission 20.446 ms, Total 24.532 ms
 Execution Time: 648.789 ms
(34 rows)

DROP TABLE
===== 2.sql jit=on =====
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=724918.21..724918.21 rows=1 width=192) (actual time=3644.265..3644.282 rows=100 loops=1)
   ->  Sort  (cost=724918.21..724918.21 rows=1 width=192) (actual time=2952.318..2952.329 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Hash Join  (cost=265351.72..724918.20 rows=1 width=192) (actual time=2125.847..2950.242 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70962.00 rows=8033 width=30) (actual time=0.030..403.806 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=202288.72..202288.72 rows=1600000 width=172) (actual time=2118.021..2118.025 rows=1604080 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 180174kB
                     ->  Nested Loop  (cost=2.00..202288.72 rows=1600000 width=172) (actual time=0.112..1457.787 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.081..51.872 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.020..0.023 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.057..45.878 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.013..8.758 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.031..0.032 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.018..0.025 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.063 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=43.48..43.49 rows=1 width=32) (actual time=0.019..0.019 rows=1 loops=12783)
                       ->  Nested Loop  (cost=0.86..43.48 rows=1 width=6) (actual time=0.013..0.018 rows=1 loops=12783)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.000..0.001 rows=1 loops=12783)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..42.36 rows=4 width=10) (actual time=0.007..0.017 rows=4 loops=12783)
                                   ->  Nested Loop  (cost=0.72..41.74 rows=4 width=10) (actual time=0.006..0.013 rows=4 loops=12783)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.50 rows=4 width=10) (actual time=0.003..0.004 rows=4 loops=12783)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=51132)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=51132)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 3.175 ms
 JIT:
   Functions: 57
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.752 ms, Inlining 73.472 ms, Optimization 390.844 ms, Emission 227.085 ms, Total 698.153 ms
 Execution Time: 3695.252 ms
(49 rows)

===== 3.sql jit=on =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2956389.32..2956389.34 rows=10 width=44) (actual time=16914.521..16914.528 rows=10 loops=1)
   ->  Sort  (cost=2956389.32..2964246.83 rows=3143005 width=44) (actual time=16440.117..16440.122 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2812350.46..2888470.11 rows=3143005 width=44) (actual time=16365.017..16420.681 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 73745kB
               ->  Hash Join  (cost=527413.18..2555016.92 rows=3143005 width=24) (actual time=4343.687..16170.640 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874356.75 rows=32484518 width=16) (actual time=0.055..8480.752 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=509271.82..509271.82 rows=1451309 width=12) (actual time=4335.949..4335.952 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=139059.93..509271.82 rows=1451309 width=12) (actual time=925.590..4017.740 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=80717.31..431959.74 rows=7226435 width=16) (actual time=458.113..2161.510 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..78910.70 rows=7226435 width=0) (actual time=394.081..394.081 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54577.00..54577.00 rows=301250 width=4) (actual time=465.557..465.558 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54577.00 rows=301250 width=4) (actual time=0.025..415.893 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.932 ms
 JIT:
   Functions: 31
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 3.896 ms, Inlining 73.156 ms, Optimization 257.627 ms, Emission 143.241 ms, Total 477.919 ms
 Execution Time: 16973.544 ms
(33 rows)

===== 4.sql jit=on =====
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2585686.08..2585686.08 rows=1 width=24) (actual time=18747.560..18747.564 rows=1 loops=1)
   ->  Sort  (cost=2585686.08..2585686.09 rows=5 width=24) (actual time=18492.110..18492.113 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2585686.00..2585686.05 rows=5 width=24) (actual time=18492.047..18492.051 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2210050.96..2582889.85 rows=559230 width=16) (actual time=14148.204..18409.081 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7649.96..276952.48 rows=559368 width=20) (actual time=125.195..585.494 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7510.12 rows=559368 width=0) (actual time=68.952..68.952 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874356.75..1874356.75 rows=19995060 width=4) (actual time=13992.652..13992.653 rows=37929348 loops=1)
                           Buckets: 8388608  Batches: 8  Memory Usage: 232058kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874356.75 rows=19995060 width=4) (actual time=0.090..9334.884 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.480 ms
 JIT:
   Functions: 19
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.258 ms, Inlining 67.083 ms, Optimization 123.458 ms, Emission 64.663 ms, Total 257.461 ms
 Execution Time: 18800.098 ms
(26 rows)

===== 5.sql jit=on =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2372749.59..2372749.59 rows=1 width=58) (actual time=18084.314..18084.322 rows=1 loops=1)
   ->  Sort  (cost=2372749.59..2372749.65 rows=25 width=58) (actual time=17472.396..17472.404 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2371841.83..2372749.46 rows=25 width=58) (actual time=17449.976..17472.348 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2371841.83..2372023.29 rows=72586 width=38) (actual time=17444.439..17447.570 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=422354.07..2365981.45 rows=72586 width=38) (actual time=2301.041..17415.275 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=417638.07..2351727.05 rows=1816836 width=50) (actual time=2258.273..16958.608 rows=1815327 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=354433.56..2236288.50 rows=9084180 width=20) (actual time=1712.160..15286.532 rows=9108027 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1724393.80 rows=59985180 width=20) (actual time=0.058..5696.251 rows=59986052 loops=1)
                                       ->  Hash  (cost=326038.49..326038.49 rows=2271606 width=8) (actual time=1697.042..1697.044 rows=2276638 loops=1)
                                             Buckets: 4194304  Batches: 1  Memory Usage: 121700kB
                                             ->  Bitmap Heap Scan on orders  (cost=31052.40..326038.49 rows=2271606 width=8) (actual time=216.448..1254.810 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..30484.50 rows=2271606 width=0) (actual time=152.214..152.215 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=59454.51..59454.51 rows=300000 width=38) (actual time=544.057..544.060 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                       ->  Hash Join  (cost=2.51..59454.51 rows=300000 width=38) (actual time=0.075..480.146 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=8) (actual time=0.011..131.047 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.051..0.053 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.040..0.048 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.008..0.009 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=41.572..41.573 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.021..28.162 rows=100000 loops=1)
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 4.840 ms
 JIT:
   Functions: 55
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 5.978 ms, Inlining 74.319 ms, Optimization 345.299 ms, Emission 191.825 ms, Total 617.421 ms
 Execution Time: 18132.931 ms
(48 rows)

===== 6.sql jit=on =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1504833.08..1504833.09 rows=1 width=32) (actual time=2896.493..2896.495 rows=1 loops=1)
   ->  Aggregate  (cost=1504833.08..1504833.09 rows=1 width=32) (actual time=2700.896..2700.897 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=300440.21..1498847.89 rows=1197038 width=12) (actual time=1239.760..2405.575 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..300140.95 rows=1197038 width=0) (actual time=1052.958..1052.958 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.886 ms
 JIT:
   Functions: 6
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.130 ms, Inlining 72.981 ms, Optimization 78.209 ms, Emission 44.202 ms, Total 196.521 ms
 Execution Time: 2935.014 ms
(14 rows)

===== 7.sql jit=on =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2516667.03..2516667.15 rows=1 width=116) (actual time=19968.948..19968.960 rows=1 loops=1)
   ->  GroupAggregate  (cost=2516667.03..2517879.61 rows=10096 width=116) (actual time=19188.826..19188.837 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2516667.03..2516818.62 rows=60637 width=96) (actual time=19181.498..19182.143 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1022879.61..2511850.05 rows=60637 width=96) (actual time=8188.618..19144.436 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=471784.21..1952807.72 rows=1457071 width=46) (actual time=2751.658..13327.126 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=468159.81..1866230.45 rows=18235243 width=24) (actual time=2718.019..11143.018 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..463600.99 rows=18235243 width=0) (actual time=2376.917..2376.918 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=33.593..33.599 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.067..32.610 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.030..24.226 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.030..0.035 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.025..0.027 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536095.40..536095.40 rows=1200000 width=30) (actual time=5429.041..5429.044 rows=1191175 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                           ->  Hash Join  (cost=56933.40..536095.40 rows=1200000 width=30) (actual time=473.388..5154.083 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..410912.00 rows=15000000 width=8) (actual time=0.022..2324.729 rows=15000000 loops=1)
                                 ->  Hash  (cost=55433.40..55433.40 rows=120000 width=30) (actual time=472.867..472.868 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55433.40 rows=120000 width=30) (actual time=0.042..448.887 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=8) (actual time=0.013..326.273 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.020..0.020 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.014..0.016 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 4.342 ms
 JIT:
   Functions: 60
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.902 ms, Inlining 73.311 ms, Optimization 456.150 ms, Emission 250.068 ms, Total 786.431 ms
 Execution Time: 20020.394 ms
(49 rows)

===== 8.sql jit=on =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2006816.19..2006816.43 rows=1 width=64) (actual time=4810.118..4810.126 rows=1 loops=1)
   ->  GroupAggregate  (cost=2006816.19..2007400.28 rows=2406 width=64) (actual time=4111.200..4111.208 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=2006816.19..2006875.74 rows=23821 width=70) (actual time=4105.749..4106.230 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=496827.98..2005084.41 rows=23821 width=70) (actual time=2989.171..4097.066 rows=23842 loops=1)
                     ->  Hash Join  (cost=496827.83..2004388.37 rows=23821 width=20) (actual time=2989.149..4085.568 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=492361.83..1999859.76 rows=23849 width=20) (actual time=2958.091..4046.878 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1505787.96 rows=392513 width=20) (actual time=0.077..989.533 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65962.00 rows=13087 width=4) (actual time=0.047..305.677 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..109.71 rows=31 width=24) (actual time=0.004..0.050 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=480968.82..480968.82 rows=911406 width=8) (actual time=2953.919..2953.924 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=125498.48..480968.82 rows=911406 width=8) (actual time=664.637..2771.607 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=62293.97..391561.39 rows=4557028 width=12) (actual time=302.865..1566.355 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..61154.71 rows=4557028 width=0) (actual time=240.721..240.722 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59454.51..59454.51 rows=300000 width=4) (actual time=359.873..359.876 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59454.51 rows=300000 width=4) (actual time=0.050..310.987 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=8) (actual time=0.005..107.014 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.036..0.039 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.026..0.033 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.004 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=30.554..30.554 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.012..18.275 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 5.671 ms
 JIT:
   Functions: 67
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.235 ms, Inlining 83.723 ms, Optimization 397.576 ms, Emission 217.046 ms, Total 705.580 ms
 Execution Time: 4855.559 ms
(56 rows)

===== 9.sql jit=on =====
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3148299.14..3148299.14 rows=1 width=90) (actual time=32250.997..32251.004 rows=1 loops=1)
   ->  Sort  (cost=3148299.14..3148449.51 rows=60150 width=90) (actual time=31669.287..31669.293 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3147096.14..3147998.39 rows=60150 width=90) (actual time=31668.766..31669.178 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=2529385.27..3087272.88 rows=3418472 width=81) (actual time=22346.311..29285.192 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=2529383.70..3068230.42 rows=3418472 width=31) (actual time=22346.263..28595.829 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..410912.00 rows=15000000 width=8) (actual time=0.016..1016.200 rows=15000000 loops=1)
                           ->  Hash  (cost=2486652.80..2486652.80 rows=3418472 width=31) (actual time=22331.076..22331.080 rows=3248192 loops=1)
                                 Buckets: 4194304  Batches: 1  Memory Usage: 244992kB
                                 ->  Hash Join  (cost=485303.42..2486652.80 rows=3418472 width=31) (actual time=4065.035..21403.619 rows=3248192 loops=1)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=480837.42..2473202.17 rows=3422574 width=35) (actual time=4031.620..20566.411 rows=3248192 loops=1)
                                             Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                             ->  Hash Join  (cost=67388.43..1949243.66 rows=3422574 width=33) (actual time=609.993..14712.184 rows=3248192 loops=1)
                                                   Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                   ->  Seq Scan on lineitem  (cost=0.00..1724393.80 rows=59985180 width=29) (actual time=0.023..5470.736 rows=59986052 loops=1)
                                                   ->  Hash  (cost=65962.00..65962.00 rows=114114 width=4) (actual time=609.474..609.475 rows=108312 loops=1)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 4832kB
                                                         ->  Seq Scan on part  (cost=0.00..65962.00 rows=114114 width=4) (actual time=0.021..590.820 rows=108312 loops=1)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 1891688
                                             ->  Hash  (cost=254386.00..254386.00 rows=8000000 width=14) (actual time=3390.518..3390.519 rows=8000000 loops=1)
                                                   Buckets: 8388608  Batches: 2  Memory Usage: 253041kB
                                                   ->  Seq Scan on partsupp  (cost=0.00..254386.00 rows=8000000 width=14) (actual time=0.019..1701.949 rows=8000000 loops=1)
                                       ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=32.939..32.940 rows=100000 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.015..20.521 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.035..0.036 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.023..0.028 rows=25 loops=1)
 Settings: effective_io_concurrency = '64', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 8.137 ms
 JIT:
   Functions: 54
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 5.761 ms, Inlining 75.191 ms, Optimization 329.122 ms, Emission 176.937 ms, Total 587.011 ms
 Execution Time: 32316.797 ms
(42 rows)

===== 10.sql jit=off =====
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2381932.17..2381932.22 rows=20 width=202) (actual time=16660.957..16660.965 rows=20 loops=1)
   ->  Sort  (cost=2381932.17..2383347.01 rows=565936 width=202) (actual time=16660.955..16660.961 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 34kB
         ->  HashAggregate  (cost=2359798.61..2366872.81 rows=565936 width=202) (actual time=16279.200..16549.295 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 5  Memory Usage: 262193kB  Disk Usage: 3376kB
               ->  Nested Loop  (cost=386247.05..2352724.41 rows=565936 width=182) (actual time=1660.651..15382.483 rows=1145402 loops=1)
                     ->  Hash Join  (cost=386246.90..2338835.29 rows=565936 width=160) (actual time=1660.626..14972.819 rows=1145402 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=284442.90..2197790.70 rows=565936 width=16) (actual time=775.703..13339.642 rows=1145402 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..1874356.75 rows=14853731 width=16) (actual time=0.032..10544.340 rows=14808183 loops=1)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 45177869
                                 ->  Hash  (cost=277299.04..277299.04 rows=571509 width=8) (actual time=771.863..771.864 rows=573160 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                       ->  Bitmap Heap Scan on orders  (cost=7814.40..277299.04 rows=571509 width=8) (actual time=122.775..667.236 rows=573160 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=233137
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7671.53 rows=571509 width=0) (actual time=65.590..65.590 rows=573160 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=50827.00..50827.00 rows=1500000 width=148) (actual time=876.332..876.333 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 150358kB
                                 ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=148) (actual time=0.022..372.781 rows=1500000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                           Cache Key: customer.c_nationkey
                           Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..2.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.339 ms
 Execution Time: 16675.317 ms
(33 rows)

===== 11.sql jit=off =====
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=94747.72..94747.72 rows=1 width=36) (actual time=1368.364..1368.370 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44307.19..44307.20 rows=1 width=32) (actual time=420.174..420.178 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..41907.18 rows=320000 width=10) (actual time=0.725..339.567 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.716..4.131 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.017 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.699..3.654 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.452..0.453 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.074 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50440.52..50707.19 rows=106667 width=36) (actual time=1368.362..1368.364 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=45107.18..49907.18 rows=106667 width=36) (actual time=1368.323..1368.326 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 135185kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..41907.18 rows=320000 width=14) (actual time=0.861..559.695 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.833..5.382 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.027..0.031 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.802..4.791 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.549..0.550 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=18) (actual time=0.005..0.128 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.837 ms
 Execution Time: 1382.358 ms
(38 rows)

===== 12.sql jit=off =====
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3030362.39..3031188.73 rows=1 width=27) (actual time=18901.316..18901.320 rows=1 loops=1)
   ->  GroupAggregate  (cost=3030362.39..3036146.78 rows=7 width=27) (actual time=18901.315..18901.317 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3030362.39..3031085.43 rows=289216 width=27) (actual time=18858.916..18865.335 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2477823.75..3004127.91 rows=289216 width=27) (actual time=14619.320..18795.335 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410912.00 rows=15000000 width=20) (actual time=0.011..989.988 rows=15000000 loops=1)
                     ->  Hash  (cost=2474208.55..2474208.55 rows=289216 width=15) (actual time=14617.235..14617.236 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474208.55 rows=289216 width=15) (actual time=0.231..14539.719 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.487 ms
 Execution Time: 18903.443 ms
(17 rows)

===== 13.sql jit=off =====
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=656745.18..656745.18 rows=1 width=16) (actual time=18468.255..18468.260 rows=1 loops=1)
   ->  Sort  (cost=656745.18..656745.68 rows=200 width=16) (actual time=18468.253..18468.257 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=656742.18..656744.18 rows=200 width=16) (actual time=18468.210..18468.219 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=619242.18..634242.18 rows=1500000 width=12) (actual time=17982.699..18294.613 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 172049kB
                     ->  Hash Right Join  (cost=57714.43..545067.99 rows=14834838 width=8) (actual time=385.122..12885.099 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448412.00 rows=14834838 width=8) (actual time=0.014..6987.450 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38964.43..38964.43 rows=1500000 width=4) (actual time=376.847..376.848 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38964.43 rows=1500000 width=4) (actual time=0.036..145.947 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.526 ms
 Execution Time: 18501.341 ms
(22 rows)

===== 14.sql jit=off =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1198750.46..1198750.47 rows=1 width=32) (actual time=2677.944..2677.948 rows=1 loops=1)
   ->  Aggregate  (cost=1198750.46..1198750.47 rows=1 width=32) (actual time=2677.942..2677.946 rows=1 loops=1)
         ->  Hash Join  (cost=105762.29..1185256.29 rows=771095 width=33) (actual time=1193.354..2368.166 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=19800.29..1097270.16 rows=771095 width=16) (actual time=303.389..1104.222 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..19607.51 rows=771095 width=0) (actual time=187.269..187.270 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60962.00..60962.00 rows=2000000 width=25) (actual time=882.255..882.256 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 1  Memory Usage: 131903kB
                     ->  Seq Scan on part  (cost=0.00..60962.00 rows=2000000 width=25) (actual time=0.024..473.049 rows=2000000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.414 ms
 Execution Time: 2680.932 ms
(15 rows)

===== 15.sql jit=off =====
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1239453.02..1240704.52 rows=100120 width=36) (actual time=3834.764..3884.726 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=58219.92..1216776.58 rows=2267644 width=16) (actual time=548.556..2114.168 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..57653.01 rows=2267644 width=0) (actual time=361.261..361.262 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.894 ms
 Execution Time: 3892.130 ms
(11 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2482938.61..2482948.76 rows=1 width=103) (actual time=6357.605..6357.609 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1241956.02..1241956.03 rows=1 width=32) (actual time=3149.061..3149.063 rows=1 loops=1)
           ->  HashAggregate  (cost=1239453.02..1240704.52 rows=100120 width=36) (actual time=3099.066..3143.142 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=58219.92..1216776.58 rows=2267644 width=16) (actual time=463.228..1609.009 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..57653.01 rows=2267644 width=0) (actual time=282.390..282.390 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1240982.59..1246066.26 rows=501 width=103) (actual time=6357.603..6357.605 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4826.45 rows=100000 width=71) (actual time=0.011..14.262 rows=69998 loops=1)
         ->  Sort  (cost=1240982.29..1240983.55 rows=501 width=36) (actual time=6339.244..6339.246 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1239453.02..1240959.83 rows=501 width=36) (actual time=6307.923..6339.239 rows=1 loops=1)
                     ->  HashAggregate  (cost=1239453.02..1240954.82 rows=501 width=36) (actual time=6307.921..6339.235 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=58219.92..1216776.58 rows=2267644 width=16) (actual time=491.472..1636.028 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..57653.01 rows=2267644 width=0) (actual time=309.504..309.504 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.541 ms
 Execution Time: 6365.250 ms
(31 rows)

DROP VIEW
===== 16.sql jit=off =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=403202.14..403202.14 rows=1 width=44) (actual time=6269.963..6269.967 rows=1 loops=1)
   ->  Sort  (cost=403202.14..403586.76 rows=153848 width=44) (actual time=6269.961..6269.964 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=393457.57..402432.90 rows=153848 width=44) (actual time=5834.150..6265.428 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=393457.57..394944.94 rows=594948 width=40) (actual time=5834.103..5939.166 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 141834kB
                     ->  Hash Join  (cost=98146.88..336394.90 rows=594948 width=40) (actual time=825.930..3014.981 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3466.46..231214.46 rows=4000000 width=8) (actual time=34.147..1397.593 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=10 width=4) (actual time=0.188..34.087 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90962.00..90962.00 rows=297474 width=40) (actual time=789.659..789.660 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90962.00 rows=297474 width=40) (actual time=0.023..720.066 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.663 ms
 Execution Time: 6276.197 ms
(27 rows)

===== 17-flattened.sql jit=off =====
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5567194.39..6182412.22 rows=1961670 width=36) (actual time=37053.094..58550.780 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 4  Batches: 5  Memory Usage: 262193kB  Disk Usage: 1517688kB
   ->  Seq Scan on lineitem  (cost=0.00..1724393.80 rows=59985180 width=9) (actual time=0.042..5282.502 rows=59986052 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.781 ms
 Execution Time: 58747.910 ms
(7 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=236396.95..236396.96 rows=1 width=32) (actual time=421.483..421.485 rows=1 loops=1)
   ->  Aggregate  (cost=236396.95..236396.96 rows=1 width=32) (actual time=421.481..421.483 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..236347.38 rows=19825 width=8) (actual time=0.146..420.861 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..85928.26 rows=1983 width=21) (actual time=0.128..344.561 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70962.00 rows=1983 width=4) (actual time=0.114..329.240 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.54 rows=1 width=17) (actual time=0.007..0.007 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..75.73 rows=10 width=17) (actual time=0.015..0.038 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.842 ms
 Execution Time: 421.522 ms
(17 rows)

DROP TABLE
===== 17.sql jit=off =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6424737.41..6424737.42 rows=1 width=32) (actual time=58670.059..58670.063 rows=1 loops=1)
   ->  Aggregate  (cost=6424737.41..6424737.42 rows=1 width=32) (actual time=58670.058..58670.060 rows=1 loops=1)
         ->  Nested Loop  (cost=5638181.62..6424688.80 rows=19445 width=8) (actual time=37130.624..58669.312 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5638181.18..6278165.10 rows=1945 width=40) (actual time=37128.726..58583.678 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5567194.39..6182412.22 rows=1961670 width=36) (actual time=36655.988..57935.042 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 4  Batches: 5  Memory Usage: 262193kB  Disk Usage: 1517688kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724393.80 rows=59985180 width=9) (actual time=0.020..5203.497 rows=59986052 loops=1)
                     ->  Hash  (cost=70962.00..70962.00 rows=1983 width=4) (actual time=472.653..472.654 rows=1996 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 87kB
                           ->  Seq Scan on part  (cost=0.00..70962.00 rows=1983 width=4) (actual time=0.307..472.126 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..75.21 rows=10 width=17) (actual time=0.018..0.042 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.695 ms
 Execution Time: 58809.484 ms
(22 rows)

===== 18.sql jit=off =====
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9939087.66..9939087.91 rows=100 width=71) (actual time=45587.465..45587.479 rows=99 loops=1)
   ->  Sort  (cost=9939087.66..9989062.96 rows=19990121 width=71) (actual time=45587.464..45587.471 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8573814.25..9175079.61 rows=19990121 width=71) (actual time=45584.419..45587.349 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 24657kB
               ->  Hash Join  (cost=69596.53..6618530.54 rows=19990121 width=44) (actual time=1748.015..45583.725 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=19.53..6496479.33 rows=19990121 width=25) (actual time=1054.139..44889.499 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729701.24 rows=4998765 width=24) (actual time=731.910..31389.489 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650439.44 rows=15000000 width=20) (actual time=0.040..3318.810 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929289.59 rows=4998765 width=4) (actual time=632.179..27192.304 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404419.27 rows=59985180 width=9) (actual time=0.082..13918.315 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404419.27 rows=59985180 width=9) (actual time=0.033..9928.094 rows=59916431 loops=1)
                     ->  Hash  (cost=50827.00..50827.00 rows=1500000 width=23) (actual time=686.248..686.249 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=23) (actual time=0.028..386.563 rows=1500000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.656 ms
 Execution Time: 45602.559 ms
(26 rows)

===== 19.sql jit=off =====


 Limit  (cost=715536.97..715536.98 rows=1 width=32) (actual time=1122.970..1122.972 rows=1 loops=1)
   ->  Aggregate  (cost=715536.97..715536.98 rows=1 width=32) (actual time=1122.969..1122.970 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..715528.49 rows=1131 width=12) (actual time=5.111..1122.416 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125962.00 rows=4785 width=30) (actual time=0.378..632.140 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..123.20 rows=1 width=21) (actual time=0.092..0.102 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.755 ms
 Execution Time: 1123.058 ms
(13 rows)

===== 1.sql jit=off =====
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3949738.47..3949738.47 rows=1 width=236) (actual time=72119.420..72119.421 rows=1 loops=1)
   ->  Sort  (cost=3949738.47..3949738.49 rows=6 width=236) (actual time=72119.418..72119.419 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3949738.28..3949738.44 rows=6 width=236) (actual time=72119.372..72119.381 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874356.75 rows=59296615 width=25) (actual time=0.049..12175.420 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.998 ms
 Execution Time: 72119.501 ms
(13 rows)

===== 20-flattened.sql jit=off =====
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2101543.67..2263167.94 rows=4843471 width=40) (actual time=14598.103..21721.601 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 8  Batches: 41  Memory Usage: 262225kB  Disk Usage: 318560kB
   ->  Bitmap Heap Scan on lineitem  (cost=233905.79..1495109.10 rows=9110754 width=13) (actual time=1703.935..9791.123 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231628.11 rows=9110754 width=0) (actual time=1370.458..1370.458 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.964 ms
 Execution Time: 21923.411 ms
(11 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=87471.02..87471.03 rows=1 width=51) (actual time=1442.497..1442.500 rows=1 loops=1)
   ->  Sort  (cost=87471.02..87471.03 rows=1 width=51) (actual time=1442.495..1442.497 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..87471.01 rows=1 width=51) (actual time=0.891..1440.839 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=55) (actual time=0.620..13.228 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.024..0.028 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=59) (actual time=0.591..12.246 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.338..0.338 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..21.26 rows=1 width=8) (actual time=0.348..0.348 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..20.76 rows=1 width=16) (actual time=0.299..0.342 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=12) (actual time=0.007..0.149 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.008..0.008 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.853 ms
 Execution Time: 1458.436 ms
(33 rows)

DROP TABLE
===== 20.sql jit=off =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2428660.40..2428660.41 rows=1 width=51) (actual time=40045.307..40045.312 rows=1 loops=1)
   ->  Sort  (cost=2428660.40..2428660.41 rows=1 width=51) (actual time=40045.305..40045.309 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2167781.37..2428660.39 rows=1 width=51) (actual time=16897.947..40043.568 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182645835
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=55) (actual time=0.043..24.181 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.030..0.034 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=59) (actual time=0.008..15.774 rows=100000 loops=1)
               ->  Materialize  (cost=2167781.37..2424133.08 rows=1 width=8) (actual time=3.614..7.092 rows=44603 loops=4095)
                     ->  Nested Loop  (cost=2167781.37..2424133.08 rows=1 width=8) (actual time=14797.780..22914.525 rows=59002 loops=1)
                           ->  Hash Join  (cost=2167780.94..2390554.06 rows=53331 width=44) (actual time=14797.744..22550.851 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2101543.67..2263167.94 rows=4843471 width=40) (actual time=14390.216..21600.341 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 41  Memory Usage: 262225kB  Disk Usage: 318560kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=233905.79..1495109.10 rows=9110754 width=13) (actual time=1647.718..9587.391 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231628.11 rows=9110754 width=0) (actual time=1315.776..1315.776 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65962.00..65962.00 rows=22022 width=4) (actual time=407.373..407.374 rows=21718 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1020kB
                                       ->  Seq Scan on part  (cost=0.00..65962.00 rows=22022 width=4) (actual time=0.042..403.185 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.006..0.006 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.919 ms
 Execution Time: 40090.093 ms
(38 rows)

===== 21.sql jit=off =====
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4271757.67..4271757.67 rows=1 width=34) (actual time=38530.055..38530.070 rows=100 loops=1)
   ->  Sort  (cost=4271757.67..4271757.67 rows=1 width=34) (actual time=38530.053..38530.062 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4271757.64..4271757.66 rows=1 width=34) (actual time=38521.173..38528.845 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4271757.64..4271757.64 rows=1 width=26) (actual time=38521.160..38524.662 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204856.57..4271757.63 rows=1 width=26) (actual time=18118.433..38371.003 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204856.00..4271750.09 rows=1 width=38) (actual time=18118.417..38093.772 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204855.57..4271742.78 rows=1 width=34) (actual time=18116.893..37585.677 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959781.23 rows=798844 width=34) (actual time=8.273..15392.624 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874356.75 rows=19995060 width=8) (actual time=0.091..11770.043 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=8.126..8.128 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=0.825..7.470 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.022..0.027 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=0.800..7.006 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.543..0.543 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874356.75..1874356.75 rows=19995060 width=8) (actual time=18075.084..18075.084 rows=37929348 loops=1)
                                             Buckets: 8388608  Batches: 8  Memory Usage: 250561kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874356.75 rows=19995060 width=8) (actual time=0.013..12905.618 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.004..0.004 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 3.192 ms
 Execution Time: 38534.906 ms
(47 rows)

===== 22.sql jit=off =====
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163211.42..163211.45 rows=1 width=72) (actual time=1964.701..1964.704 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75321.32..75321.33 rows=1 width=32) (actual time=909.585..909.586 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75202.00 rows=47728 width=6) (actual time=0.009..876.576 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87890.09..88093.81 rows=7408 width=72) (actual time=1964.700..1964.701 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87890.09..87908.61 rows=7408 width=38) (actual time=1962.787..1963.183 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87413.94 rows=7408 width=38) (actual time=909.646..1946.386 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75202.00 rows=17500 width=26) (actual time=909.622..1612.120 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.28 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.530 ms
 Execution Time: 1965.023 ms
(21 rows)

===== 2-flattened.sql jit=off =====
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=207697.17..223697.17 rows=1600000 width=36) (actual time=2443.523..2763.235 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 1  Memory Usage: 180241kB
   ->  Nested Loop  (cost=42.10..199697.17 rows=1600000 width=10) (actual time=0.958..1824.403 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=0.934..23.633 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=0.072..0.101 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.037..0.049 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.023..0.025 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=0.679..4.207 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.412..0.412 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.004..0.081 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.667 ms
 Execution Time: 2829.829 ms
(23 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=402016.96..402016.97 rows=1 width=192) (actual time=613.957..613.969 rows=100 loops=1)
   ->  Sort  (cost=402016.96..402016.97 rows=1 width=192) (actual time=613.956..613.962 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=0.72..402016.95 rows=1 width=192) (actual time=0.081..611.608 rows=4737 loops=1)
               Join Filter: (nation.n_regionkey = region.r_regionkey)
               ->  Nested Loop  (cost=0.72..402015.88 rows=1 width=196) (actual time=0.077..606.135 rows=4737 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 43913
                     ->  Nested Loop  (cost=0.72..402014.31 rows=1 width=170) (actual time=0.069..595.844 rows=4737 loops=1)
                           ->  Nested Loop  (cost=0.43..402014.00 rows=1 width=34) (actual time=0.056..577.537 rows=4737 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..70962.00 rows=8033 width=30) (actual time=0.013..471.286 rows=8046 loops=1)
                                       Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                                       Rows Removed by Filter: 1991954
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..41.20 rows=1 width=14) (actual time=0.011..0.013 rows=1 loops=8046)
                                       Index Cond: (ps_partkey = part.p_partkey)
                                       Filter: ((SubPlan 1) = ps_supplycost)
                                       Rows Removed by Filter: 3
                                       SubPlan 1
                                         ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.002..0.002 rows=1 loops=32184)
                                               Index Cond: (ps_partkey = part.p_partkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.31 rows=1 width=144) (actual time=0.003..0.003 rows=1 loops=4737)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.001 rows=10 loops=4737)
               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=4737)
                     Filter: (r_name = 'AMERICA'::bpchar)
                     Rows Removed by Filter: 1
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.285 ms
 Execution Time: 614.023 ms
(30 rows)

DROP TABLE
===== 2.sql jit=off =====
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=724918.21..724918.21 rows=1 width=192) (actual time=3019.521..3019.552 rows=100 loops=1)
   ->  Sort  (cost=724918.21..724918.21 rows=1 width=192) (actual time=3019.519..3019.545 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Hash Join  (cost=265351.72..724918.20 rows=1 width=192) (actual time=2127.859..3017.437 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70962.00 rows=8033 width=30) (actual time=0.023..466.602 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=202288.72..202288.72 rows=1600000 width=172) (actual time=2119.302..2119.306 rows=1604080 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 180174kB
                     ->  Nested Loop  (cost=2.00..202288.72 rows=1600000 width=172) (actual time=0.143..1467.642 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.113..52.926 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.022..0.025 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.087..45.806 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.013..8.508 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.053..0.054 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.035..0.042 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.061 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=43.48..43.49 rows=1 width=32) (actual time=0.019..0.019 rows=1 loops=12783)
                       ->  Nested Loop  (cost=0.86..43.48 rows=1 width=6) (actual time=0.013..0.018 rows=1 loops=12783)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.000..0.001 rows=1 loops=12783)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..42.36 rows=4 width=10) (actual time=0.007..0.017 rows=4 loops=12783)
                                   ->  Nested Loop  (cost=0.72..41.74 rows=4 width=10) (actual time=0.006..0.013 rows=4 loops=12783)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.50 rows=4 width=10) (actual time=0.003..0.004 rows=4 loops=12783)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=51132)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=51132)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 3.231 ms
 Execution Time: 3020.365 ms
(45 rows)

===== 3.sql jit=off =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2956389.32..2956389.34 rows=10 width=44) (actual time=18668.669..18668.676 rows=10 loops=1)
   ->  Sort  (cost=2956389.32..2964246.83 rows=3143005 width=44) (actual time=18668.666..18668.672 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2812350.46..2888470.11 rows=3143005 width=44) (actual time=18591.825..18649.185 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 73745kB
               ->  Hash Join  (cost=527413.18..2555016.92 rows=3143005 width=24) (actual time=4476.245..18384.949 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874356.75 rows=32484518 width=16) (actual time=0.081..10497.649 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=509271.82..509271.82 rows=1451309 width=12) (actual time=4467.895..4467.899 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=139059.93..509271.82 rows=1451309 width=12) (actual time=947.625..4145.901 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=80717.31..431959.74 rows=7226435 width=16) (actual time=458.781..2131.375 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..78910.70 rows=7226435 width=0) (actual time=394.678..394.678 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54577.00..54577.00 rows=301250 width=4) (actual time=486.748..486.749 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54577.00 rows=301250 width=4) (actual time=0.026..434.601 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.894 ms
 Execution Time: 18685.033 ms
(29 rows)

===== 4.sql jit=off =====
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2585686.08..2585686.08 rows=1 width=24) (actual time=20512.581..20512.585 rows=1 loops=1)
   ->  Sort  (cost=2585686.08..2585686.09 rows=5 width=24) (actual time=20512.580..20512.583 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2585686.00..2585686.05 rows=5 width=24) (actual time=20512.540..20512.544 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2210050.96..2582889.85 rows=559230 width=16) (actual time=16645.922..20417.647 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7649.96..276952.48 rows=559368 width=20) (actual time=149.504..605.919 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7510.12 rows=559368 width=0) (actual time=83.954..83.954 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874356.75..1874356.75 rows=19995060 width=4) (actual time=16466.071..16466.072 rows=37929348 loops=1)
                           Buckets: 8388608  Batches: 8  Memory Usage: 232058kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874356.75 rows=19995060 width=4) (actual time=0.077..11795.267 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.457 ms
 Execution Time: 20517.336 ms
(22 rows)

===== 5.sql jit=off =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2372749.59..2372749.59 rows=1 width=58) (actual time=18631.332..18631.340 rows=1 loops=1)
   ->  Sort  (cost=2372749.59..2372749.65 rows=25 width=58) (actual time=18631.331..18631.338 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2371841.83..2372749.46 rows=25 width=58) (actual time=18606.430..18631.312 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2371841.83..2372023.29 rows=72586 width=38) (actual time=18600.284..18603.392 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=422354.07..2365981.45 rows=72586 width=38) (actual time=2242.629..18570.690 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=417638.07..2351727.05 rows=1816836 width=50) (actual time=2197.374..18106.047 rows=1815327 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=354433.56..2236288.50 rows=9084180 width=20) (actual time=1644.028..16316.529 rows=9108027 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1724393.80 rows=59985180 width=20) (actual time=0.055..5570.830 rows=59986052 loops=1)
                                       ->  Hash  (cost=326038.49..326038.49 rows=2271606 width=8) (actual time=1628.950..1628.951 rows=2276638 loops=1)
                                             Buckets: 4194304  Batches: 1  Memory Usage: 121700kB
                                             ->  Bitmap Heap Scan on orders  (cost=31052.40..326038.49 rows=2271606 width=8) (actual time=216.766..1183.592 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..30484.50 rows=2271606 width=0) (actual time=152.423..152.424 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=59454.51..59454.51 rows=300000 width=38) (actual time=551.151..551.154 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                       ->  Hash Join  (cost=2.51..59454.51 rows=300000 width=38) (actual time=0.078..485.384 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=8) (actual time=0.010..129.465 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.051..0.052 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.040..0.048 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.008..0.009 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=43.988..43.988 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.014..27.310 rows=100000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 4.795 ms
 Execution Time: 18634.926 ms
(44 rows)

===== 6.sql jit=off =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1504833.08..1504833.09 rows=1 width=32) (actual time=2831.758..2831.760 rows=1 loops=1)
   ->  Aggregate  (cost=1504833.08..1504833.09 rows=1 width=32) (actual time=2831.757..2831.758 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=300440.21..1498847.89 rows=1197038 width=12) (actual time=1303.948..2501.449 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..300140.95 rows=1197038 width=0) (actual time=1118.425..1118.425 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.882 ms
 Execution Time: 2834.333 ms
(10 rows)

===== 7.sql jit=off =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2516667.03..2516667.15 rows=1 width=116) (actual time=20013.728..20013.738 rows=1 loops=1)
   ->  GroupAggregate  (cost=2516667.03..2517879.61 rows=10096 width=116) (actual time=20013.727..20013.736 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2516667.03..2516818.62 rows=60637 width=96) (actual time=20005.476..20006.127 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1022879.61..2511850.05 rows=60637 width=96) (actual time=8571.300..19968.180 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=471784.21..1952807.72 rows=1457071 width=46) (actual time=2941.934..13933.443 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=468159.81..1866230.45 rows=18235243 width=24) (actual time=2902.561..11442.866 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..463600.99 rows=18235243 width=0) (actual time=2549.060..2549.060 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=39.318..39.322 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.075..37.962 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.027..27.232 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.034..0.035 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.026..0.028 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536095.40..536095.40 rows=1200000 width=30) (actual time=5621.379..5621.382 rows=1191175 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                           ->  Hash Join  (cost=56933.40..536095.40 rows=1200000 width=30) (actual time=488.090..5345.200 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..410912.00 rows=15000000 width=8) (actual time=0.028..2293.033 rows=15000000 loops=1)
                                 ->  Hash  (cost=55433.40..55433.40 rows=120000 width=30) (actual time=487.574..487.575 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55433.40 rows=120000 width=30) (actual time=0.050..463.570 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=8) (actual time=0.013..320.300 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.023..0.024 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.015..0.019 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 4.498 ms
 Execution Time: 20018.752 ms
(45 rows)

===== 8.sql jit=off =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2006816.19..2006816.43 rows=1 width=64) (actual time=4404.773..4404.781 rows=1 loops=1)
   ->  GroupAggregate  (cost=2006816.19..2007400.28 rows=2406 width=64) (actual time=4404.772..4404.779 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=2006816.19..2006875.74 rows=23821 width=70) (actual time=4398.731..4399.207 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=496827.98..2005084.41 rows=23821 width=70) (actual time=3243.581..4390.149 rows=23842 loops=1)
                     ->  Hash Join  (cost=496827.83..2004388.37 rows=23821 width=20) (actual time=3243.559..4375.978 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=492361.83..1999859.76 rows=23849 width=20) (actual time=3196.782..4319.371 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1505787.96 rows=392513 width=20) (actual time=0.116..1020.852 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65962.00 rows=13087 width=4) (actual time=0.079..335.345 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..109.71 rows=31 width=24) (actual time=0.004..0.049 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=480968.82..480968.82 rows=911406 width=8) (actual time=3192.236..3192.241 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=125498.48..480968.82 rows=911406 width=8) (actual time=768.594..3008.598 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=62293.97..391561.39 rows=4557028 width=12) (actual time=309.605..1604.910 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..61154.71 rows=4557028 width=0) (actual time=247.441..247.441 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59454.51..59454.51 rows=300000 width=4) (actual time=456.895..456.898 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59454.51 rows=300000 width=4) (actual time=0.100..405.352 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=8) (actual time=0.007..114.722 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.071..0.073 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.056..0.066 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.005 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=46.208..46.209 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.009..30.732 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 5.774 ms
 Execution Time: 4407.116 ms
(52 rows)

===== 9.sql jit=off =====
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3148299.14..3148299.14 rows=1 width=90) (actual time=33736.757..33736.765 rows=1 loops=1)
   ->  Sort  (cost=3148299.14..3148449.51 rows=60150 width=90) (actual time=33736.756..33736.762 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3147096.14..3147998.39 rows=60150 width=90) (actual time=33736.261..33736.673 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=2529385.27..3087272.88 rows=3418472 width=81) (actual time=23481.849..31141.984 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=2529383.70..3068230.42 rows=3418472 width=31) (actual time=23481.791..30285.074 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..410912.00 rows=15000000 width=8) (actual time=0.033..1008.725 rows=15000000 loops=1)
                           ->  Hash  (cost=2486652.80..2486652.80 rows=3418472 width=31) (actual time=23465.204..23465.208 rows=3248192 loops=1)
                                 Buckets: 4194304  Batches: 1  Memory Usage: 244992kB
                                 ->  Hash Join  (cost=485303.42..2486652.80 rows=3418472 width=31) (actual time=4002.018..22533.126 rows=3248192 loops=1)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=480837.42..2473202.17 rows=3422574 width=35) (actual time=3955.563..21426.993 rows=3248192 loops=1)
                                             Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                             ->  Hash Join  (cost=67388.43..1949243.66 rows=3422574 width=33) (actual time=624.329..15383.010 rows=3248192 loops=1)
                                                   Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                   ->  Seq Scan on lineitem  (cost=0.00..1724393.80 rows=59985180 width=29) (actual time=0.039..5469.029 rows=59986052 loops=1)
                                                   ->  Hash  (cost=65962.00..65962.00 rows=114114 width=4) (actual time=623.798..623.799 rows=108312 loops=1)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 4832kB
                                                         ->  Seq Scan on part  (cost=0.00..65962.00 rows=114114 width=4) (actual time=0.018..605.660 rows=108312 loops=1)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 1891688
                                             ->  Hash  (cost=254386.00..254386.00 rows=8000000 width=14) (actual time=3299.897..3299.897 rows=8000000 loops=1)
                                                   Buckets: 8388608  Batches: 2  Memory Usage: 253041kB
                                                   ->  Seq Scan on partsupp  (cost=0.00..254386.00 rows=8000000 width=14) (actual time=0.017..1683.071 rows=8000000 loops=1)
                                       ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=45.884..45.885 rows=100000 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.017..30.592 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.038..0.038 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.023..0.028 rows=25 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 8.289 ms
 Execution Time: 33742.181 ms
(38 rows)

