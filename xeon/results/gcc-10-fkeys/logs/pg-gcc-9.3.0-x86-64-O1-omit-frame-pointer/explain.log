===== 10.sql jit= =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2379598.33..2379598.38 rows=20 width=202) (actual time=14467.247..14467.256 rows=20 loops=1)
   ->  Sort  (cost=2379598.33..2380988.39 rows=556024 width=202) (actual time=14467.246..14467.253 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 34kB
         ->  HashAggregate  (cost=2357852.43..2364802.73 rows=556024 width=202) (actual time=14103.567..14345.248 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 258065kB
               ->  Nested Loop  (cost=2250372.05..2350902.13 rows=556024 width=182) (actual time=12037.826..13240.415 rows=1145402 loops=1)
                     ->  Merge Join  (cost=2250371.91..2337255.32 rows=556024 width=160) (actual time=12037.789..12840.256 rows=1145402 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.43..74794.43 rows=1500000 width=148) (actual time=0.027..308.089 rows=1499997 loops=1)
                           ->  Sort  (cost=2250370.90..2251760.96 rows=556024 width=16) (actual time=12037.746..12175.837 rows=1145402 loops=1)
                                 Sort Key: orders.o_custkey
                                 Sort Method: quicksort  Memory: 129805kB
                                 ->  Hash Join  (cost=284156.95..2197312.90 rows=556024 width=16) (actual time=658.842..11670.795 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1874376.95 rows=14772948 width=16) (actual time=0.072..8989.182 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 45177869
                                       ->  Hash  (cost=277099.83..277099.83 rows=564570 width=8) (actual time=654.327..654.328 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=7719.28..277099.83 rows=564570 width=8) (actual time=129.502..546.436 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233137
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7578.14 rows=564570 width=0) (actual time=75.479..75.479 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                           Cache Key: customer.c_nationkey
                           Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..2.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.296 ms
 Execution Time: 14489.836 ms
(34 rows)

===== 11.sql jit= =====
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=94747.67..94747.67 rows=1 width=36) (actual time=1110.449..1110.455 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44307.16..44307.18 rows=1 width=32) (actual time=342.910..342.913 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..41907.16 rows=320000 width=10) (actual time=0.739..250.692 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.729..3.807 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.716..3.359 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.475..0.475 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.052 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50440.50..50707.16 rows=106667 width=36) (actual time=1110.448..1110.450 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=45107.16..49907.16 rows=106667 width=36) (actual time=1110.408..1110.410 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 135185kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..41907.16 rows=320000 width=14) (actual time=0.884..342.670 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.852..5.509 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.025..0.029 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.823..4.989 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.578..0.578 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=18) (actual time=0.004..0.074 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.687 ms
 Execution Time: 1124.445 ms
(38 rows)

===== 12.sql jit= =====
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3030578.08..3031408.68 rows=1 width=27) (actual time=17661.643..17661.646 rows=1 loops=1)
   ->  GroupAggregate  (cost=3030578.08..3036392.25 rows=7 width=27) (actual time=17661.642..17661.644 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3030578.08..3031304.85 rows=290705 width=27) (actual time=17616.225..17623.334 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2477878.72..3004197.77 rows=290705 width=27) (actual time=13868.626..17550.221 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410912.00 rows=15000000 width=20) (actual time=0.018..925.022 rows=15000000 loops=1)
                     ->  Hash  (cost=2474244.91..2474244.91 rows=290705 width=15) (actual time=13866.462..13866.463 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474244.91 rows=290705 width=15) (actual time=0.199..13783.628 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.371 ms
 Execution Time: 17663.923 ms
(17 rows)

===== 13.sql jit= =====
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=656859.66..656859.66 rows=1 width=16) (actual time=16748.774..16748.777 rows=1 loops=1)
   ->  Sort  (cost=656859.66..656860.16 rows=200 width=16) (actual time=16748.772..16748.775 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=656856.66..656858.66 rows=200 width=16) (actual time=16748.732..16748.741 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=619356.66..634356.66 rows=1500000 width=12) (actual time=16276.113..16567.033 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 172049kB
                     ->  Hash Right Join  (cost=57714.43..545107.40 rows=14849852 width=8) (actual time=411.384..11385.825 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448412.00 rows=14849852 width=8) (actual time=0.022..5459.295 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38964.43..38964.43 rows=1500000 width=4) (actual time=402.973..402.974 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38964.43 rows=1500000 width=4) (actual time=0.030..157.166 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.339 ms
 Execution Time: 16783.039 ms
(22 rows)

===== 14.sql jit= =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1216174.57..1216174.59 rows=1 width=32) (actual time=2495.908..2495.911 rows=1 loops=1)
   ->  Aggregate  (cost=1216174.57..1216174.59 rows=1 width=32) (actual time=2495.907..2495.909 rows=1 loops=1)
         ->  Hash Join  (cost=106702.14..1202038.72 rows=807763 width=33) (actual time=1112.609..2142.610 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=20740.14..1113956.34 rows=807763 width=16) (actual time=280.222..921.831 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20538.19 rows=807763 width=0) (actual time=171.015..171.015 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60962.00..60962.00 rows=2000000 width=25) (actual time=824.638..824.639 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 1  Memory Usage: 131903kB
                     ->  Seq Scan on part  (cost=0.00..60962.00 rows=2000000 width=25) (actual time=0.012..383.732 rows=2000000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.216 ms
 Execution Time: 2499.195 ms
(15 rows)

===== 15.sql jit= =====
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1240581.61..1241829.67 rows=99845 width=36) (actual time=3312.108..3358.457 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=58792.06..1217682.59 rows=2289902 width=16) (actual time=531.805..1703.625 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..58219.59 rows=2289902 width=0) (actual time=358.242..358.243 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.750 ms
 Execution Time: 3365.735 ms
(11 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2485184.68..2485194.86 rows=1 width=103) (actual time=6110.055..6110.060 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1243077.74..1243077.75 rows=1 width=32) (actual time=3048.357..3048.359 rows=1 loops=1)
           ->  HashAggregate  (cost=1240581.61..1241829.67 rows=99845 width=36) (actual time=2994.113..3041.343 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=58792.06..1217682.59 rows=2289902 width=16) (actual time=466.327..1417.717 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..58219.59 rows=2289902 width=0) (actual time=298.203..298.204 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1242106.93..1247190.58 rows=499 width=103) (actual time=6110.054..6110.056 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4826.45 rows=100000 width=71) (actual time=0.008..11.888 rows=69998 loops=1)
         ->  Sort  (cost=1242106.64..1242107.89 rows=499 width=36) (actual time=6094.153..6094.154 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1240581.61..1242084.28 rows=499 width=36) (actual time=6059.898..6094.147 rows=1 loops=1)
                     ->  HashAggregate  (cost=1240581.61..1242079.29 rows=499 width=36) (actual time=6059.897..6094.144 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=58792.06..1217682.59 rows=2289902 width=16) (actual time=464.201..1417.517 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..58219.59 rows=2289902 width=0) (actual time=295.438..295.438 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.509 ms
 Execution Time: 6118.153 ms
(31 rows)

DROP VIEW
===== 16.sql jit= =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=402990.79..402990.79 rows=1 width=44) (actual time=6228.302..6228.306 rows=1 loops=1)
   ->  Sort  (cost=402990.79..403374.96 rows=153667 width=44) (actual time=6228.301..6228.304 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=393270.34..402222.46 rows=153667 width=44) (actual time=5783.091..6223.514 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=393270.34..394753.43 rows=593236 width=40) (actual time=5783.045..5889.391 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 141834kB
                     ->  Hash Join  (cost=98136.18..336384.20 rows=593236 width=40) (actual time=598.934..2940.492 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3466.46..231214.46 rows=4000000 width=8) (actual time=25.779..1520.780 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=10 width=4) (actual time=0.129..25.724 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90962.00..90962.00 rows=296618 width=40) (actual time=571.203..571.204 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90962.00 rows=296618 width=40) (actual time=0.015..497.779 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.547 ms
 Execution Time: 6235.119 ms
(27 rows)

===== 17-flattened.sql jit= =====
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5567314.08..6182157.77 rows=1935676 width=36) (actual time=35533.965..57100.443 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 4  Batches: 5  Memory Usage: 262193kB  Disk Usage: 1517688kB
   ->  Seq Scan on lineitem  (cost=0.00..1724409.96 rows=59986796 width=9) (actual time=0.028..5115.923 rows=59986052 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.650 ms
 Execution Time: 57305.593 ms
(7 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=239039.28..239039.30 rows=1 width=32) (actual time=357.883..357.885 rows=1 loops=1)
   ->  Aggregate  (cost=239039.28..239039.30 rows=1 width=32) (actual time=357.882..357.883 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..238988.92 rows=20146 width=8) (actual time=0.131..357.155 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..86142.82 rows=2015 width=21) (actual time=0.117..296.180 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70962.00 rows=2015 width=4) (actual time=0.102..280.153 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.52 rows=1 width=17) (actual time=0.007..0.007 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..75.73 rows=10 width=17) (actual time=0.012..0.030 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.858 ms
 Execution Time: 357.923 ms
(17 rows)

DROP TABLE
===== 17.sql jit= =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6424538.90..6424538.92 rows=1 width=32) (actual time=56853.344..56853.347 rows=1 loops=1)
   ->  Aggregate  (cost=6424538.90..6424538.92 rows=1 width=32) (actual time=56853.343..56853.345 rows=1 loops=1)
         ->  Nested Loop  (cost=5638301.71..6424490.16 rows=19498 width=8) (actual time=35037.948..56852.496 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5638301.27..6277582.88 rows=1950 width=40) (actual time=35035.877..56785.369 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5567314.08..6182157.77 rows=1935676 width=36) (actual time=34715.072..56291.223 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 4  Batches: 5  Memory Usage: 262193kB  Disk Usage: 1517688kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724409.96 rows=59986796 width=9) (actual time=0.016..5038.673 rows=59986052 loops=1)
                     ->  Hash  (cost=70962.00..70962.00 rows=2015 width=4) (actual time=320.698..320.699 rows=1996 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 87kB
                           ->  Seq Scan on part  (cost=0.00..70962.00 rows=2015 width=4) (actual time=0.202..320.222 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..75.21 rows=10 width=17) (actual time=0.014..0.033 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.571 ms
 Execution Time: 56998.176 ms
(22 rows)

===== 18.sql jit= =====
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9939330.34..9939330.59 rows=100 width=71) (actual time=45166.144..45166.157 rows=99 loops=1)
   ->  Sort  (cost=9939330.34..9989308.34 rows=19991200 width=71) (actual time=45166.142..45166.150 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8573983.24..9175281.05 rows=19991200 width=71) (actual time=45162.886..45166.015 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 24657kB
               ->  Hash Join  (cost=69633.96..6618593.99 rows=19991200 width=44) (actual time=1662.344..45162.163 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=56.96..6496539.94 rows=19991200 width=25) (actual time=990.623..44490.081 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729742.66 rows=4998900 width=24) (actual time=716.930..31504.508 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650439.44 rows=15000000 width=20) (actual time=0.031..3191.250 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929327.97 rows=4998900 width=4) (actual time=626.356..27451.889 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404443.50 rows=59986796 width=9) (actual time=0.073..13184.112 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404443.50 rows=59986796 width=9) (actual time=0.028..9492.238 rows=59916431 loops=1)
                     ->  Hash  (cost=50827.00..50827.00 rows=1500000 width=23) (actual time=664.022..664.023 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=23) (actual time=0.023..334.840 rows=1500000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.444 ms
 Execution Time: 45181.621 ms
(26 rows)

===== 19.sql jit= =====


 Limit  (cost=721790.10..721790.11 rows=1 width=32) (actual time=900.275..900.277 rows=1 loops=1)
   ->  Aggregate  (cost=721790.10..721790.11 rows=1 width=32) (actual time=900.274..900.275 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..721781.48 rows=1149 width=12) (actual time=4.538..899.558 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125962.00 rows=4839 width=30) (actual time=0.385..541.457 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..123.12 rows=1 width=21) (actual time=0.067..0.074 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.546 ms
 Execution Time: 900.401 ms
(13 rows)

===== 1.sql jit= =====
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3949079.92..3949079.92 rows=1 width=236) (actual time=80049.711..80049.712 rows=1 loops=1)
   ->  Sort  (cost=3949079.92..3949079.93 rows=6 width=236) (actual time=80049.710..80049.711 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3949079.72..3949079.89 rows=6 width=236) (actual time=80049.669..80049.678 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874376.95 rows=59277222 width=25) (actual time=0.075..10870.962 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.872 ms
 Execution Time: 80049.784 ms
(13 rows)

===== 20-flattened.sql jit= =====
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2110185.96..2272871.34 rows=4861722 width=40) (actual time=13296.593..20699.767 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 8  Batches: 41  Memory Usage: 262225kB  Disk Usage: 318560kB
   ->  Bitmap Heap Scan on lineitem  (cost=235972.19..1498384.86 rows=9191378 width=13) (actual time=1710.128..8662.775 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..233674.35 rows=9191378 width=0) (actual time=1402.595..1402.596 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.014 ms
 Execution Time: 20897.953 ms
(11 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=88059.21..88059.21 rows=1 width=51) (actual time=1402.045..1402.048 rows=1 loops=1)
   ->  Sort  (cost=88059.21..88059.21 rows=1 width=51) (actual time=1402.043..1402.045 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..88059.20 rows=1 width=51) (actual time=0.866..1400.293 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=55) (actual time=0.612..12.124 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.025..0.030 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=59) (actual time=0.582..11.112 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.342..0.342 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..21.40 rows=1 width=8) (actual time=0.339..0.339 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..20.91 rows=1 width=16) (actual time=0.291..0.332 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=12) (actual time=0.007..0.131 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.009..0.009 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.878 ms
 Execution Time: 1418.093 ms
(33 rows)

DROP TABLE
===== 20.sql jit= =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2438688.19..2438688.20 rows=1 width=51) (actual time=37903.639..37903.644 rows=1 loops=1)
   ->  Sort  (cost=2438688.19..2438688.20 rows=1 width=51) (actual time=37903.638..37903.642 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2176423.67..2438688.18 rows=1 width=51) (actual time=15620.314..37901.975 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182645835
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=55) (actual time=0.036..22.806 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.022..0.026 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=59) (actual time=0.009..14.675 rows=100000 loops=1)
               ->  Materialize  (cost=2176423.67..2434160.87 rows=1 width=8) (actual time=3.295..6.830 rows=44603 loops=4095)
                     ->  Nested Loop  (cost=2176423.67..2434160.87 rows=1 width=8) (actual time=13491.444..21717.592 rows=59002 loops=1)
                           ->  Hash Join  (cost=2176423.23..2400487.88 rows=53532 width=44) (actual time=13491.412..21411.314 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2110185.96..2272871.34 rows=4861722 width=40) (actual time=13144.416..20515.659 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 41  Memory Usage: 262225kB  Disk Usage: 318560kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=235972.19..1498384.86 rows=9191378 width=13) (actual time=1574.279..8503.425 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..233674.35 rows=9191378 width=0) (actual time=1276.132..1276.132 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65962.00..65962.00 rows=22022 width=4) (actual time=346.840..346.841 rows=21718 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1020kB
                                       ->  Seq Scan on part  (cost=0.00..65962.00 rows=22022 width=4) (actual time=0.034..342.474 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.005..0.005 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.941 ms
 Execution Time: 37952.643 ms
(38 rows)

===== 21.sql jit= =====
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4271859.90..4271859.91 rows=1 width=34) (actual time=35193.240..35193.255 rows=100 loops=1)
   ->  Sort  (cost=4271859.90..4271859.91 rows=1 width=34) (actual time=35193.239..35193.248 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4271859.87..4271859.89 rows=1 width=34) (actual time=35183.989..35191.991 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4271859.87..4271859.88 rows=1 width=26) (actual time=35183.976..35187.530 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204885.50..4271859.86 rows=1 width=26) (actual time=16373.731..35029.956 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204884.94..4271852.33 rows=1 width=38) (actual time=16373.712..34768.681 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204884.50..4271845.01 rows=1 width=34) (actual time=16372.237..34288.427 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959813.25 rows=799824 width=34) (actual time=7.329..13589.867 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874376.95 rows=19995599 width=8) (actual time=0.063..10038.416 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=7.193..7.195 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=0.871..6.422 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.016 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=0.856..5.941 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.610..0.610 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874376.95..1874376.95 rows=19995599 width=8) (actual time=16331.164..16331.164 rows=37929348 loops=1)
                                             Buckets: 8388608  Batches: 8  Memory Usage: 250561kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874376.95 rows=19995599 width=8) (actual time=0.012..11022.580 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.003..0.004 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 3.359 ms
 Execution Time: 35198.056 ms
(47 rows)

===== 22.sql jit= =====
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163219.94..163219.97 rows=1 width=72) (actual time=1879.882..1879.884 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75321.31..75321.32 rows=1 width=32) (actual time=910.614..910.615 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75202.00 rows=47721 width=6) (actual time=0.010..873.191 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87898.63..88101.74 rows=7386 width=72) (actual time=1879.880..1879.881 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87898.63..87917.09 rows=7386 width=38) (actual time=1878.000..1878.431 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87424.05 rows=7386 width=38) (actual time=910.673..1861.115 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75202.00 rows=17500 width=26) (actual time=910.650..1530.524 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.28 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.483 ms
 Execution Time: 1880.173 ms
(21 rows)

===== 2-flattened.sql jit= =====
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=207697.05..223697.05 rows=1600000 width=36) (actual time=2092.263..2432.378 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 1  Memory Usage: 180241kB
   ->  Nested Loop  (cost=42.10..199697.05 rows=1600000 width=10) (actual time=0.890..1426.483 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=0.870..22.351 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=0.069..0.095 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.024..0.035 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.032..0.034 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=0.657..3.948 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.411..0.411 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.061 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.558 ms
 Execution Time: 2494.402 ms
(23 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=405805.40..405805.40 rows=1 width=192) (actual time=526.497..526.509 rows=100 loops=1)
   ->  Sort  (cost=405805.40..405805.40 rows=1 width=192) (actual time=526.496..526.502 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=0.72..405805.39 rows=1 width=192) (actual time=0.071..523.819 rows=4737 loops=1)
               Join Filter: (nation.n_regionkey = region.r_regionkey)
               ->  Nested Loop  (cost=0.72..405804.31 rows=1 width=196) (actual time=0.068..518.305 rows=4737 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 43913
                     ->  Nested Loop  (cost=0.72..405802.75 rows=1 width=170) (actual time=0.061..507.624 rows=4737 loops=1)
                           ->  Nested Loop  (cost=0.43..405802.44 rows=1 width=34) (actual time=0.055..492.124 rows=4737 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..70962.00 rows=8127 width=30) (actual time=0.015..379.528 rows=8046 loops=1)
                                       Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                                       Rows Removed by Filter: 1991954
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..41.19 rows=1 width=14) (actual time=0.012..0.014 rows=1 loops=8046)
                                       Index Cond: (ps_partkey = part.p_partkey)
                                       Filter: ((SubPlan 1) = ps_supplycost)
                                       Rows Removed by Filter: 3
                                       SubPlan 1
                                         ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.002..0.002 rows=1 loops=32184)
                                               Index Cond: (ps_partkey = part.p_partkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.31 rows=1 width=144) (actual time=0.003..0.003 rows=1 loops=4737)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.001 rows=10 loops=4737)
               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=4737)
                     Filter: (r_name = 'AMERICA'::bpchar)
                     Rows Removed by Filter: 1
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.299 ms
 Execution Time: 526.558 ms
(30 rows)

DROP TABLE
===== 2.sql jit= =====
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=729009.04..729009.05 rows=1 width=192) (actual time=2908.166..2908.183 rows=100 loops=1)
   ->  Sort  (cost=729009.04..729009.05 rows=1 width=192) (actual time=2908.165..2908.176 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Hash Join  (cost=265351.60..729009.03 rows=1 width=192) (actual time=2093.366..2905.842 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70962.00 rows=8127 width=30) (actual time=0.019..378.530 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=202288.60..202288.60 rows=1600000 width=172) (actual time=2084.963..2084.967 rows=1604080 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 180174kB
                     ->  Nested Loop  (cost=2.00..202288.60 rows=1600000 width=172) (actual time=0.105..1316.155 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.079..54.407 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.014..0.017 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.061..47.095 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.011..8.562 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.028..0.029 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.011..0.017 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.053 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=43.48..43.49 rows=1 width=32) (actual time=0.019..0.020 rows=1 loops=12783)
                       ->  Nested Loop  (cost=0.86..43.48 rows=1 width=6) (actual time=0.013..0.018 rows=1 loops=12783)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=12783)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..42.36 rows=4 width=10) (actual time=0.007..0.017 rows=4 loops=12783)
                                   ->  Nested Loop  (cost=0.72..41.74 rows=4 width=10) (actual time=0.005..0.012 rows=4 loops=12783)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.50 rows=4 width=10) (actual time=0.003..0.004 rows=4 loops=12783)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=51132)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=51132)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 3.083 ms
 Execution Time: 2909.007 ms
(45 rows)

===== 3.sql jit= =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2956353.94..2956353.96 rows=10 width=44) (actual time=17433.061..17433.067 rows=10 loops=1)
   ->  Sort  (cost=2956353.94..2964200.65 rows=3138683 width=44) (actual time=17433.059..17433.064 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2812513.15..2888528.13 rows=3138683 width=44) (actual time=17351.657..17411.904 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 73745kB
               ->  Hash Join  (cost=527624.63..2555533.48 rows=3138683 width=24) (actual time=4128.853..17128.955 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874376.95 rows=32572017 width=16) (actual time=0.118..9591.463 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=509556.88..509556.88 rows=1445420 width=12) (actual time=4120.349..4120.352 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=139168.87..509556.88 rows=1445420 width=12) (actual time=831.568..3800.059 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=80847.56..432235.55 rows=7238080 width=16) (actual time=444.938..1957.197 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..79038.04 rows=7238080 width=0) (actual time=384.810..384.810 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54577.00..54577.00 rows=299545 width=4) (actual time=384.581..384.583 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54577.00 rows=299545 width=4) (actual time=0.020..328.637 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.719 ms
 Execution Time: 17448.290 ms
(29 rows)

===== 4.sql jit= =====
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2586144.40..2586144.40 rows=1 width=24) (actual time=20084.798..20084.802 rows=1 loops=1)
   ->  Sort  (cost=2586144.40..2586144.41 rows=5 width=24) (actual time=20084.797..20084.799 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2586144.33..2586144.38 rows=5 width=24) (actual time=20084.763..20084.766 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2210151.45..2583321.00 rows=564664 width=16) (actual time=16037.320..19987.981 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7721.51..277105.33 rows=564788 width=20) (actual time=149.644..549.640 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7580.32 rows=564788 width=0) (actual time=86.595..86.596 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874376.95..1874376.95 rows=19995599 width=4) (actual time=15856.912..15856.913 rows=37929348 loops=1)
                           Buckets: 8388608  Batches: 8  Memory Usage: 232058kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874376.95 rows=19995599 width=4) (actual time=0.063..10792.073 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.420 ms
 Execution Time: 20089.527 ms
(22 rows)

===== 5.sql jit= =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2373601.92..2373601.92 rows=1 width=58) (actual time=17711.694..17711.701 rows=1 loops=1)
   ->  Sort  (cost=2373601.92..2373601.98 rows=25 width=58) (actual time=17711.693..17711.699 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2372688.45..2373601.79 rows=25 width=58) (actual time=17684.906..17711.667 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2372688.45..2372871.06 rows=73042 width=38) (actual time=17678.300..17681.758 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=422826.80..2366787.96 rows=73042 width=38) (actual time=2100.608..17650.796 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=418110.80..2352485.17 rows=1826053 width=50) (actual time=2056.137..17187.430 rows=1815327 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=354906.29..2236781.63 rows=9130266 width=20) (actual time=1589.379..15489.300 rows=9108027 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1724409.96 rows=59986796 width=20) (actual time=0.049..5155.811 rows=59986052 loops=1)
                                       ->  Hash  (cost=326367.93..326367.93 rows=2283069 width=8) (actual time=1574.165..1574.166 rows=2276638 loops=1)
                                             Buckets: 4194304  Batches: 1  Memory Usage: 121700kB
                                             ->  Bitmap Heap Scan on orders  (cost=31209.89..326367.93 rows=2283069 width=8) (actual time=218.063..1111.467 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..30639.12 rows=2283069 width=0) (actual time=157.227..157.227 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=59454.51..59454.51 rows=300000 width=38) (actual time=464.503..464.506 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                       ->  Hash Join  (cost=2.51..59454.51 rows=300000 width=38) (actual time=0.095..395.609 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=8) (actual time=0.009..122.733 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.069..0.071 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.058..0.066 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.010..0.012 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=43.197..43.197 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.012..25.586 rows=100000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 5.067 ms
 Execution Time: 17715.149 ms
(44 rows)

===== 6.sql jit= =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1502692.64..1502692.65 rows=1 width=32) (actual time=2757.351..2757.353 rows=1 loops=1)
   ->  Aggregate  (cost=1502692.64..1502692.65 rows=1 width=32) (actual time=2757.350..2757.351 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=299332.27..1496745.53 rows=1189422 width=12) (actual time=1315.017..2377.146 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..299034.91 rows=1189422 width=0) (actual time=1141.924..1141.925 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.743 ms
 Execution Time: 2760.218 ms
(10 rows)

===== 7.sql jit= =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2520987.92..2520988.04 rows=1 width=116) (actual time=18571.000..18571.008 rows=1 loops=1)
   ->  GroupAggregate  (cost=2520987.92..2522207.31 rows=10100 width=116) (actual time=18570.999..18571.005 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2520987.92..2521140.48 rows=61022 width=96) (actual time=18562.254..18562.971 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1025270.46..2516137.58 rows=61022 width=96) (actual time=8374.911..18526.519 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=1021646.06..2504515.91 rows=1466303 width=46) (actual time=8338.437..18181.597 rows=1448126 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=470550.66..1870024.51 rows=18328790 width=24) (actual time=2907.159..10266.403 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..465968.47 rows=18328790 width=0) (actual time=2581.100..2581.100 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=536095.40..536095.40 rows=1200000 width=30) (actual time=5423.600..5423.604 rows=1191175 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                                 ->  Hash Join  (cost=56933.40..536095.40 rows=1200000 width=30) (actual time=450.308..5125.315 rows=1191175 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..410912.00 rows=15000000 width=8) (actual time=0.020..2201.860 rows=15000000 loops=1)
                                       ->  Hash  (cost=55433.40..55433.40 rows=120000 width=30) (actual time=449.797..449.800 rows=119622 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                             ->  Hash Join  (cost=1.40..55433.40 rows=120000 width=30) (actual time=0.047..424.011 rows=119622 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=8) (actual time=0.009..284.371 rows=1500000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.023..0.024 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.015..0.018 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=36.153..36.154 rows=7981 loops=1)
                           Buckets: 8192  Batches: 1  Memory Usage: 548kB
                           ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.065..34.594 rows=7981 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.019..24.167 rows=100000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.032..0.033 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.027..0.029 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 4.352 ms
 Execution Time: 18575.778 ms
(45 rows)

===== 8.sql jit= =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1987252.23..1987252.47 rows=1 width=64) (actual time=4152.779..4152.787 rows=1 loops=1)
   ->  GroupAggregate  (cost=1987252.23..1987828.29 rows=2406 width=64) (actual time=4152.778..4152.786 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=1987252.23..1987310.89 rows=23464 width=70) (actual time=4146.197..4146.751 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=496769.15..1985548.96 rows=23464 width=70) (actual time=2994.580..4136.830 rows=23842 loops=1)
                     ->  Hash Join  (cost=496769.01..1984862.54 rows=23464 width=20) (actual time=2994.558..4120.826 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=492303.01..1980334.94 rows=23464 width=20) (actual time=2954.789..4071.593 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1486349.05 rows=386315 width=20) (actual time=0.086..1004.302 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65962.00 rows=12880 width=4) (actual time=0.052..331.584 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..109.97 rows=31 width=24) (actual time=0.004..0.047 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=480914.09..480914.09 rows=911078 width=8) (actual time=2950.224..2950.228 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=125477.71..480914.09 rows=911078 width=8) (actual time=769.793..2764.224 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=62273.20..391516.08 rows=4555392 width=12) (actual time=325.740..1416.410 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..61134.35 rows=4555392 width=0) (actual time=265.458..265.458 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59454.51..59454.51 rows=300000 width=4) (actual time=441.922..441.925 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59454.51 rows=300000 width=4) (actual time=0.112..387.826 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=8) (actual time=0.007..116.699 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.083..0.085 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.072..0.079 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.009..0.010 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=39.233..39.233 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.013..23.229 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 5.853 ms
 Execution Time: 4155.373 ms
(52 rows)

===== 9.sql jit= =====
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3148513.44..3148513.44 rows=1 width=90) (actual time=31672.500..31672.507 rows=1 loops=1)
   ->  Sort  (cost=3148513.44..3148663.82 rows=60150 width=90) (actual time=31672.499..31672.505 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3147310.44..3148212.69 rows=60150 width=90) (actual time=31671.978..31672.417 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=2529460.84..3087413.77 rows=3422667 width=81) (actual time=21802.443..28787.713 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=2529459.28..3068347.95 rows=3422667 width=31) (actual time=21802.393..27877.517 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..410912.00 rows=15000000 width=8) (actual time=0.014..983.796 rows=15000000 loops=1)
                           ->  Hash  (cost=2486675.94..2486675.94 rows=3422667 width=31) (actual time=21785.356..21785.360 rows=3248192 loops=1)
                                 Buckets: 4194304  Batches: 1  Memory Usage: 244992kB
                                 ->  Hash Join  (cost=485303.42..2486675.94 rows=3422667 width=31) (actual time=3556.714..20857.385 rows=3248192 loops=1)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=480837.42..2473225.06 rows=3422667 width=35) (actual time=3516.840..19771.392 rows=3248192 loops=1)
                                             Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                             ->  Hash Join  (cost=67388.43..1949264.06 rows=3422667 width=33) (actual time=526.467..14141.885 rows=3248192 loops=1)
                                                   Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                   ->  Seq Scan on lineitem  (cost=0.00..1724409.96 rows=59986796 width=29) (actual time=0.024..4991.980 rows=59986052 loops=1)
                                                   ->  Hash  (cost=65962.00..65962.00 rows=114114 width=4) (actual time=525.949..525.950 rows=108312 loops=1)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 4832kB
                                                         ->  Seq Scan on part  (cost=0.00..65962.00 rows=114114 width=4) (actual time=0.011..506.767 rows=108312 loops=1)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 1891688
                                             ->  Hash  (cost=254386.00..254386.00 rows=8000000 width=14) (actual time=2943.041..2943.042 rows=8000000 loops=1)
                                                   Buckets: 8388608  Batches: 2  Memory Usage: 253041kB
                                                   ->  Seq Scan on partsupp  (cost=0.00..254386.00 rows=8000000 width=14) (actual time=0.015..1317.926 rows=8000000 loops=1)
                                       ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=39.369..39.369 rows=100000 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.035..23.339 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.033..0.034 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.019..0.024 rows=25 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 8.651 ms
 Execution Time: 31677.993 ms
(38 rows)

