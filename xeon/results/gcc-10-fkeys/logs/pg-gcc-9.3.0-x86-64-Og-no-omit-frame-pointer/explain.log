===== 10.sql jit= =====
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2382335.80..2382335.85 rows=20 width=202) (actual time=16841.288..16841.295 rows=20 loops=1)
   ->  Sort  (cost=2382335.80..2383758.64 rows=569137 width=202) (actual time=16841.286..16841.292 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 34kB
         ->  HashAggregate  (cost=2360077.06..2367191.27 rows=569137 width=202) (actual time=16435.333..16717.839 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 5  Memory Usage: 262193kB  Disk Usage: 3376kB
               ->  Nested Loop  (cost=386424.43..2352962.85 rows=569137 width=182) (actual time=1578.715..15432.681 rows=1145402 loops=1)
                     ->  Hash Join  (cost=386424.28..2338995.47 rows=569137 width=160) (actual time=1578.683..14978.052 rows=1145402 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=284620.28..2197912.48 rows=569137 width=16) (actual time=650.803..13256.225 rows=1145402 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..1874371.75 rows=14826834 width=16) (actual time=0.055..10457.338 rows=14808183 loops=1)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 45177869
                                 ->  Hash  (cost=277422.98..277422.98 rows=575784 width=8) (actual time=646.896..646.898 rows=573160 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                       ->  Bitmap Heap Scan on orders  (cost=7874.22..277422.98 rows=575784 width=8) (actual time=127.120..530.901 rows=573160 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=233137
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7730.28 rows=575784 width=0) (actual time=70.259..70.260 rows=573160 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=50827.00..50827.00 rows=1500000 width=148) (actual time=919.108..919.109 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 150358kB
                                 ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=148) (actual time=0.031..374.902 rows=1500000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                           Cache Key: customer.c_nationkey
                           Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..2.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.363 ms
 Execution Time: 16856.484 ms
(33 rows)

===== 11.sql jit= =====
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=94747.31..94747.31 rows=1 width=36) (actual time=1112.650..1112.656 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44306.98..44306.99 rows=1 width=32) (actual time=356.631..356.634 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..41906.98 rows=320000 width=10) (actual time=0.731..258.497 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.723..3.905 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.012 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.713..3.441 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.466..0.466 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.055 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50440.31..50706.98 rows=106667 width=36) (actual time=1112.648..1112.651 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=45106.98..49906.98 rows=106667 width=36) (actual time=1112.613..1112.615 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 135185kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..41906.98 rows=320000 width=14) (actual time=0.899..346.229 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.873..5.465 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.022..0.026 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.847..4.865 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.591..0.591 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=18) (actual time=0.004..0.075 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.746 ms
 Execution Time: 1126.237 ms
(38 rows)

===== 12.sql jit= =====
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3030133.67..3030953.94 rows=1 width=27) (actual time=20115.638..20115.641 rows=1 loops=1)
   ->  GroupAggregate  (cost=3030133.67..3035875.58 rows=7 width=27) (actual time=20115.636..20115.639 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3030133.67..3030851.40 rows=287092 width=27) (actual time=20064.661..20072.788 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2477824.20..3004107.12 rows=287092 width=27) (actual time=16059.251..19999.379 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410912.00 rows=15000000 width=20) (actual time=0.014..1020.071 rows=15000000 loops=1)
                     ->  Hash  (cost=2474235.55..2474235.55 rows=287092 width=15) (actual time=16057.143..16057.144 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474235.55 rows=287092 width=15) (actual time=0.182..15973.338 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.453 ms
 Execution Time: 20117.915 ms
(17 rows)

===== 13.sql jit= =====
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=656859.68..656859.69 rows=1 width=16) (actual time=17803.586..17803.589 rows=1 loops=1)
   ->  Sort  (cost=656859.68..656860.18 rows=200 width=16) (actual time=17803.584..17803.586 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=656856.68..656858.68 rows=200 width=16) (actual time=17803.541..17803.551 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=619356.68..634356.68 rows=1500000 width=12) (actual time=17275.611..17606.471 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 172049kB
                     ->  Hash Right Join  (cost=57714.43..545107.41 rows=14849855 width=8) (actual time=429.598..12270.011 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448412.00 rows=14849855 width=8) (actual time=0.022..6117.200 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38964.43..38964.43 rows=1500000 width=4) (actual time=421.223..421.224 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38964.43 rows=1500000 width=4) (actual time=0.028..163.698 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.401 ms
 Execution Time: 17837.812 ms
(22 rows)

===== 14.sql jit= =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1198100.91..1198100.93 rows=1 width=32) (actual time=2615.133..2615.136 rows=1 loops=1)
   ->  Aggregate  (cost=1198100.91..1198100.93 rows=1 width=32) (actual time=2615.131..2615.134 rows=1 loops=1)
         ->  Hash Join  (cost=105728.88..1184629.63 rows=769787 width=33) (actual time=1155.845..2231.385 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=19766.88..1096646.94 rows=769787 width=16) (actual time=288.154..954.139 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..19574.43 rows=769787 width=0) (actual time=172.220..172.220 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60962.00..60962.00 rows=2000000 width=25) (actual time=859.932..859.933 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 1  Memory Usage: 131903kB
                     ->  Seq Scan on part  (cost=0.00..60962.00 rows=2000000 width=25) (actual time=0.017..417.927 rows=2000000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.332 ms
 Execution Time: 2618.529 ms
(15 rows)

===== 15.sql jit= =====
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1240520.05..1241769.58 rows=99962 width=36) (actual time=3591.489..3640.809 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=58759.98..1217632.82 rows=2288723 width=16) (actual time=554.206..1819.403 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..58187.79 rows=2288723 width=0) (actual time=370.124..370.124 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.802 ms
 Execution Time: 3648.214 ms
(11 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2485066.30..2485076.47 rows=1 width=103) (actual time=6415.950..6415.955 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1243019.10..1243019.11 rows=1 width=32) (actual time=3212.964..3212.966 rows=1 loops=1)
           ->  HashAggregate  (cost=1240520.05..1241769.58 rows=99962 width=36) (actual time=3156.477..3205.154 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=58759.98..1217632.82 rows=2288723 width=16) (actual time=485.528..1494.272 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..58187.79 rows=2288723 width=0) (actual time=308.041..308.041 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1242047.19..1247130.85 rows=500 width=103) (actual time=6415.949..6415.951 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4826.45 rows=100000 width=71) (actual time=0.009..13.072 rows=69998 loops=1)
         ->  Sort  (cost=1242046.90..1242048.15 rows=500 width=36) (actual time=6398.396..6398.397 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1240520.05..1242024.48 rows=500 width=36) (actual time=6362.742..6398.390 rows=1 loops=1)
                     ->  HashAggregate  (cost=1240520.05..1242019.48 rows=500 width=36) (actual time=6362.740..6398.387 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=58759.98..1217632.82 rows=2288723 width=16) (actual time=483.050..1485.464 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..58187.79 rows=2288723 width=0) (actual time=305.995..305.996 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.548 ms
 Execution Time: 6424.521 ms
(31 rows)

DROP VIEW
===== 16.sql jit= =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=403697.26..403697.26 rows=1 width=44) (actual time=6645.064..6645.068 rows=1 loops=1)
   ->  Sort  (cost=403697.26..404082.93 rows=154268 width=44) (actual time=6645.062..6645.065 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=393896.26..402925.92 rows=154268 width=44) (actual time=6176.130..6640.105 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=393896.26..395393.66 rows=598958 width=40) (actual time=6176.084..6287.344 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 141834kB
                     ->  Hash Join  (cost=98171.95..336419.97 rows=598958 width=40) (actual time=707.144..3218.269 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3466.46..231214.46 rows=4000000 width=8) (actual time=30.788..1651.096 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=10 width=4) (actual time=0.177..30.730 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90962.00..90962.00 rows=299479 width=40) (actual time=674.273..674.274 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90962.00 rows=299479 width=40) (actual time=0.019..600.559 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.586 ms
 Execution Time: 6651.822 ms
(27 rows)

===== 17-flattened.sql jit= =====
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5567283.27..6182431.81 rows=1956270 width=36) (actual time=36773.354..59841.907 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 4  Batches: 5  Memory Usage: 262193kB  Disk Usage: 1517688kB
   ->  Seq Scan on lineitem  (cost=0.00..1724405.80 rows=59986380 width=9) (actual time=0.031..5459.987 rows=59986052 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.700 ms
 Execution Time: 60046.855 ms
(7 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=237135.92..237135.93 rows=1 width=32) (actual time=409.689..409.691 rows=1 loops=1)
   ->  Aggregate  (cost=237135.92..237135.93 rows=1 width=32) (actual time=409.688..409.689 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..237086.13 rows=19915 width=8) (actual time=0.147..408.911 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..85984.36 rows=1992 width=20) (actual time=0.132..344.126 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70962.00 rows=1992 width=4) (actual time=0.118..328.510 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.53 rows=1 width=16) (actual time=0.007..0.007 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..75.73 rows=10 width=17) (actual time=0.013..0.032 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.857 ms
 Execution Time: 409.729 ms
(17 rows)

DROP TABLE
===== 17.sql jit= =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6424916.49..6424916.50 rows=1 width=32) (actual time=60194.951..60194.954 rows=1 loops=1)
   ->  Aggregate  (cost=6424916.49..6424916.50 rows=1 width=32) (actual time=60194.950..60194.952 rows=1 loops=1)
         ->  Nested Loop  (cost=5638270.61..6424867.78 rows=19480 width=8) (actual time=37000.278..60194.053 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5638270.17..6278116.63 rows=1948 width=40) (actual time=36998.172..60123.753 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5567283.27..6182431.81 rows=1956270 width=36) (actual time=36622.165..59564.919 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 4  Batches: 5  Memory Usage: 262193kB  Disk Usage: 1517688kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724405.80 rows=59986380 width=9) (actual time=0.016..5408.732 rows=59986052 loops=1)
                     ->  Hash  (cost=70962.00..70962.00 rows=1992 width=4) (actual time=375.921..375.922 rows=1996 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 87kB
                           ->  Seq Scan on part  (cost=0.00..70962.00 rows=1992 width=4) (actual time=0.194..375.462 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..75.21 rows=10 width=17) (actual time=0.014..0.034 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.719 ms
 Execution Time: 60338.014 ms
(22 rows)

===== 18.sql jit= =====
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9939277.66..9939277.91 rows=100 width=71) (actual time=49450.779..49450.793 rows=99 loops=1)
   ->  Sort  (cost=9939277.66..9989254.96 rows=19990921 width=71) (actual time=49450.778..49450.786 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8573949.61..9175239.03 rows=19990921 width=71) (actual time=49447.551..49450.654 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 24657kB
               ->  Hash Join  (cost=69607.27..6618587.65 rows=19990921 width=44) (actual time=1775.855..49446.842 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=30.27..6496534.34 rows=19990921 width=25) (actual time=1082.849..48753.503 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729731.99 rows=4998865 width=24) (actual time=785.546..34632.134 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650439.44 rows=15000000 width=20) (actual time=0.040..3420.423 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929318.09 rows=4998865 width=4) (actual time=687.477..30249.594 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404437.27 rows=59986380 width=9) (actual time=0.068..14070.800 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404437.27 rows=59986380 width=9) (actual time=0.027..10423.273 rows=59916431 loops=1)
                     ->  Hash  (cost=50827.00..50827.00 rows=1500000 width=23) (actual time=685.300..685.301 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=23) (actual time=0.022..351.688 rows=1500000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.608 ms
 Execution Time: 49466.322 ms
(26 rows)

===== 19.sql jit= =====


 Limit  (cost=720518.15..720518.16 rows=1 width=32) (actual time=1100.255..1100.257 rows=1 loops=1)
   ->  Aggregate  (cost=720518.15..720518.16 rows=1 width=32) (actual time=1100.254..1100.255 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..720509.66 rows=1132 width=12) (actual time=4.875..1099.586 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125962.00 rows=4828 width=30) (actual time=0.366..668.355 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..123.14 rows=1 width=21) (actual time=0.081..0.090 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.732 ms
 Execution Time: 1100.374 ms
(13 rows)

===== 1.sql jit= =====
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3948954.24..3948954.25 rows=1 width=236) (actual time=88978.668..88978.670 rows=1 loops=1)
   ->  Sort  (cost=3948954.24..3948954.26 rows=6 width=236) (actual time=88978.667..88978.668 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3948954.05..3948954.21 rows=6 width=236) (actual time=88978.623..88978.633 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874371.75 rows=59273780 width=25) (actual time=0.060..12755.403 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.995 ms
 Execution Time: 88978.748 ms
(13 rows)

===== 20-flattened.sql jit= =====
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2110385.65..2273095.27 rows=4862121 width=40) (actual time=13656.144..21725.255 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 8  Batches: 41  Memory Usage: 262225kB  Disk Usage: 318560kB
   ->  Bitmap Heap Scan on lineitem  (cost=236019.36..1498460.08 rows=9193248 width=13) (actual time=1750.004..8754.688 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..233721.04 rows=9193248 width=0) (actual time=1426.610..1426.610 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.087 ms
 Execution Time: 21933.717 ms
(11 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=87657.98..87657.98 rows=1 width=51) (actual time=1359.116..1359.119 rows=1 loops=1)
   ->  Sort  (cost=87657.98..87657.98 rows=1 width=51) (actual time=1359.114..1359.117 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..87657.97 rows=1 width=51) (actual time=0.876..1357.344 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=55) (actual time=0.628..12.382 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.019..0.024 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=59) (actual time=0.603..11.418 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.349..0.349 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..21.30 rows=1 width=8) (actual time=0.328..0.328 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..20.81 rows=1 width=16) (actual time=0.282..0.322 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=12) (actual time=0.007..0.129 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.009..0.009 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.995 ms
 Execution Time: 1375.157 ms
(33 rows)

DROP TABLE
===== 20.sql jit= =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2438919.60..2438919.61 rows=1 width=51) (actual time=42014.348..42014.354 rows=1 loops=1)
   ->  Sort  (cost=2438919.60..2438919.61 rows=1 width=51) (actual time=42014.346..42014.351 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2176623.35..2438919.59 rows=1 width=51) (actual time=16308.710..42012.624 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182645835
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=55) (actual time=0.028..24.581 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.018..0.022 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=59) (actual time=0.006..15.635 rows=100000 loops=1)
               ->  Materialize  (cost=2176623.35..2434392.28 rows=1 width=8) (actual time=3.414..7.436 rows=44603 loops=4095)
                     ->  Nested Loop  (cost=2176623.35..2434392.28 rows=1 width=8) (actual time=13980.411..22977.222 rows=59002 loops=1)
                           ->  Hash Join  (cost=2176622.92..2400716.85 rows=53537 width=44) (actual time=13980.380..22673.927 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2110385.65..2273095.27 rows=4862121 width=40) (actual time=13600.970..21722.268 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 41  Memory Usage: 262225kB  Disk Usage: 318560kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=236019.36..1498460.08 rows=9193248 width=13) (actual time=1699.127..8695.265 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..233721.04 rows=9193248 width=0) (actual time=1384.159..1384.160 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65962.00..65962.00 rows=22022 width=4) (actual time=379.253..379.254 rows=21718 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1020kB
                                       ->  Seq Scan on part  (cost=0.00..65962.00 rows=22022 width=4) (actual time=0.033..374.644 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.005..0.005 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 3.146 ms
 Execution Time: 42061.993 ms
(38 rows)

===== 21.sql jit= =====
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4271847.04..4271847.05 rows=1 width=34) (actual time=40306.642..40306.657 rows=100 loops=1)
   ->  Sort  (cost=4271847.04..4271847.05 rows=1 width=34) (actual time=40306.641..40306.650 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4271847.01..4271847.03 rows=1 width=34) (actual time=40297.158..40305.384 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4271847.01..4271847.02 rows=1 width=26) (actual time=40297.146..40300.512 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204878.57..4271847.00 rows=1 width=26) (actual time=18962.607..40141.636 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204878.00..4271839.46 rows=1 width=38) (actual time=18962.591..39873.795 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204877.57..4271832.15 rows=1 width=34) (actual time=18960.943..39387.106 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959807.47 rows=799818 width=34) (actual time=7.340..15914.814 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874371.75 rows=19995460 width=8) (actual time=0.062..12084.788 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=7.209..7.211 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=0.899..6.459 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=0.886..6.004 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.600..0.600 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874371.75..1874371.75 rows=19995460 width=8) (actual time=18920.077..18920.077 rows=37929348 loops=1)
                                             Buckets: 8388608  Batches: 8  Memory Usage: 250561kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874371.75 rows=19995460 width=8) (actual time=0.012..13113.105 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.004..0.004 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 3.485 ms
 Execution Time: 40307.734 ms
(47 rows)

===== 22.sql jit= =====
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163222.98..163223.01 rows=1 width=72) (actual time=2049.858..2049.861 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75321.46..75321.47 rows=1 width=32) (actual time=1004.669..1004.670 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75202.00 rows=47784 width=6) (actual time=0.008..962.130 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87901.51..88104.43 rows=7379 width=72) (actual time=2049.857..2049.858 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87901.51..87919.96 rows=7379 width=38) (actual time=2047.751..2048.209 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87427.44 rows=7379 width=38) (actual time=1004.726..2031.390 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75202.00 rows=17500 width=26) (actual time=1004.704..1688.421 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.28 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.541 ms
 Execution Time: 2050.155 ms
(21 rows)

===== 2-flattened.sql jit= =====
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=207696.13..223696.13 rows=1600000 width=36) (actual time=2194.575..2540.161 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 1  Memory Usage: 180241kB
   ->  Nested Loop  (cost=42.10..199696.13 rows=1600000 width=10) (actual time=0.944..1521.491 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=0.925..23.112 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=0.084..0.111 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.054..0.064 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.020..0.021 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=0.691..4.116 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.437..0.437 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.065 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.574 ms
 Execution Time: 2604.634 ms
(23 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=408549.97..408549.97 rows=1 width=192) (actual time=572.126..572.140 rows=100 loops=1)
   ->  Sort  (cost=408549.97..408549.97 rows=1 width=192) (actual time=572.125..572.133 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=0.72..408549.96 rows=1 width=192) (actual time=0.075..569.531 rows=4737 loops=1)
               Join Filter: (nation.n_regionkey = region.r_regionkey)
               ->  Nested Loop  (cost=0.72..408548.88 rows=1 width=196) (actual time=0.071..563.438 rows=4737 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 43913
                     ->  Nested Loop  (cost=0.72..408547.32 rows=1 width=170) (actual time=0.063..552.165 rows=4737 loops=1)
                           ->  Nested Loop  (cost=0.43..408547.01 rows=1 width=34) (actual time=0.052..536.855 rows=4737 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..70962.00 rows=8195 width=30) (actual time=0.013..429.220 rows=8046 loops=1)
                                       Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                                       Rows Removed by Filter: 1991954
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..41.18 rows=1 width=14) (actual time=0.011..0.013 rows=1 loops=8046)
                                       Index Cond: (ps_partkey = part.p_partkey)
                                       Filter: ((SubPlan 1) = ps_supplycost)
                                       Rows Removed by Filter: 3
                                       SubPlan 1
                                         ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.002..0.002 rows=1 loops=32184)
                                               Index Cond: (ps_partkey = part.p_partkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.31 rows=1 width=144) (actual time=0.003..0.003 rows=1 loops=4737)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.001 rows=10 loops=4737)
               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=4737)
                     Filter: (r_name = 'AMERICA'::bpchar)
                     Rows Removed by Filter: 1
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.386 ms
 Execution Time: 572.190 ms
(30 rows)

DROP TABLE
===== 2.sql jit= =====
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=731968.09..731968.10 rows=1 width=192) (actual time=3075.605..3075.623 rows=100 loops=1)
   ->  Sort  (cost=731968.09..731968.10 rows=1 width=192) (actual time=3075.604..3075.616 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Hash Join  (cost=265350.68..731968.08 rows=1 width=192) (actual time=2135.690..3073.137 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70962.00 rows=8195 width=30) (actual time=0.017..486.473 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=202287.68..202287.68 rows=1600000 width=172) (actual time=2127.152..2127.156 rows=1604080 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 180174kB
                     ->  Nested Loop  (cost=2.00..202287.68 rows=1600000 width=172) (actual time=0.094..1405.119 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.066..61.540 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.017..0.020 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.046..52.595 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.007..9.164 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.020..0.021 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.006..0.012 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.056 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=43.48..43.49 rows=1 width=32) (actual time=0.020..0.020 rows=1 loops=12783)
                       ->  Nested Loop  (cost=0.86..43.48 rows=1 width=6) (actual time=0.014..0.019 rows=1 loops=12783)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=12783)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..42.36 rows=4 width=10) (actual time=0.007..0.018 rows=4 loops=12783)
                                   ->  Nested Loop  (cost=0.72..41.74 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=12783)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.50 rows=4 width=10) (actual time=0.003..0.004 rows=4 loops=12783)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=51132)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=51132)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 3.385 ms
 Execution Time: 3076.450 ms
(45 rows)

===== 3.sql jit= =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2955338.16..2955338.18 rows=10 width=44) (actual time=19112.607..19112.613 rows=10 loops=1)
   ->  Sort  (cost=2955338.16..2963176.69 rows=3135414 width=44) (actual time=19112.605..19112.610 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2811647.18..2887582.99 rows=3135414 width=44) (actual time=19025.892..19090.014 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 73745kB
               ->  Hash Join  (cost=527057.15..2554935.16 rows=3135414 width=24) (actual time=4208.542..18787.156 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874371.75 rows=32573899 width=16) (actual time=0.073..10925.475 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=509009.26..509009.26 rows=1443831 width=12) (actual time=4199.802..4199.805 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=138940.23..509009.26 rows=1443831 width=12) (actual time=888.153..3854.798 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=80612.11..431736.48 rows=7216990 width=16) (actual time=472.203..1881.673 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..78807.86 rows=7216990 width=0) (actual time=410.164..410.164 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54577.00..54577.00 rows=300090 width=4) (actual time=413.878..413.879 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54577.00 rows=300090 width=4) (actual time=0.016..354.454 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.874 ms
 Execution Time: 19128.254 ms
(29 rows)

===== 4.sql jit= =====
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2585597.32..2585597.32 rows=1 width=24) (actual time=22419.579..22419.582 rows=1 loops=1)
   ->  Sort  (cost=2585597.32..2585597.33 rows=5 width=24) (actual time=22419.577..22419.580 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2585597.25..2585597.30 rows=5 width=24) (actual time=22419.534..22419.538 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2210050.68..2582808.01 rows=557848 width=16) (actual time=18160.144..22312.716 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7627.68..276909.30 rows=557975 width=20) (actual time=153.068..575.627 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7488.19 rows=557975 width=0) (actual time=88.198..88.199 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874371.75..1874371.75 rows=19995460 width=4) (actual time=17976.988..17976.988 rows=37929348 loops=1)
                           Buckets: 8388608  Batches: 8  Memory Usage: 232058kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874371.75 rows=19995460 width=4) (actual time=0.065..12526.517 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.595 ms
 Execution Time: 22424.052 ms
(22 rows)

===== 5.sql jit= =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2372497.96..2372497.96 rows=1 width=58) (actual time=19217.584..19217.592 rows=1 loops=1)
   ->  Sort  (cost=2372497.96..2372498.02 rows=25 width=58) (actual time=19217.583..19217.590 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2371590.64..2372497.84 rows=25 width=58) (actual time=19187.796..19217.564 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2371590.64..2371772.01 rows=72551 width=38) (actual time=19180.459..19184.216 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=422195.30..2365733.34 rows=72551 width=38) (actual time=2221.730..19151.275 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=417479.30..2351495.07 rows=1813763 width=50) (actual time=2173.566..18675.417 rows=1815327 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=354274.79..2236144.88 rows=9068813 width=20) (actual time=1671.979..16870.090 rows=9108027 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1724405.80 rows=59986380 width=20) (actual time=0.047..5578.364 rows=59986052 loops=1)
                                       ->  Hash  (cost=325928.31..325928.31 rows=2267718 width=8) (actual time=1656.961..1656.962 rows=2276638 loops=1)
                                             Buckets: 4194304  Batches: 1  Memory Usage: 121700kB
                                             ->  Bitmap Heap Scan on orders  (cost=31000.54..325928.31 rows=2267718 width=8) (actual time=224.010..1164.186 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..30433.62 rows=2267718 width=0) (actual time=160.016..160.016 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=59454.51..59454.51 rows=300000 width=38) (actual time=499.361..499.364 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                       ->  Hash Join  (cost=2.51..59454.51 rows=300000 width=38) (actual time=0.079..427.631 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=8) (actual time=0.010..130.916 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.052..0.054 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.041..0.050 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.009..0.011 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=46.870..46.871 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.013..27.177 rows=100000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 5.334 ms
 Execution Time: 19220.472 ms
(44 rows)

===== 6.sql jit= =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1505443.74..1505443.75 rows=1 width=32) (actual time=2887.538..2887.539 rows=1 loops=1)
   ->  Aggregate  (cost=1505443.74..1505443.75 rows=1 width=32) (actual time=2887.536..2887.537 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=300766.57..1499447.87 rows=1199173 width=12) (actual time=1495.070..2513.270 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..300466.78 rows=1199173 width=0) (actual time=1317.336..1317.336 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.825 ms
 Execution Time: 2889.585 ms
(10 rows)

===== 7.sql jit= =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2521109.95..2521110.07 rows=1 width=116) (actual time=19001.905..19001.913 rows=1 loops=1)
   ->  GroupAggregate  (cost=2521109.95..2522329.53 rows=10104 width=116) (actual time=19001.904..19001.910 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2521109.95..2521262.52 rows=61030 width=96) (actual time=18991.729..18992.517 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1025340.67..2516258.91 rows=61030 width=96) (actual time=8511.954..18951.535 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=1021716.27..2504636.11 rows=1466508 width=46) (actual time=8472.515..18598.078 rows=1448126 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=470620.87..1870133.08 rows=18331347 width=24) (actual time=2809.190..10259.321 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..466038.03 rows=18331347 width=0) (actual time=2474.838..2474.838 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=536095.40..536095.40 rows=1200000 width=30) (actual time=5655.809..5655.812 rows=1191175 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                                 ->  Hash Join  (cost=56933.40..536095.40 rows=1200000 width=30) (actual time=472.390..5357.045 rows=1191175 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..410912.00 rows=15000000 width=8) (actual time=0.018..2273.069 rows=15000000 loops=1)
                                       ->  Hash  (cost=55433.40..55433.40 rows=120000 width=30) (actual time=471.886..471.888 rows=119622 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                             ->  Hash Join  (cost=1.40..55433.40 rows=120000 width=30) (actual time=0.045..445.759 rows=119622 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=8) (actual time=0.009..283.537 rows=1500000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.021..0.022 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.013..0.016 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=39.117..39.119 rows=7981 loops=1)
                           Buckets: 8192  Batches: 1  Memory Usage: 548kB
                           ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.049..37.547 rows=7981 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.016..24.821 rows=100000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.019..0.020 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.014..0.016 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 4.709 ms
 Execution Time: 19005.859 ms
(45 rows)

===== 8.sql jit= =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2001541.70..2001541.95 rows=1 width=64) (actual time=4225.839..4225.847 rows=1 loops=1)
   ->  GroupAggregate  (cost=2001541.70..2002125.12 rows=2406 width=64) (actual time=4225.838..4225.845 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=2001541.70..2001601.18 rows=23791 width=70) (actual time=4218.333..4218.940 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=497186.05..1999812.32 rows=23791 width=70) (actual time=3173.053..4208.862 rows=23842 loops=1)
                     ->  Hash Join  (cost=497185.90..1999117.09 rows=23791 width=20) (actual time=3173.034..4193.918 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=492719.90..1994588.64 rows=23791 width=20) (actual time=3129.225..4139.841 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1500166.06 rows=390721 width=20) (actual time=0.098..906.543 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65962.00 rows=13027 width=4) (actual time=0.064..291.705 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..109.78 rows=31 width=24) (actual time=0.003..0.043 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=481302.56..481302.56 rows=913352 width=8) (actual time=3124.679..3124.683 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=125630.25..481302.56 rows=913352 width=8) (actual time=818.192..2924.887 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=62425.75..391839.18 rows=4566762 width=12) (actual time=340.143..1453.190 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..61284.06 rows=4566762 width=0) (actual time=277.086..277.086 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59454.51..59454.51 rows=300000 width=4) (actual time=475.953..475.956 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59454.51 rows=300000 width=4) (actual time=0.074..417.393 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=8) (actual time=0.006..124.384 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.051..0.053 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.042..0.050 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.011..0.012 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=43.278..43.278 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.009..25.147 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 6.340 ms
 Execution Time: 4227.831 ms
(52 rows)

===== 9.sql jit= =====
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3148506.91..3148506.91 rows=1 width=90) (actual time=34534.722..34534.728 rows=1 loops=1)
   ->  Sort  (cost=3148506.91..3148657.28 rows=60150 width=90) (actual time=34534.720..34534.726 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3147303.91..3148206.16 rows=60150 width=90) (actual time=34534.189..34534.633 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=2529455.10..3087407.65 rows=3422643 width=81) (actual time=23961.253..31347.230 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=2529453.54..3068341.97 rows=3422643 width=31) (actual time=23961.210..30341.878 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..410912.00 rows=15000000 width=8) (actual time=0.018..1069.188 rows=15000000 loops=1)
                           ->  Hash  (cost=2486670.50..2486670.50 rows=3422643 width=31) (actual time=23944.596..23944.600 rows=3248192 loops=1)
                                 Buckets: 4194304  Batches: 1  Memory Usage: 244992kB
                                 ->  Hash Join  (cost=485303.42..2486670.50 rows=3422643 width=31) (actual time=4162.777..22955.574 rows=3248192 loops=1)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=480837.42..2473219.68 rows=3422643 width=35) (actual time=4119.659..21811.031 rows=3248192 loops=1)
                                             Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                             ->  Hash Join  (cost=67388.43..1949258.81 rows=3422643 width=33) (actual time=582.880..15486.575 rows=3248192 loops=1)
                                                   Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                   ->  Seq Scan on lineitem  (cost=0.00..1724405.80 rows=59986380 width=29) (actual time=0.058..5405.473 rows=59986052 loops=1)
                                                   ->  Hash  (cost=65962.00..65962.00 rows=114114 width=4) (actual time=582.330..582.331 rows=108312 loops=1)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 4832kB
                                                         ->  Seq Scan on part  (cost=0.00..65962.00 rows=114114 width=4) (actual time=0.011..561.620 rows=108312 loops=1)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 1891688
                                             ->  Hash  (cost=254386.00..254386.00 rows=8000000 width=14) (actual time=3477.224..3477.224 rows=8000000 loops=1)
                                                   Buckets: 8388608  Batches: 2  Memory Usage: 253041kB
                                                   ->  Seq Scan on partsupp  (cost=0.00..254386.00 rows=8000000 width=14) (actual time=0.009..1675.139 rows=8000000 loops=1)
                                       ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=42.582..42.582 rows=100000 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.017..24.838 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.028..0.028 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.014..0.018 rows=25 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 9.308 ms
 Execution Time: 34539.765 ms
(38 rows)

