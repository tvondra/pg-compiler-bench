===== 10.sql jit= =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2379464.43..2379464.48 rows=20 width=201) (actual time=14354.518..14354.527 rows=20 loops=1)
   ->  Sort  (cost=2379464.43..2380852.65 rows=555286 width=201) (actual time=14354.517..14354.523 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 34kB
         ->  HashAggregate  (cost=2357747.40..2364688.47 rows=555286 width=201) (actual time=13984.592..14240.727 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 258065kB
               ->  Nested Loop  (cost=2250304.01..2350806.32 rows=555286 width=181) (actual time=11924.802..13135.670 rows=1145402 loops=1)
                     ->  Merge Join  (cost=2250303.86..2337177.55 rows=555286 width=159) (actual time=11924.766..12745.929 rows=1145402 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.43..74794.88 rows=1500000 width=147) (actual time=0.028..327.278 rows=1499997 loops=1)
                           ->  Sort  (cost=2250303.43..2251691.65 rows=555286 width=16) (actual time=11924.722..12064.505 rows=1145402 loops=1)
                                 Sort Key: orders.o_custkey
                                 Sort Method: quicksort  Memory: 129805kB
                                 ->  Hash Join  (cost=284071.94..2197321.17 rows=555286 width=16) (actual time=654.501..11564.490 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1874381.30 rows=14806827 width=16) (actual time=0.075..8887.374 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 45177869
                                       ->  Hash  (cost=277040.32..277040.32 rows=562530 width=8) (actual time=650.099..650.100 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=7690.37..277040.32 rows=562530 width=8) (actual time=127.326..539.987 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233137
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7549.74 rows=562530 width=0) (actual time=73.483..73.483 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                           Cache Key: customer.c_nationkey
                           Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..2.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.226 ms
 Execution Time: 14376.106 ms
(34 rows)

===== 11.sql jit= =====
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=94747.17..94747.18 rows=1 width=36) (actual time=1073.008..1073.014 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=44306.91..44306.93 rows=1 width=32) (actual time=343.272..343.275 rows=1 loops=1)
           ->  Nested Loop  (cost=47.72..41906.91 rows=320000 width=10) (actual time=0.707..257.181 rows=320800 loops=1)
                 ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.698..3.777 rows=4010 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.686..3.343 rows=4010 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=1857
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.447..0.447 rows=4010 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.054 rows=80 loops=4010)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=50440.25..50706.91 rows=106667 width=36) (actual time=1073.007..1073.009 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=45106.91..49906.91 rows=106667 width=36) (actual time=1072.970..1072.972 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 135185kB
               Rows Removed by Filter: 301833
               ->  Nested Loop  (cost=47.72..41906.91 rows=320000 width=14) (actual time=0.849..338.794 rows=320800 loops=1)
                     ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=4) (actual time=0.818..5.135 rows=4010 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.027..0.030 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=8) (actual time=0.787..4.611 rows=4010 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=1857
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.524..0.524 rows=4010 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=18) (actual time=0.004..0.074 rows=80 loops=4010)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.600 ms
 Execution Time: 1086.320 ms
(38 rows)

===== 12.sql jit= =====
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3030234.28..3031056.53 rows=1 width=27) (actual time=16898.459..16898.461 rows=1 loops=1)
   ->  GroupAggregate  (cost=3030234.28..3035990.05 rows=7 width=27) (actual time=16898.457..16898.459 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3030234.28..3030953.74 rows=287785 width=27) (actual time=16855.426..16862.804 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 36606kB
               ->  Hash Join  (cost=2477850.05..3004139.90 rows=287785 width=27) (actual time=12946.175..16790.463 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..410912.00 rows=15000000 width=20) (actual time=0.017..1008.748 rows=15000000 loops=1)
                     ->  Hash  (cost=2474252.74..2474252.74 rows=287785 width=15) (actual time=12944.041..12944.042 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474252.74 rows=287785 width=15) (actual time=0.200..12857.300 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.346 ms
 Execution Time: 16900.740 ms
(17 rows)

===== 13.sql jit= =====
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=656745.18..656745.18 rows=1 width=16) (actual time=17058.273..17058.276 rows=1 loops=1)
   ->  Sort  (cost=656745.18..656745.68 rows=200 width=16) (actual time=17058.272..17058.274 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=656742.18..656744.18 rows=200 width=16) (actual time=17058.234..17058.243 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=619242.18..634242.18 rows=1500000 width=12) (actual time=16547.864..16876.323 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 172049kB
                     ->  Hash Right Join  (cost=57714.43..545067.99 rows=14834838 width=8) (actual time=416.738..11552.396 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448412.00 rows=14834838 width=8) (actual time=0.022..5657.843 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=38964.43..38964.43 rows=1500000 width=4) (actual time=408.285..408.286 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 69119kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..38964.43 rows=1500000 width=4) (actual time=0.029..164.148 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.337 ms
 Execution Time: 17092.628 ms
(22 rows)

===== 14.sql jit= =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1204192.86..1204192.88 rows=1 width=32) (actual time=2371.126..2371.129 rows=1 loops=1)
   ->  Aggregate  (cost=1204192.86..1204192.88 rows=1 width=32) (actual time=2371.125..2371.127 rows=1 loops=1)
         ->  Hash Join  (cost=106044.34..1190503.97 rows=782222 width=33) (actual time=1063.444..2039.234 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=20082.34..1102488.64 rows=782222 width=16) (actual time=275.249..877.750 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416660
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..19886.78 rows=782222 width=0) (actual time=167.574..167.574 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60962.00..60962.00 rows=2000000 width=25) (actual time=780.477..780.478 rows=2000000 loops=1)
                     Buckets: 2097152  Batches: 1  Memory Usage: 131903kB
                     ->  Seq Scan on part  (cost=0.00..60962.00 rows=2000000 width=25) (actual time=0.017..352.263 rows=2000000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.253 ms
 Execution Time: 2374.191 ms
(15 rows)

===== 15.sql jit= =====
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1239808.75..1241058.92 rows=100013 width=36) (actual time=3386.353..3432.158 rows=100000 loops=1)
   Group Key: l_suppkey
   Batches: 1  Memory Usage: 47121kB
   ->  Bitmap Heap Scan on lineitem  (cost=58399.95..1217062.03 rows=2274672 width=16) (actual time=525.721..1738.132 rows=2265714 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         Heap Blocks: exact=668609
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..57831.29 rows=2274672 width=0) (actual time=352.417..352.417 rows=2265714 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.726 ms
 Execution Time: 3439.109 ms
(11 rows)

CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2483645.74..2483655.91 rows=1 width=103) (actual time=6102.595..6102.600 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1242309.08..1242309.09 rows=1 width=32) (actual time=3039.978..3039.980 rows=1 loops=1)
           ->  HashAggregate  (cost=1239808.75..1241058.92 rows=100013 width=36) (actual time=2988.055..3033.497 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=58399.95..1217062.03 rows=2274672 width=16) (actual time=455.945..1432.398 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=668609
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..57831.29 rows=2274672 width=0) (actual time=288.799..288.799 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1241336.65..1246420.32 rows=500 width=103) (actual time=6102.594..6102.596 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4826.45 rows=100000 width=71) (actual time=0.008..13.456 rows=69998 loops=1)
         ->  Sort  (cost=1241336.36..1241337.61 rows=500 width=36) (actual time=6084.819..6084.820 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1239808.75..1241313.95 rows=500 width=36) (actual time=6051.780..6084.813 rows=1 loops=1)
                     ->  HashAggregate  (cost=1239808.75..1241308.95 rows=500 width=36) (actual time=6051.780..6084.811 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=58399.95..1217062.03 rows=2274672 width=16) (actual time=454.930..1436.861 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=668609
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..57831.29 rows=2274672 width=0) (actual time=288.037..288.037 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.487 ms
 Execution Time: 6110.362 ms
(31 rows)

DROP VIEW
===== 16.sql jit= =====
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=403440.67..403440.67 rows=1 width=44) (actual time=6408.872..6408.875 rows=1 loops=1)
   ->  Sort  (cost=403440.67..403825.80 rows=154051 width=44) (actual time=6408.870..6408.873 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=393668.91..402670.42 rows=154051 width=44) (actual time=5979.201..6404.298 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=393668.91..395161.11 rows=596880 width=40) (actual time=5979.159..6087.281 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 141834kB
                     ->  Hash Join  (cost=98158.96..336406.98 rows=596880 width=40) (actual time=627.415..3066.852 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3466.46..231214.46 rows=4000000 width=8) (actual time=28.971..1617.031 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3466.00 rows=10 width=4) (actual time=0.128..28.900 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90962.00..90962.00 rows=298440 width=40) (actual time=596.407..596.408 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90962.00 rows=298440 width=40) (actual time=0.019..522.145 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.492 ms
 Execution Time: 6415.336 ms
(27 rows)

===== 17-flattened.sql jit= =====
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=5567339.85..6182248.90 rows=1939806 width=36) (actual time=35117.937..56903.601 rows=2000000 loops=1)
   Group Key: l_partkey
   Planned Partitions: 4  Batches: 5  Memory Usage: 262193kB  Disk Usage: 1517688kB
   ->  Seq Scan on lineitem  (cost=0.00..1724413.44 rows=59987144 width=9) (actual time=0.032..5321.653 rows=59986052 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.652 ms
 Execution Time: 57111.955 ms
(7 rows)

SELECT 2000000
CREATE INDEX
ANALYZE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238790.34..238790.35 rows=1 width=32) (actual time=356.483..356.485 rows=1 loops=1)
   ->  Aggregate  (cost=238790.34..238790.35 rows=1 width=32) (actual time=356.482..356.483 rows=1 loops=1)
         ->  Nested Loop  (cost=0.87..238740.05 rows=20116 width=8) (actual time=0.129..355.719 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Nested Loop  (cost=0.43..86121.46 rows=2012 width=20) (actual time=0.113..294.189 rows=1996 loops=1)
                     ->  Seq Scan on part  (cost=0.00..70962.00 rows=2012 width=4) (actual time=0.099..278.796 rows=1996 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 1998004
                     ->  Index Scan using idx_tmp_avg_quantity on tmp_avg_quantity part_agg  (cost=0.43..7.52 rows=1 width=16) (actual time=0.007..0.007 rows=1 loops=1996)
                           Index Cond: (agg_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..75.73 rows=10 width=17) (actual time=0.012..0.030 rows=3 loops=1996)
                     Index Cond: (l_partkey = part_agg.agg_partkey)
                     Filter: (l_quantity < part_agg.avg_quantity)
                     Rows Removed by Filter: 27
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.798 ms
 Execution Time: 356.521 ms
(17 rows)

DROP TABLE
===== 17.sql jit= =====
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6424756.38..6424756.40 rows=1 width=32) (actual time=57410.474..57410.477 rows=1 loops=1)
   ->  Aggregate  (cost=6424756.38..6424756.40 rows=1 width=32) (actual time=57410.472..57410.475 rows=1 loops=1)
         ->  Nested Loop  (cost=5638327.44..6424707.61 rows=19510 width=8) (actual time=35057.643..57409.602 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=5638327.00..6277726.11 rows=1951 width=40) (actual time=35055.654..57341.216 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=5567339.85..6182248.90 rows=1939806 width=36) (actual time=34727.249..56835.875 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 4  Batches: 5  Memory Usage: 262193kB  Disk Usage: 1517688kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724413.44 rows=59987144 width=9) (actual time=0.016..5243.112 rows=59986052 loops=1)
                     ->  Hash  (cost=70962.00..70962.00 rows=2012 width=4) (actual time=328.322..328.323 rows=1996 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 87kB
                           ->  Seq Scan on part  (cost=0.00..70962.00 rows=2012 width=4) (actual time=0.185..327.817 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..75.21 rows=10 width=17) (actual time=0.014..0.033 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.437 ms
 Execution Time: 57558.004 ms
(22 rows)

===== 18.sql jit= =====
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9939401.86..9939402.11 rows=100 width=71) (actual time=48713.975..48713.988 rows=99 loops=1)
   ->  Sort  (cost=9939401.86..9989380.44 rows=19991432 width=71) (actual time=48713.973..48713.981 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=8574038.91..9175343.70 rows=19991432 width=71) (actual time=48710.743..48713.808 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 24657kB
               ->  Hash Join  (cost=69648.93..6618626.97 rows=19991432 width=44) (actual time=1752.874..48710.068 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=71.93..6496572.31 rows=19991432 width=25) (actual time=1076.667..48033.540 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3729751.57 rows=4998929 width=24) (actual time=759.868..33424.621 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..650439.44 rows=15000000 width=20) (actual time=0.035..3571.994 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2929336.23 rows=4998929 width=4) (actual time=658.412..28936.506 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2404448.73 rows=59987144 width=9) (actual time=0.068..14998.183 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2404448.73 rows=59987144 width=9) (actual time=0.029..10854.667 rows=59916431 loops=1)
                     ->  Hash  (cost=50827.00..50827.00 rows=1500000 width=23) (actual time=668.527..668.528 rows=1500000 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 98416kB
                           ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=23) (actual time=0.022..345.776 rows=1500000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.436 ms
 Execution Time: 48729.350 ms
(26 rows)

===== 19.sql jit= =====


 Limit  (cost=721790.26..721790.27 rows=1 width=32) (actual time=1002.797..1002.799 rows=1 loops=1)
   ->  Aggregate  (cost=721790.26..721790.27 rows=1 width=32) (actual time=1002.796..1002.797 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..721781.70 rows=1140 width=12) (actual time=4.705..1002.116 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125962.00 rows=4839 width=30) (actual time=0.340..584.496 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..123.12 rows=1 width=21) (actual time=0.078..0.087 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.547 ms
 Execution Time: 1002.892 ms
(13 rows)

===== 1.sql jit= =====
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3948963.37..3948963.38 rows=1 width=236) (actual time=75744.261..75744.262 rows=1 loops=1)
   ->  Sort  (cost=3948963.37..3948963.39 rows=6 width=236) (actual time=75744.260..75744.260 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3948963.18..3948963.34 rows=6 width=236) (actual time=75744.218..75744.227 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874381.30 rows=59273768 width=25) (actual time=0.064..11093.326 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.861 ms
 Execution Time: 75744.331 ms
(13 rows)

===== 20-flattened.sql jit= =====
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2102025.14..2263710.66 rows=4844594 width=40) (actual time=13485.782..20911.847 rows=5448842 loops=1)
   Group Key: l_partkey, l_suppkey
   Planned Partitions: 8  Batches: 41  Memory Usage: 262225kB  Disk Usage: 318560kB
   ->  Bitmap Heap Scan on lineitem  (cost=234016.40..1495287.92 rows=9115301 width=13) (actual time=1706.190..8871.895 rows=9123688 loops=1)
         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
         Heap Blocks: exact=1048319
         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231737.58 rows=9115301 width=0) (actual time=1398.568..1398.568 rows=9123688 loops=1)
               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.994 ms
 Execution Time: 21114.075 ms
(11 rows)

SELECT 5448842
CREATE INDEX
ANALYZE
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=87551.43..87551.43 rows=1 width=51) (actual time=1324.904..1324.907 rows=1 loops=1)
   ->  Sort  (cost=87551.43..87551.43 rows=1 width=51) (actual time=1324.903..1324.905 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=48.59..87551.42 rows=1 width=51) (actual time=0.840..1323.240 rows=1821 loops=1)
               ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=55) (actual time=0.593..11.957 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.019..0.022 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=59) (actual time=0.570..11.038 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1867
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.329..0.330 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=1.30..21.28 rows=1 width=8) (actual time=0.320..0.320 rows=0 loops=4095)
                     Join Filter: (supplier.s_suppkey = agg_lineitem.agg_suppkey)
                     ->  Nested Loop  (cost=0.87..20.78 rows=1 width=16) (actual time=0.274..0.313 rows=1 loops=4095)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=12) (actual time=0.006..0.128 rows=61 loops=4095)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                           ->  Memoize  (cost=0.44..0.48 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=248000)
                                 Cache Key: partsupp.ps_partkey
                                 Hits: 11702  Misses: 236298  Evictions: 0  Overflows: 0  Memory Usage: 15783kB
                                 ->  Index Scan using part_pkey on part  (cost=0.43..0.47 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=236298)
                                       Index Cond: (p_partkey = partsupp.ps_partkey)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using idx_tmp_agg_lineitem on tmp_agg_lineitem agg_lineitem  (cost=0.43..0.48 rows=1 width=13) (actual time=0.009..0.009 rows=1 loops=2732)
                           Index Cond: ((agg_partkey = partsupp.ps_partkey) AND (agg_suppkey = partsupp.ps_suppkey))
                           Filter: ((partsupp.ps_availqty)::numeric > agg_quantity)
                           Rows Removed by Filter: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.853 ms
 Execution Time: 1340.785 ms
(33 rows)

DROP TABLE
===== 20.sql jit= =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2429223.48..2429223.48 rows=1 width=51) (actual time=42819.011..42819.016 rows=1 loops=1)
   ->  Sort  (cost=2429223.48..2429223.48 rows=1 width=51) (actual time=42819.010..42819.014 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2168262.85..2429223.47 rows=1 width=51) (actual time=15770.068..42817.353 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182645835
               ->  Nested Loop  (cost=0.00..4467.31 rows=4000 width=55) (actual time=0.034..22.999 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.017..0.020 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=59) (actual time=0.013..14.948 rows=100000 loops=1)
               ->  Materialize  (cost=2168262.85..2424696.16 rows=1 width=8) (actual time=3.324..7.565 rows=44603 loops=4095)
                     ->  Nested Loop  (cost=2168262.85..2424696.15 rows=1 width=8) (actual time=13613.261..21942.582 rows=59002 loops=1)
                           ->  Hash Join  (cost=2168262.41..2391110.96 rows=53344 width=44) (actual time=13613.230..21647.457 rows=59125 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=2102025.14..2263710.66 rows=4844594 width=40) (actual time=13263.388..20736.600 rows=5448842 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 41  Memory Usage: 262225kB  Disk Usage: 318560kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=234016.40..1495287.92 rows=9115301 width=13) (actual time=1553.178..8648.635 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=1048319
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231737.58 rows=9115301 width=0) (actual time=1253.652..1253.652 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=65962.00..65962.00 rows=22022 width=4) (actual time=349.688..349.689 rows=21718 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1020kB
                                       ->  Seq Scan on part  (cost=0.00..65962.00 rows=22022 width=4) (actual time=0.027..344.881 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..0.62 rows=1 width=12) (actual time=0.005..0.005 rows=1 loops=59125)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.749 ms
 Execution Time: 42867.532 ms
(38 rows)

===== 21.sql jit= =====
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4271867.15..4271867.15 rows=1 width=34) (actual time=35356.346..35356.361 rows=100 loops=1)
   ->  Sort  (cost=4271867.15..4271867.15 rows=1 width=34) (actual time=35356.344..35356.354 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=4271867.12..4271867.14 rows=1 width=34) (actual time=35347.412..35355.143 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=4271867.12..4271867.12 rows=1 width=26) (actual time=35347.399..35350.814 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3378kB
                     ->  Nested Loop Semi Join  (cost=2204892.30..4271867.11 rows=1 width=26) (actual time=16431.819..35195.368 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42023
                           ->  Nested Loop  (cost=2204891.74..4271859.57 rows=1 width=38) (actual time=16431.803..34939.016 rows=65960 loops=1)
                                 ->  Hash Anti Join  (cost=2204891.30..4271852.25 rows=1 width=34) (actual time=16430.229..34474.771 rows=134155 loops=1)
                                       Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 547662
                                       ->  Hash Join  (cost=2454.57..1959817.05 rows=799725 width=34) (actual time=7.216..13766.163 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..1874381.30 rows=19995715 width=8) (actual time=0.105..10124.873 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                             ->  Hash  (cost=2404.57..2404.57 rows=4000 width=30) (actual time=7.041..7.043 rows=3991 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                   ->  Nested Loop  (cost=47.29..2404.57 rows=4000 width=30) (actual time=0.863..6.287 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.035..0.038 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=47.29..2363.25 rows=4000 width=34) (actual time=0.825..5.832 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=1873
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..46.29 rows=4000 width=0) (actual time=0.575..0.575 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=1874381.30..1874381.30 rows=19995715 width=8) (actual time=16389.896..16389.897 rows=37929348 loops=1)
                                             Buckets: 8388608  Batches: 8  Memory Usage: 250561kB
                                             ->  Seq Scan on lineitem l3  (cost=0.00..1874381.30 rows=19995715 width=8) (actual time=0.012..11068.630 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..7.32 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=134155)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..7.52 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 3.162 ms
 Execution Time: 35361.197 ms
(47 rows)

===== 22.sql jit= =====
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163189.15..163189.18 rows=1 width=72) (actual time=1726.333..1726.336 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75321.35..75321.36 rows=1 width=32) (actual time=810.888..810.889 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75202.00 rows=47741 width=6) (actual time=0.007..774.306 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87867.79..88073.05 rows=7464 width=72) (actual time=1726.332..1726.333 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87867.79..87886.45 rows=7464 width=38) (actual time=1724.511..1724.951 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..87387.64 rows=7464 width=38) (actual time=810.943..1708.504 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75202.00 rows=17500 width=26) (actual time=810.919..1391.509 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..3.28 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.369 ms
 Execution Time: 1726.647 ms
(21 rows)

===== 2-flattened.sql jit= =====
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=207695.80..223695.80 rows=1600000 width=36) (actual time=2059.609..2412.610 rows=1182884 loops=1)
   Group Key: partsupp.ps_partkey
   Batches: 1  Memory Usage: 180241kB
   ->  Nested Loop  (cost=42.10..199695.80 rows=1600000 width=10) (actual time=0.886..1426.054 rows=1604080 loops=1)
         ->  Nested Loop  (cost=41.67..2184.07 rows=20000 width=4) (actual time=0.871..21.431 rows=20051 loops=1)
               ->  Nested Loop  (cost=0.14..13.95 rows=5 width=4) (actual time=0.076..0.102 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Index Scan using nation_pkey on nation  (cost=0.14..12.51 rows=25 width=8) (actual time=0.030..0.040 rows=25 loops=1)
                     ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=25)
                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.035..0.037 rows=1 loops=1)
                                 Filter: (r_name = 'AMERICA'::bpchar)
                                 Rows Removed by Filter: 4
               ->  Bitmap Heap Scan on supplier  (cost=41.53..394.02 rows=4000 width=8) (actual time=0.647..3.785 rows=4010 loops=5)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=9388
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..40.53 rows=4000 width=0) (actual time=0.409..0.409 rows=4010 loops=5)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.062 rows=80 loops=20051)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.471 ms
 Execution Time: 2474.464 ms
(23 rows)

SELECT 1182884
CREATE INDEX
ANALYZE
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=401007.40..401007.40 rows=1 width=192) (actual time=544.595..544.608 rows=100 loops=1)
   ->  Sort  (cost=401007.40..401007.40 rows=1 width=192) (actual time=544.594..544.601 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=0.72..401007.39 rows=1 width=192) (actual time=0.065..542.283 rows=4737 loops=1)
               Join Filter: (nation.n_regionkey = region.r_regionkey)
               ->  Nested Loop  (cost=0.72..401006.31 rows=1 width=196) (actual time=0.062..536.861 rows=4737 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 43913
                     ->  Nested Loop  (cost=0.72..401004.75 rows=1 width=170) (actual time=0.055..526.046 rows=4737 loops=1)
                           ->  Nested Loop  (cost=0.43..401004.44 rows=1 width=34) (actual time=0.049..511.167 rows=4737 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..70962.00 rows=8008 width=30) (actual time=0.011..407.890 rows=8046 loops=1)
                                       Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                                       Rows Removed by Filter: 1991954
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..41.20 rows=1 width=14) (actual time=0.011..0.012 rows=1 loops=8046)
                                       Index Cond: (ps_partkey = part.p_partkey)
                                       Filter: ((SubPlan 1) = ps_supplycost)
                                       Rows Removed by Filter: 3
                                       SubPlan 1
                                         ->  Index Scan using tmp_supplycost_idx on tmp_supplycost  (cost=0.43..8.45 rows=1 width=6) (actual time=0.002..0.002 rows=1 loops=32184)
                                               Index Cond: (ps_partkey = part.p_partkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.31 rows=1 width=144) (actual time=0.003..0.003 rows=1 loops=4737)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.001 rows=10 loops=4737)
               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=4737)
                     Filter: (r_name = 'AMERICA'::bpchar)
                     Rows Removed by Filter: 1
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.221 ms
 Execution Time: 544.655 ms
(30 rows)

DROP TABLE
===== 2.sql jit= =====
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=723829.36..723829.36 rows=1 width=192) (actual time=3017.610..3017.626 rows=100 loops=1)
   ->  Sort  (cost=723829.36..723829.36 rows=1 width=192) (actual time=3017.608..3017.619 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Hash Join  (cost=265350.35..723829.35 rows=1 width=192) (actual time=2116.667..3015.199 rows=4737 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..70962.00 rows=8008 width=30) (actual time=0.016..464.787 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Hash  (cost=202287.35..202287.35 rows=1600000 width=172) (actual time=2108.234..2108.238 rows=1604080 loops=1)
                     Buckets: 2097152  Batches: 2  Memory Usage: 180174kB
                     ->  Nested Loop  (cost=2.00..202287.35 rows=1600000 width=172) (actual time=0.107..1357.217 rows=1604080 loops=1)
                           ->  Nested Loop  (cost=1.56..4775.62 rows=20000 width=166) (actual time=0.082..57.969 rows=20051 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79949
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.015..0.018 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                                 ->  Hash Join  (cost=1.56..3524.56 rows=100000 width=170) (actual time=0.064..50.346 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=144) (actual time=0.016..8.986 rows=100000 loops=1)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.029..0.029 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.014..0.020 rows=25 loops=1)
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.08 rows=80 width=14) (actual time=0.003..0.054 rows=80 loops=20051)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=43.48..43.49 rows=1 width=32) (actual time=0.019..0.019 rows=1 loops=12783)
                       ->  Nested Loop  (cost=0.86..43.48 rows=1 width=6) (actual time=0.013..0.018 rows=1 loops=12783)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.000..0.001 rows=1 loops=12783)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.86..42.36 rows=4 width=10) (actual time=0.006..0.017 rows=4 loops=12783)
                                   ->  Nested Loop  (cost=0.72..41.74 rows=4 width=10) (actual time=0.005..0.012 rows=4 loops=12783)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.50 rows=4 width=10) (actual time=0.003..0.004 rows=4 loops=12783)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=51132)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=51132)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 2.964 ms
 Execution Time: 3018.433 ms
(45 rows)

===== 3.sql jit= =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2955809.50..2955809.53 rows=10 width=44) (actual time=17163.792..17163.799 rows=10 loops=1)
   ->  Sort  (cost=2955809.50..2963653.31 rows=3137522 width=44) (actual time=17163.790..17163.795 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=2812021.92..2888008.78 rows=3137522 width=44) (actual time=17083.220..17143.241 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 73745kB
               ->  Hash Join  (cost=527226.22..2555137.31 rows=3137522 width=24) (actual time=4063.980..16868.222 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874381.30 rows=32574551 width=16) (actual time=0.080..9270.587 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=509166.56..509166.56 rows=1444773 width=12) (actual time=4055.551..4055.554 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 78767kB
                           ->  Hash Join  (cost=139006.29..509166.56 rows=1444773 width=12) (actual time=818.666..3729.511 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=80678.86..431878.63 rows=7223022 width=16) (actual time=434.407..1863.337 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=260912
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..78873.10 rows=7223022 width=0) (actual time=374.393..374.393 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54577.00..54577.00 rows=300035 width=4) (actual time=382.223..382.225 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54577.00 rows=300035 width=4) (actual time=0.018..325.686 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.718 ms
 Execution Time: 17178.959 ms
(29 rows)

===== 4.sql jit= =====
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2585546.80..2585546.80 rows=1 width=24) (actual time=19920.531..19920.535 rows=1 loops=1)
   ->  Sort  (cost=2585546.80..2585546.81 rows=5 width=24) (actual time=19920.530..19920.533 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2585546.72..2585546.77 rows=5 width=24) (actual time=19920.471..19920.475 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Hash Semi Join  (cost=2210055.52..2582761.78 rows=556988 width=16) (actual time=15868.567..19823.971 rows=513822 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Bitmap Heap Scan on orders  (cost=7618.78..276887.39 rows=557107 width=20) (actual time=145.932..555.139 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231732
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7479.51 rows=557107 width=0) (actual time=83.640..83.640 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Hash  (cost=1874381.30..1874381.30 rows=19995715 width=4) (actual time=15692.109..15692.110 rows=37929348 loops=1)
                           Buckets: 8388608  Batches: 8  Memory Usage: 232058kB
                           ->  Seq Scan on lineitem  (cost=0.00..1874381.30 rows=19995715 width=4) (actual time=0.062..10660.673 rows=37929348 loops=1)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 22056704
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 1.322 ms
 Execution Time: 19925.231 ms
(22 rows)

===== 5.sql jit= =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2372702.85..2372702.85 rows=1 width=58) (actual time=18186.364..18186.372 rows=1 loops=1)
   ->  Sort  (cost=2372702.85..2372702.91 rows=25 width=58) (actual time=18186.363..18186.370 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2371794.56..2372702.72 rows=25 width=58) (actual time=18160.574..18186.343 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2371794.56..2371976.13 rows=72628 width=38) (actual time=18154.219..18157.801 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=422307.19..2365930.49 rows=72628 width=38) (actual time=2128.115..18127.208 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Hash Join  (cost=417591.19..2351680.55 rows=1815987 width=50) (actual time=2083.082..17660.553 rows=1815327 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=354386.68..2236266.42 rows=9079934 width=20) (actual time=1606.502..15922.449 rows=9108027 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1724413.44 rows=59987144 width=20) (actual time=0.045..5412.255 rows=59986052 loops=1)
                                       ->  Hash  (cost=326005.80..326005.80 rows=2270470 width=8) (actual time=1591.197..1591.198 rows=2276638 loops=1)
                                             Buckets: 4194304  Batches: 1  Memory Usage: 121700kB
                                             ->  Bitmap Heap Scan on orders  (cost=31036.75..326005.80 rows=2270470 width=8) (actual time=212.295..1128.728 rows=2276638 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   Heap Blocks: exact=260897
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..30469.14 rows=2270470 width=0) (actual time=151.238..151.238 rows=2276638 loops=1)
                                                         Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=59454.51..59454.51 rows=300000 width=38) (actual time=474.261..474.264 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                       ->  Hash Join  (cost=2.51..59454.51 rows=300000 width=38) (actual time=0.082..406.296 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=8) (actual time=0.012..124.734 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.053..0.055 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.043..0.051 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.009..0.010 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.019..0.020 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=43.749..43.749 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.015..25.793 rows=100000 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 4.911 ms
 Execution Time: 18189.947 ms
(44 rows)

===== 6.sql jit= =====
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1504372.26..1504372.27 rows=1 width=32) (actual time=2716.040..2716.042 rows=1 loops=1)
   ->  Aggregate  (cost=1504372.26..1504372.27 rows=1 width=32) (actual time=2716.039..2716.039 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=300290.28..1498398.65 rows=1194722 width=12) (actual time=1257.848..2346.767 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=662932
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..299991.60 rows=1194722 width=0) (actual time=1083.649..1083.649 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 0.734 ms
 Execution Time: 2718.909 ms
(10 rows)

===== 7.sql jit= =====
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2515941.32..2515941.44 rows=1 width=116) (actual time=19092.531..19092.538 rows=1 loops=1)
   ->  GroupAggregate  (cost=2515941.32..2517154.16 rows=10100 width=116) (actual time=19092.529..19092.536 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2515941.32..2516092.94 rows=60648 width=96) (actual time=19084.186..19084.913 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=1022453.24..2511123.39 rows=60648 width=96) (actual time=8330.916..19048.481 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=471357.84..1952079.63 rows=1457332 width=46) (actual time=2797.503..13091.538 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=467733.44..1865560.62 rows=18219012 width=24) (actual time=2760.397..10550.546 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=1119491
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..463178.68 rows=18219012 width=0) (actual time=2443.355..2443.355 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3524.40..3524.40 rows=8000 width=30) (actual time=37.035..37.037 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3524.40 rows=8000 width=30) (actual time=0.069..35.503 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.022..24.372 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.031..0.031 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.023..0.025 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536095.40..536095.40 rows=1200000 width=30) (actual time=5525.464..5525.467 rows=1191175 loops=1)
                           Buckets: 2097152  Batches: 1  Memory Usage: 88506kB
                           ->  Hash Join  (cost=56933.40..536095.40 rows=1200000 width=30) (actual time=450.954..5235.717 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..410912.00 rows=15000000 width=8) (actual time=0.018..2191.056 rows=15000000 loops=1)
                                 ->  Hash  (cost=55433.40..55433.40 rows=120000 width=30) (actual time=450.447..450.449 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55433.40 rows=120000 width=30) (actual time=0.041..424.891 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=8) (actual time=0.009..280.455 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.019..0.019 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.012..0.014 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 4.260 ms
 Execution Time: 19097.351 ms
(45 rows)

===== 8.sql jit= =====
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2000677.33..2000677.57 rows=1 width=64) (actual time=3983.786..3983.794 rows=1 loops=1)
   ->  GroupAggregate  (cost=2000677.33..2001261.54 rows=2406 width=64) (actual time=3983.785..3983.792 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=2000677.33..2000736.90 rows=23826 width=70) (actual time=3977.397..3977.972 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=497635.62..1998945.15 rows=23826 width=70) (actual time=2968.863..3968.678 rows=23842 loops=1)
                     ->  Hash Join  (cost=497635.47..1998248.97 rows=23826 width=20) (actual time=2968.843..3952.958 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=493169.47..1993720.42 rows=23829 width=20) (actual time=2928.901..3903.333 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.44..1498849.45 rows=390306 width=20) (actual time=0.083..868.628 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65962.00 rows=13013 width=4) (actual time=0.053..265.044 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..109.80 rows=31 width=24) (actual time=0.003..0.042 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=481721.86..481721.86 rows=915774 width=8) (actual time=2924.375..2924.379 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 43753kB
                                       ->  Hash Join  (cost=125798.34..481721.86 rows=915774 width=8) (actual time=762.929..2733.165 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=62593.83..392188.85 rows=4578868 width=12) (actual time=312.620..1342.077 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=260912
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..61449.11 rows=4578868 width=0) (actual time=253.616..253.616 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59454.51..59454.51 rows=300000 width=4) (actual time=448.191..448.194 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59454.51 rows=300000 width=4) (actual time=0.090..394.295 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50827.00 rows=1500000 width=8) (actual time=0.007..118.578 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.067..0.069 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.055..0.064 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.009 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.030..0.031 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.025..0.026 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=39.417..39.417 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.013..23.116 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..2.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..2.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 5.663 ms
 Execution Time: 3986.113 ms
(52 rows)

===== 9.sql jit= =====
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3007348.92..3007348.92 rows=1 width=90) (actual time=31332.729..31332.736 rows=1 loops=1)
   ->  Sort  (cost=3007348.92..3007499.30 rows=60150 width=90) (actual time=31332.727..31332.733 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3006145.92..3007048.17 rows=60150 width=90) (actual time=31332.214..31332.650 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=2400223.38..2952560.82 rows=3062006 width=81) (actual time=21069.195..28544.762 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=2400221.82..2935503.88 rows=3062006 width=31) (actual time=21069.155..27611.294 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..410912.00 rows=15000000 width=8) (actual time=0.017..1026.888 rows=15000000 loops=1)
                           ->  Hash  (cost=2361946.75..2361946.75 rows=3062006 width=31) (actual time=21051.997..21052.001 rows=3248192 loops=1)
                                 Buckets: 4194304  Batches: 1  Memory Usage: 244992kB
                                 ->  Hash Join  (cost=1999520.36..2361946.75 rows=3062006 width=31) (actual time=15630.995..20182.702 rows=3248192 loops=1)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=1995054.36..2349441.59 rows=3062404 width=35) (actual time=15590.713..19521.456 rows=3248192 loops=1)
                                             Hash Cond: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND (partsupp.ps_partkey = lineitem.l_partkey))
                                             ->  Seq Scan on partsupp  (cost=0.00..254386.00 rows=8000000 width=14) (actual time=0.009..556.700 rows=8000000 loops=1)
                                             ->  Hash  (cost=1949118.30..1949118.30 rows=3062404 width=33) (actual time=15573.780..15573.782 rows=3248192 loops=1)
                                                   Buckets: 4194304  Batches: 1  Memory Usage: 248226kB
                                                   ->  Hash Join  (cost=67238.27..1949118.30 rows=3062404 width=33) (actual time=557.817..14607.803 rows=3248192 loops=1)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Seq Scan on lineitem  (cost=0.00..1724413.44 rows=59987144 width=29) (actual time=0.029..5269.173 rows=59986052 loops=1)
                                                         ->  Hash  (cost=65962.00..65962.00 rows=102102 width=4) (actual time=557.192..557.193 rows=108312 loops=1)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 4832kB
                                                               ->  Seq Scan on part  (cost=0.00..65962.00 rows=102102 width=4) (actual time=0.012..537.299 rows=108312 loops=1)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                     Rows Removed by Filter: 1891688
                                       ->  Hash  (cost=3216.00..3216.00 rows=100000 width=8) (actual time=39.733..39.733 rows=100000 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                             ->  Seq Scan on supplier  (cost=0.00..3216.00 rows=100000 width=8) (actual time=0.015..23.540 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.024..0.024 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.012..0.016 rows=25 loops=1)
 Settings: effective_io_concurrency = '64', jit = 'off', maintenance_io_concurrency = '64', max_parallel_workers_per_gather = '0', work_mem = '256MB'
 Planning Time: 8.419 ms
 Execution Time: 31339.731 ms
(38 rows)

